,title,score,id,subreddit,url,num_comments,body,created,date_created
0,Keep a Brag Document,374,h972k3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h972k3/keep_a_brag_document/,45,"Hi everyone,

Thought I'd share some advice that has helped me so far in my Software career. It has to do with recording your wins at work - hope you like it!

\-----

The human brain is terrible at remembering information.

When we try to use the past to predict the future, we end up using *our memory* of the past. And our memory is extremely flawed, subject to whims and emotions.

One of the biggest consequences of this is at work.

You clock in 9-5 for days on days and then when you look back at what you did a year ago, you think “Where did all that time go?”

Even worse, if YOU can’t remember what the hell you did, how will your boss?

In an ideal world: you do a great job, your company rewards you. They’ll notice all the hard work you’re putting in. All the beautiful lines of code you’ve written.

But we don’t live in an ideal world. And the costliest mistake you can make in your career is not being proactive about recording your achievements and your little wins.

**Enter The Brag Document**

I first read about a Brag Document on [Julia Evan’s blog](https://jvns.ca/blog/brag-documents/#template).

By recording your small wins and accomplishments on a weekly basis, you accumulate concrete evidence of what you’ve achieved.

And these “wins” don’t need to be Olympic Gold Medals.

Did you help a coworker understand how to use an API? Jot it down.

Did you anticipate a nasty bug and proactively reach out about it? It goes on there.

Did you help mentor a junior employee? That’s definitely part of it.

Over time, I promise you, your brag document will do wonders for your career.

Sure - negotiating a raise or getting a promotion will become easier. In fact, come performance review time, even your boss will thank you for it. Those things are hard to write from pure memory. More on this a bit later.

But the biggest benefit of a brag document lies in identifying *what you enjoy doing*.

Your wins are likely a representation of tasks you enjoyed. And you should be very proactive about focusing on those tasks going forward.

Use your Brag Document to ruthlessly identify the tasks you want to spend more time on, as well as the tasks you don’t want to do anymore.

**The Pareto Principle**

The Pareto Principle states that 80% of the effects come from 20% of the causes.

At work, 80% of what you can feel proud about will stem from 20% of what you do. You can think of your Brag Document as representing that 20%.

Use this 20% to ask yourself questions like:

* Is there a common theme amongst this work?
* Are there topics here that I thought I didn’t actually like but turns out I do?
* How much of this work involves collaboration with other departments / teams?
* How can I do more of this work?

**Frequency**

Update your brag document on a weekly basis. You can set it as a recurring event on your calendar.

The biggest benefit of this is that it forces you to scrutinize your output on a regular basis and allows you to be proactive about focusing on the work you want to do.

Let’s say that after a few weeks of work, you genuinely have nothing to put on your brag document.

There’s a chance you had a bit of a slow period at work, but maybe you’re just stuck somewhere you don’t want to be?

**Collaborate**

Talk about your brag document with co-workers. Ask them what you think you should put on yours.

You’ll often find that they’re able to mention things you completely forgot or didn’t even seem to think about.

Remember - just because something seems easy *to you* doesn’t mean it’s easy in general. 5 minutes of work may have taken you 10 years to learn.

You should also encourage your team to keep their own brag documents. Help each other be accountable and celebrate each other’s wins. This builds a strong team culture.

**Your Manager**

You should try to share your brag document with your manager once a quarter.

It might seem **weird** or **unnatural** \- you’re basically dumping all your achievements into their lap. But this actually really makes their life easier.

If your manager ever needs to vouch for you internally, then boom - they have direct evidence they can use. If your manager needs to reshuffle workload, then they know what you’re good at and what you can improve on.

Even better, you and your manager should go through your brag document together.

Tell them what you want to do more of. Tell them what you wish was on there more.

You’ll both be able to identify areas in which you’re doing a great job and also areas in which your manager perhaps wants you to focus on more.

Another aspect that’s helpful here is with goal setting - your manager and you likely work together anyway to determine quarterly goals.

You should use your brag document to help you identify what type of goals you need to be hitting. Very often, we will achieve goals and then think “Wait..what was the point again?”

By using your brag document to set goals, you’ll be much more likely to be working towards something that you find rewarding.

**Ending thoughts**

Once you start getting in the habit of using a brag document, operating without one will feel like doing your work in the dark.

Over time, you’ll develop a much clearer picture of the type of work that you want to focus on for your career.

If you liked this post, feel free to check out the whole article with nice illustrations [here](https://www.careerfair.io/reviews/howtobragatwork).",1592216405.0,2020-06-15 06:20:05
1,[Meta] Time to crack down in questions from inexperienced developers?,357,f6a7t5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f6a7t5/meta_time_to_crack_down_in_questions_from/,157,"Unfortunately there has been a trend of more and more questions from inexperienced developers, often still in school, being asked here instead of on /r/cscareerquestions. Allowing these in this sub is just going to turn it into a smaller version of that sub.

A few examples just from today:

* https://old.reddit.com/r/ExperiencedDevs/comments/f64n4x/do_referrals_help_at_least_get_an_interview_at/
* https://old.reddit.com/r/ExperiencedDevs/comments/f5prs2/how_important_do_you_find_knowledge_of/
* https://old.reddit.com/r/ExperiencedDevs/comments/f5xex6/career_change_advice/

As far as I know, this sub is a sub intended for **experienced** developers to ask questions to other experienced developers. Not for inexperienced devs. 

Pinging: /u/kormapls, /u/anuaps, /u/kgalang

My proposal:

* Clear rules on the type of content that is allowed and disallowed
* Close / lock topics from inexperienced developers, point them towards the rules and /r/cscareerquestions in a friendly manner.
* For contributors: don't answer these questions, instead point to the FAQ/ rules.",1582144898.0,2020-02-19 15:41:38
2,My bosses keep asking me what they can do to help further my career goals. My goal is to do bare minimum and stay under the radar until I retire. How can I phrase that in a way that makes me look like I give a shit about my job?,296,k5cxdz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k5cxdz/my_bosses_keep_asking_me_what_they_can_do_to_help/,68,"I kept debating, project management or architectural lead. Which do I want to be?? Turns out all I like to do is make music in between meetings and assignments. I don’t like jobs. I don’t like working. I never want to have to be in 8 hours of meetings. 

I want the absolute bare min responsibilities so I can work flexible hours and take an extra 2 hour lunch if I’m really into the song I’m making. 

Call me whatever, lazy, etc., but society should’ve achieved a 20 hour work week 100 years ago.

What direction should I go in to keep this lifestyle up? I don’t want to become a Zoom meeting guy like my manager.

Edit: there’s no point in me replying to everyone bc I don’t have much to add. You all gave excellent and helpful responses. Thank you so much",1606956551.0,2020-12-02 19:49:11
3,"To all my past senior colleages that dealt with my junior self, I'm VERY Sorry",253,itbgv5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/itbgv5/to_all_my_past_senior_colleages_that_dealt_with/,41,"I""m really really sorry for being a pedantic, insecure , overcritical and shortsighted prick.

As the old adage say ***What goes around comes around***  and I now know how irritating it is to deal with people like myself",1600213890.0,2020-09-15 19:51:30
4,Random mistakes and opportunities after 14 years as an ecommerce web developer,224,inl1na,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/inl1na/random_mistakes_and_opportunities_after_14_years/,30,"* Built my brand, but associated it with things in my life that weren't work related. I made the mistake of tying my Github username to all sorts of random other accounts, so if you google me, you will see my projects, website, AND my favorite games that I played in 2012.
* Got in to arguments about code quality and following conventions, to the point where I was feared by older members on the team. At the time I convinced myself that it was a 100% valid expectation to have every team member competent in the newest frontend hotness. I threw React and modern ECMAScript in to the stack and expected everyone else to be as excited as I was to use it. Oh was I wrong... And when they didn't seem to get it, I got defensive and turned in to a jerk. Don't be this guy.
* Code always comes second to revenue. You should be able to quantify any library you add to the stack in terms of ROI. Otherwise it is at best undefined risk, and at worst, a performance degradation that could harm ROI. We're here to build things that make money. 
* Don't treat it like a competition. I always pushed myself to be the most knowledgable member on the team, but what I came off as is not a team member, but an ass. It's not worth being the best if no one can work with you because you've zoomed off towards some new language or paradigm that the team hasn't adopted.
* Ask lots of simple questions. I set a low bar for the types of questions I ask because it helps bring everyone in the conversation up to the same level of understanding, it can catch projects straying from their key tenants, and it also defuses the ""know it all"" mentality that I've carried for a large portion of my career.
* Dug in deep. I spent 6 years being underpaid (salary $67k-$95k) working on a really well known brand's web experience. My salary was low, but my resume was incredibly rich. I was able to field offers for $150k+ without even looking. I took the bait and left, but only after I felt like I learned everything that was on the table.
* Spend money on a really nice office. It's your domain, dedicate some cash to the best desk, chair, monitor, keyboard etc. that you can afford.
* Pick your poison and commit to it. I've worked at agencies where every job is a different stack, and I've spent 6 years on a specific platform. I was scared to get locked in to a subset of jobs on this platform, so I quit my job and went back to generalized frontend development. It ended up being a mistake for me because I was getting paid $105k a year when I could have been making $150k a year as a specialist.
* Talk about money in the open. I do this with all of my close friends in the industry, and it was eye opening to hear what they made and how they achieved it. Once I was able to talk openly about my salary, it made it very easy to do negotiations when I was in interviews along with giving me confidence to turn down lower paying offers.
* You don't have to be a manager. I always thought that was the progression in this career. I knew that I would not make a good manager, so I've decided to continue programming indefinitely. So far it's worked out fairly well.
* Making mistakes is fine, just fix them quickly and learn from them. I've made a borderline egregious number of both technical and professional in my career, some of which I've documented here. They're all reminders for how to be better in the future. If you're not making mistakes, are you learning at full capacity? Just don't burn the house down.",1599423375.0,2020-09-06 16:16:15
5,Not so obvious hints gauge a developer while interviewing them,220,gsu8i0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gsu8i0/not_so_obvious_hints_gauge_a_developer_while/,72,"Throughout my career I have interviewed dozens of candidate and I have developed some theory of filtering out bad apples.

When I started, I used to go to interview help websites and collect toughest questions available. However soon I realised that

1) It does not filter the bad apples - those people already memorised answers to such questions

2) It actually harms the good candidate who were not fortunate enough to read such question before. Due to the pressure of interview they might not even come up with an answer of their own.

Slowly I started evaluating people after they are hired and I get to work with them. I keep a very detailed log of interviews - right from the question I asked, to how they responded - sometimes even their expressions.

One thing that stood out to me very clearly is that developers who went extra mile to make the code clear, readable and happy to explain it over and over again - were my best hires.

Hence it became my mantra while interviewing candidate - to look for those who care about other people that read their code. Those who are happy to explain in detail. I keep the questions at reasonable level of difficulty. Not something that would scare the candidate at the same time not something which is out right obvious.

This technique has immensely helped me to find a needle from haystack. 

Recently I was watching uncle Bob's videos and he mentions that primary value of a software is that its easy to change. And that is when I realised why this method of evaluating a candidate has some credibility. Because people who take extra pain to make their software maintainable are best value addition to your company.

Ofcourse nothing is foolproof and there would be exceptions to this technique as well. However it has served me pretty well so far.

Wanted to share this here and would like to hear what are the other not so obvious traits that you focus while interviewing candidates?",1590792177.0,2020-05-29 18:42:57
6,[Meta] So long and thanks for all the fish :),217,ibxk5w,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ibxk5w/meta_so_long_and_thanks_for_all_the_fish/,113,"Hey guys. Just wanted to let people here know that I'm dropping my mod status in this sub. I've been a mod for a while now (was made mod shortly after [this post I made](https://old.reddit.com/r/ExperiencedDevs/comments/f6a7t5/meta_time_to_crack_down_in_questions_from/). 

The primary reason for me is that I'm more or less going to stop participating in any 'of the IT beginner' sub because frankly, it's costing me way more energy than it should.

Secondly; if I carry responsibility I also want to be in control. That's not really how the modding system works at Reddit; I don't feel like doing a ton of work in a sub where the actual control is still with a few completely inactive mods.

And third; we Dutch have a saying ""dweilen met de kraan open"" which literally translates to 
""to mop while the tap is open"" which is what modding a sub like this feels like. No matter the goals we set for this sub; even with clear beginner questions, there are WAY more people actually responding to the question than there are people reporting them. If this community actually wants a group for experienced developers, it should stop accomodating the *much larger group* of inexperienced devs that over time will turn this sub in a smaller /r/cscareerquestions.

Cheers :)",1597770504.0,2020-08-18 13:08:24
7,"I built something 4 years ago to meet the needs at the time. Last week we got a new customer whose needs are 1000x more than the worst case when we planned our system for, and i am getting a TON of flak because of it. How can i handle this?",207,gme8ux,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gme8ux/i_built_something_4_years_ago_to_meet_the_needs/,66,"Backstory: Joined startup early on around 5 years ago, i joined as a mid level developer. Company has had a lot of growth since then. We offer a SaaS.

Four years ago i made a very specialized service (tl;dr; OCR documents, blank out any regex patterns, and pump into elasticsearch) for a certain one of our customers who basically wanted to archive a ton of older data. I ended up spending a few weeks and built something to meet their needs. When i built it the system i spec'ed the worst case as something designed around something 10x the size of this customer, which at the time everyone was fine with. 

In the past few years we have had very few other customers use this system, and such it is more or less a legacy feature that we do not offer to anyone.

Last week our sales exec announced that we managed to sign on a new company. This company is huge compared to the other companies we work with. Not long after that announcement CEO/Sales Exec dragged me into a meeting asking about the legacy service.

Apparently this new large scale customer is planning on submitting 30+ years worth of historical data (several PB). This is 1000x+ of times more then the next largest company using this service. This isn't the only problem many requirements that i made the system around (i.e. lacks PDF support, doesn't support handwriting, etc). On top of this sales apparently promised this to them by the end of the month or we will fail in our contractual obligations.

My biggest question was why weren't we told in advance, and apparently our sales exec thought it would just be a button press and thus nobody told dev until basically the very last minute. 

Our CTO is on pat leave, and won't be back for awhile, the person acting had no idea about this. For the last week i have gotten a ton of flak from various teams about this. I have teams trying to use the legacy system and nothing is coming out right because it doesn't understand handwriting and other things. 

On top of this even after spending the last week with a handful of my team members trying to meet the requirements outlined we are nowhere near ready. After letting people know about the status that we are behind our CEO is not very happy at all. Tommorow we are supposed to have a big meeting with the customer, and nothing is ready and nothing works. I don't really know what to do, i have honestly never been in a situation like this and i am furious.",1589877982.0,2020-05-19 04:46:22
8,Thanks for being here r/ExperiencedDevs,199,g9zp3h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g9zp3h/thanks_for_being_here_rexperienceddevs/,80,"Just wanted to send out a little love. I followed r/cscareerquestions and tried to contribute for a while, but the echo chamber and FAANG worship is intense and the community toxic. The blind leading the blind doesn't really cut it.

Then I found you all and it's a real breath of fresh air. I've found the sane people who have actually worked a job and can have a real conversation with nuance. Thank you!",1588150606.0,2020-04-29 04:56:46
9,Unpopular Opinion: Job Hopping is a Luxury,198,fxs9h5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fxs9h5/unpopular_opinion_job_hopping_is_a_luxury/,59,"I see posts that say if you don't like what's going on, if it isn't perfect, if they aren't doing things exactly like you want, just leave for another job.  Little to no advice on how to make things better or improve the situation, just email your bevy of recruiters and find something new.

This is a luxury not all developers have.  Not everyone work in areas where we have a dozen friends working at a dozen different companies each with openings ready to take new people without a problem.  Some of us can't just move eight states away at the drop of a hat, some of us want more from a job than just technical superiority, some of us need specific work conditions. 
 I've always wondered what hiring managers think of someone who has had X jobs in X +/- 1 year.

There are absolutely times when you should get out of a company.  And I hold no rancor towards those who have no patience for companies that aren't doing things the way they want - if you can pop off to the next adventure after 6 months without screwing yourself, I'm happy for you.  No one should work in a job they hate, but ""find something else"" isn't a great option at the first sign of difficulties.

I just think we need to foster a bit more resilience to adversity in technical positions.  Work a bit on being the change you want to see.  Push back on the shitty managers, push for better technology, put out initiatives to improve the state of things.

The advice we provide people should be based on our experience at dealing with challenges, not on how to find another job.  It should be focused on helping people in bad situations improve those situations, not leave them behind.  And, yes, it should eventually be how to find another job when it is clear things are not going to improve.",1586467070.0,2020-04-09 17:17:50
10,Has anyone been completely useless since March?,192,ho8l3o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ho8l3o/has_anyone_been_completely_useless_since_march/,82,"I work at a big-ish company, it was my dream job and I was so excited when I started it last year. Ever since the pandemic started, with everything going on plus the protests and social unrest and now more covid, I just haven't been able to work anywhere near as close to my usual productivity. The wind last left my sails.

On top of it, WFH sucks for me. It always has, but now with this prolonged WFH status and my company possibly doing away with offices altogether, I feel stuck.

&#x200B;

Anyone feeling the same way? Anyone able to overcome similar feelings?",1594348663.0,2020-07-09 22:37:43
11,"Getting sick of ""need this by yesterday"" culture",191,i4d0vp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i4d0vp/getting_sick_of_need_this_by_yesterday_culture/,82,"   I love software enfineering.  I love writing code and I love programming.   It helps a lot I do it for a living.  But I just enjoy the art of writing code and building things.  I can't imagine doing anything else professionally.  It is the main reason why I still choose to be a senior dev.  I love getting to write code.   But I also love solving business problems.  Because I actually find business, how a company runs, how thing are monetized, etc very fascinating. So when I understand the business I think it makes me a better software engineer.

   With that said.   Since the 2007 economic bust.  It feels that the common trope of most shops is overworked, tons of features and a massive backlog.   Everything is rush rush and rush.   I've changed jobs quite a lot, and I'm never afraid to make a move.  But right now I'm noticing that I barely have room to breathe.    Suffocating product owners who are constantly just throwing more and more feature request at us.  Even when it's clear that team sizes keep shrinking with absolutely no inclination to replace departed members.



 Time to market is important.  Don't get me wrong.  But why is it literally the only thing that matters now?   And I personally think time to market is a little overrated.   I mean its not like the people who are first actually end up winning in the industry.  Plenty of social media platforms predated Facebook.  Windows wasn't the first GUI.  Ipod wasn't the first mp3 player.   



Like all the real survivors in the market tend to be much more about quality than how fast they can shit out features and get them to customers.    In my hobby I've followed the Cardano project for years.  And it's making headway, despite taking its time.  Quality matters.  I think the market tells us quality matters.  So why do our Product Owners always ask us to compromise on quality?



I really feel the industry is in the state of mass psychosis.  Where everyone is so enamored with growth hacking that quality just eludes us.  This mentality is killing younger developers.  Shipping poor half ass code is a virtue in most organizations 



  
 I feel really lost.  I like writing code.  I love solving business problems.  But I absolutely hate what the industry has become.   Im not saying it would be any different if I ran my own company.  Since it seems like the rush culture is more of an ecosystem starting with investors and trickling a the way down to workers.



Has anyone else ever felt this way?  I think the simple ""just change jobs"" doesn't work.  Just about every work place is the same.  Do I just start my own business or consultancy?  Do I just try to work on retiring?   The industry really drains the hell out of people.  Do you think post COVID will get people to slow down?  Or will we double down on ""rush culture"".  Inferested in hearing your thoughts",1596687677.0,2020-08-06 00:21:17
12,"VMware, Twitter Cut Pay for Remote Workers Fleeing Bay Area",187,iqyr7b,ExperiencedDevs,https://www.bloomberg.com/news/articles/2020-09-11/vmware-twitter-cut-pay-for-remote-workers-fleeing-bay-area,136,,1599885400.0,2020-09-12 00:36:40
13,Is anyone else daunted by how much work it takes to get a simple side project up and running?,182,iu3xwl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iu3xwl/is_anyone_else_daunted_by_how_much_work_it_takes/,123,"If I wanted to stand up a website that simply:

1. Users self-register
2. They click a link in their email to activate their account
3. They can go to the site and log in.
4. They are presented with a ""Hello World"" upon login

Then I need to stand up:

1. A web server to serve static assets
2. An application server to do the actual server-side business logic
3. A database to store the app's data.
4. I have to write the registration business logic
5. I have to write a UI that is presentable
6. I have to figure out some email provider's rules on sending automated emails
7. I have to ""secure"" the hello world page
8. And I have to handle all the other miscellaneous things around validating form data, CSRF, password hashing, etc.

How the hell do people do something like this in their free time and by the way build something more complex than a Hello World?? Certainly there are some productivity gains from using a framework like Django.  But that only gets you a couple of basics.",1600316896.0,2020-09-17 00:28:16
14,"Recently hired as team lead/manager, team seems somewhat dysfunctional. I am getting a huge amount of push back from team on everything. What can i do?",182,hsae7x,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hsae7x/recently_hired_as_team_leadmanager_team_seems/,87,"I was hired about a month ago as a team lead/manager for our backend team. Team is a dozen or so people, the company is pretty small and very much a startup. 

The previous team lead was here for around half a year before leaving, they did a lot of confusing things. They told everyone they can work whenever as long as its 40 hours a day, they abolished the on-call schedule, abolished things like stand-ups in favour of nothing? Also did their absolute best to silo the team from everyone else.

The team seems very dysfunctional, every single person seems to be siloed working on their own thing, with little care for stuff other people do/other teams. I am trying to fix these things and i am getting a huge amount of push back.

Even worse is that we have had a number of production outages since starting here we have had over 72 hours of production downtime which for a SaaS is really bad. This weekend someone pushed something to production at 11pm on a Friday night, and it broke one thing leading to a cascade of failures, causing a huge outage that basically destroyed our SLA for many of our customers.

I tried my best to understand what was failing, however most of the senior developers were taking the stance of ""Not my problem i am off for the weekend"". We finally figured out what caused the issue (the 11pm deploy) and the developer who's change caused it basically told me ""I don't care, it is the weekend i don't work on the weekends"" and hung up on me. 

Our CTO has basically told me we need the on-call schedule returned i agree. Aside from a few people everyone else is ether:

* I am not doing on-call and would rather quit.
* I can't do on-call anymore because i have kids/family, so no.
* I am not doing on-call unless everyone else does. 

The thing is everyone has on-call as part of their employment agreement. On top of this for example the above i asked we have deployment windows. Cause pushing to Prod on Friday at 11pm is dumb. I got so much push back, in the form of ""I am not going to limit myself because it will slow my velocity/etc"". 

Even trying to re-introduce things like stand-ups is causing so much friction, apparently some people have adjusted to working from 2pm -> 10pm. While we have two others who basically are working 5am -> 1pm. It makes no sense. When i bring this up people complain that the previous team lead let them work whenever. 

I already sat down and explained the issues with the team, however my CTO has basically told me that i am responsible for fixing these issues. Considering how little knowledge transfer there is i am scared if i force something we are going to lose a ton of knowledge.",1594937745.0,2020-07-16 18:15:45
15,Helping junior devs to become autonomous,176,i29lvq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i29lvq/helping_junior_devs_to_become_autonomous/,14,"One of the tasks I enjoy the most is mentoring junior devs. One thing I try to teach them is how to be autonomous when working on a task. With time, I've collected different pieces of advice that I've consolidated in a small doc that sometimes I shared with them:

# Unblocking yourself in day to day work

You start doing something new and you get blocked. You try and things start to fail. Or you need to use a new service or library and you don’t know how it works and you get blocked. It happens to everybody. Here are some ideas to unblock yourself in day to day work:

## When you face a code issue

* **Compile errors**: Read carefully the compiler error message. It will tell you what is the exact problem. Look for the error in Google if it is not clear enough.

* **Code doesn’t behave as expected or throws unexpected exceptions**: Read the stack trace of the exceptions. Understand if it has enough information to explain what is going on. If not, add logging to your code. Make the logging permanent to help others to debug too. Add a unit test. The smallest one you can think of to test the broken piece, to remove noise from other parts of the code. Run it. Debug it step by step. 

* **Dealing with new libraries/programming languages**: learn about them before using them. What is its general purpose? Main functionalities, ideas, classes, methods... How do you want to use it? Look for code samples to figure out. You are not the first person using them. GitHub is your friend for this.

* **Testing is slow or frustrating**: look for ways to make your testing as simple as possible. Been able to test fast is the biggest improvement developers can have in their lives. Why is the test slow? Because it processes too much data? Look for ways to reduce it to a relevant subset. Because it requires running on a remote infrastructure? Look for ways to run it locally.

## When you don’t know about a system you need to work on

* **Understanding the high level architecture of a system**: Read existing documentation for it. If it's a system internal to the company, it might be confusing or outdated, but it usually has the architecture diagram you are looking for. If it's open source, documentation should be a little bit better.

* **Understanding the low level details of a system**: Read the code. Download it if possible. Try to to run it. Understand the important details not represented in the high level view.

## When you face any kind of issue

* **Be patient. Get frustrated.** Get away from the problem for a couple of minutes. Or hours. Or days. Go back to it. But keep trying until you find the answer.

* **Ask someone**. But be respectful with their time. Make sure that you have explored all the paths above, Stack Overflow questions and Google search results before asking.

----

When I see them struggling with a task, I always try to redirect them to one of the previous points. I provide direct answers only if I think the right answer requires a more experienced view or if a deadline is approaching and we need to deliver.

What is your approach to help junior devs to become fully autonomous?",1596390741.0,2020-08-02 13:52:21
16,Anyone else find commutes to be a major dealbreaker?,178,j67htc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j67htc/anyone_else_find_commutes_to_be_a_major/,99,"So I am suuuuper lucky. Before the pandemic, I could walk to work. (I still can but we are WfH) Before that, my job had a 5 minute commute by car, and before that, I could take public transit to work (and honestly a 30 minute commute by subway where I can zone out is waaaay better than a 30 minute drive anywhere, but that is my opinion). Before that the last time I used a car daily was highschool (college and grad school was in a city so no car). I currently don't have a car because I live in a city, and when I did have a car (lease left over from my last job) I used it so infrequently the battery died a few times. It was just more hassle than it was worth.

I am getting calls from recruiters, and almost all of them are ""Hey do you want to work in the suburbs?"". Even with a decent pay bump, I have a hard time even entertaining this, and I am underpaid. As a single guy, the suburbs sound like death right now (ironic I know), and the thought of having to deal with a car just seems like a hassle, throw on an extra costs and an hour plus commute daily, and, short of like doubling my salary I can't imagine willingly doing that. Am I insane?",1602028216.0,2020-10-06 19:50:16
17,"In hindsight, why did we abandon experts in favor of full stack developers?",174,i9f2vn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i9f2vn/in_hindsight_why_did_we_abandon_experts_in_favor/,225,"Allow me to wax philosophical for a moment.

Once upon a time, the software development field was replete with experts. 

There were those that specialized in databases, and they were god-like beings who knew the internals of databases and how to optimize them like no software developer ever could. 

There were middle-tier developers, who knew how to select or write extremely efficient algorithms, and couple components together to provide product that was easy on memory, CPU time, and other system resources. 

And then there were the front-end developers, artists who used their tools to provide breathtaking and consistent front ends that made sense, complied with usability guidelines, and were properly branded throughout the application.

Then, somewhere along the line, we decided that it was either (a) more efficient or (b) more cost-effective to combine all of these into the Full Stack Developer. Expertise flew out the window. Now, we have developers who are jacks of all trades, and experts in nothing. We get mediocre results in the data tier, the business tier, and the web tier.

However, Full Stack Developer Syndrome truly rears its ugly head when it comes time to seek new employment. In those storied days of old, one could find a job with relative ease because the search parameters were relatively small. Database developer? Search for jobs that only needed your skill set and you should find work in relatively short order. Now, however, every job in our field is polluted by at least ten technologies in the front, middle, and back end.

The problem is that when you find a job, you will inevitably only use a handful of technologies for the duration of your stay at the company. Too few companies embrace new technologies while you work for them, so that the list of technologies with which you gain professional experience grows. So, while the requirement list for getting a new job grows more polluted, your list of technologies remains stagnant, and you become less and less relevant in the job market.

We did this to ourselves. It would be easier to remain relevant if we did not all have to be Full Stack Developers. It’s great for employers, but a disaster for employees.

In hindsight, was it really all that bad to have experts? What did we gain by insisting that everyone had to be a Full Stack Developer? What did we lose by ditching the experts in favor of them? From what I can see, we lost expertise, pride of craftsmanship, and an overall reduction in quality. I’m not sure it was worth it.

But that’s me, and I’m an old fart, waxing philosophical late at night and reflecting over his own experiences.

Have your experiences been the same or differed?",1597406711.0,2020-08-14 08:05:11
18,A very strange interview at Uber,171,f0f9vi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f0f9vi/a_very_strange_interview_at_uber/,92,"\[This got posted and removed from cscareerquestions so trying here\]

Throwaway for obvious reasons. I conducted an exhaustive job hunt and talked to almost every large company in the Valley and got several offers from top tier firms. I had a  positive and professional experience with almost every company I talked to with the exception of Uber. My Uber experience was by far the the strangest experience I've had in this job hunt.

**TL;DR Would not recommend interviewing at Uber**

Here's a timeline of my interview experience with Uber:

**Referral Advocate**

* I  got referred into Uber by a friend and had an intro call with a referral advocate. They went over the interview process (pretty  standard) and asked I complete a coding assessment to begin.

**Coding Assessment**

* The  coding assessment was a mixture of coding problems and a few multiple  choice system design questions. I was told I passed the coding assessment and was passed to a recruiter  to begin the process for an onsite. Here's where things started going  awry.

**1st Recruiter Call (where it goes downhill)**

* The  recruiter began the call by stating ""Hello is this XXX \[wrong version  of my name\]?  hahaha HahahahahahaHAHAHAHAHAHAHAHAAHhahahahaahHa"" and  continued to laugh hysterically. They  stopped  laughing for a few seconds then asked again ""Sorry is this YYY? \[another  wrong version of my name\] hahahahahaHAHAHAHAHAHAAHAHAHAHAHA""  and  continue to laugh hysterically for a second bout of laughter. They then  catch their breath from laughing and sputter out very quickly ""Hahahaah.  Sorry, sorry I'm not laughing AT you, I'm just laughing that I keep on  butchering your name. HahahahahahaHahahahahahaHahaha.""
* At  this point, I can't tell if I'm being pranked on a radio show. Every  company I have talked to has done some variation of ""Hello this is ZZ  from company XX. Sorry, but I don't know how to say your name. How do I  pronounce it?”
* Recruiter  uses unprofessional tone and diction throughout call. They start each  sentence with a loud ""uuuMMMMMMMMMMMMMMM"" and then use the word ""like""  across all of their sentences. At one point the recruiter goes into a (fake?) valley girl falsetto and starts the sentence with ""ohhhhh my goddddd""  while making fun of how long a competitor takes to interview (Google)

**Onsite**


**Bar Raiser Interview**

* I  wait in the conference room and the interview start time comes up. I  wait for about 7 minutes before I start to worry that my interviewer  isn't going to show up. I go outside and see someone waiting outside the  room and ask them ""are you here to interview me?""
* The  interviewer apologizes that they didn't come in and says they didn't  know they were the first interviewer so they were waiting for the  previous interviewer to exit. While a minor hiccup, this reflects a general theme of unprepared interviewers.

**1st Algo Interview**

* I get escorted back to the conference room after lunch for my first technical interview. The interview start  time passes up. After 8 minutes I email my coordinator. I then text my  referrer as well.  After 20 minutes (the interview slot is 45 minutes) an  interviewer rushes into the room.
* Interviewer  seems unprepared for interview. Specifically they mention that it is  ""bar raiser"" interview several times, and I correct them by showing them  the paper with the interview schedule
* After  interviewer realizes that interview is not behavioral, they pause and  quickly think of a problem on the spot. The problem is explained poorly  in a rushed and unclear manner. I am able to start work on it because  I’ve covered the topic before (topological sort). Any person unfamiliar  with this problem would not be able to work on it because the problem  description was stated in 30 seconds of rushed, broken, and hard to  understand English.
* I  ask the interviewer if I can type out the solution and they direct me  to use the codesignal site. The site doesn’t work and the  interviewer says they do not know how codesignal and asks me to use a  whiteboard.
* Interviewer  gets phone notifications several during the interview and appears  distracted. I catch myself talking for large amounts of time without any  communication or interaction  from the interviewer side. I ask them if  they are following me to ensure they are listening to me. I also notice  that the interviewer is distracted and looking at their phone several  times while I’m explaining my solution. (My hunch is the interviewer is  getting messaged by someone at work or maybe paged for an issue)

**2nd Algo Interview**

* Interviewer comes into room with paper printout of an algo problem. The problem  involves matrix multiplication, and since I am not too familiar with  matrix multiplication, I ask how matrix multiplication works. The  interviewer pauses, pulls out their phone to check how matrix  multiplication works (???), and then explains it to me. It is  clear from the pause and the paper that the interviewer is asking a  question that they have never studied before. They confirm this by casually mentioning they don’t know the optimal solution to the problem they are asking since it’s a new question.
* Codesignal has technical issues again and the interviewer does not know how to use it. The interviewer attempts to use hackerrank but realizes their Hackerrank login doesn't work anymore. We give up and switch to sublime text.

Overall,  I found this onsite to be a mess. All of my algo interviews were poorly  run, the interviewers were unprepared, there was technical issues with  their coding tools. I also got  little to no time to ask questions during the technical interviews due  to all of the issues.

**Recruiter onsite follow up**

* During  the follow up call, the recruiter mentioned they had good and bad news.  The good news was that most of the feedback was positive, but the  system design interviewer felt they didn't have enough information to  assess me. The team was passing, but they wanted me to come back in for a  system design interview and if that went well they would match me with  another team.
* At  this point I was completely confused. If the system design interviewer couldn’t assess me, this meant that the 3 technical interviewers all failed as interviewers. 
* I  was debating coming back given how problematic my onsite was. At this point I had been told by 4 companies including Google I would have an  offer.
* The  recruiter started laughing uncontrollably during this call again when I  voice concerns about impending deadlines. This time it occurs after I  state that I am at hiring committee Google and might not have time to  come back to interview. The recruiter starts laughing again at me:  ""hahahahHAHAHAHAHAHAAhahaha. You are totally not going to get an offer  from Google in time for your deadlines. hahahhahahahaHahahahaHahaha”. They then started making  fun of Google and Amazon by saying they are too slow and would not make  the deadline I have with another company. I notice that this is the 2nd  time the recruiter is belittling competitors. 
* \[As  an aside, the recruiter was not correct. Both Google and Amazon  gave me offers exactly when they promised too and met the deadlines they communicated to me.\]

**Ending the Process**

This  whole process felt stressful and disrespectful. I felt like I  was on a prank show where they were seeing how they could far they  could go by insulting me before I would walk away from the company.  After sleeping on it,  I told the recruiter I won't be continuing the  process and to have Uber never contact me in the future given how  unprofessional the experience was.

**Overall Thoughts**

* My interview experience gave me the impression that Uber recruiting does  not communicate respectfully with its candidate, employees are not  prepared for interviews they conduct, and the process is conducted  sloppily. I have had some anecdotal confirmation from other friends that many of these issues are not uncommon.
* I  understand that hiccups happen at interviews but I did not see anything approaching these issues at the other companies I am talking to. To  give context, I have finished onsites rounds at Pinterest, Lyft, Google,  Square, Amazon, Yelp, etc. All of these companies were professional,  respectful, and prepared.
* I have never had a recruiter laugh at me in our calls.",1581131719.0,2020-02-07 22:15:19
19,Stop taking failed Technical Interviews to heart...,167,jsy8og,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jsy8og/stop_taking_failed_technical_interviews_to_heart/,132,"To those fellows out there still searching for a job, please stop beating yourselves up if you fail a technical interview.  Bombing tech interviews is the absolute norm right now since no matter how well you might think you know a technology, there will always be something you do not know.  On top of which, the majority of tech interviews are done in an unnatural condition with little to motivate someone into solving the problem.  And FYI this includes both FANG interviews and non-FANG ones.

For example, I know .NET Core, but during an interview I slipped up on DI and forgot about AddSingleton(), because I hadn't used it in a while and mostly stuck with AddScoped().  That and the average person probably isn't going into Program.cs and modding the CreateHostBuilder() code a lot unless they are setting up a new project.  I only remembered adding logging via nLog and having to deal with ILoggerFactory injection in startup.cs due to a strangely written health check system.",1605229056.0,2020-11-12 19:57:36
20,How to have a productive 1-on-1 with your manager,164,hf9dur,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hf9dur/how_to_have_a_productive_1on1_with_your_manager/,37,"Hello all. Last week, I finished an article on how to have a productive 1-on-1 with your manager. Productive, to me, means improvement in your current role and preparation for career growth. My skip-level manager stumbled upon the article, reached out, and complimented its accuracy. I'd like to take this opportunity to share it with others, as helping fellow software engineers reach their career goals is a passion of mine.

If you have any questions or great 1-on-1 meeting suggestions, please leave them in the comments.

# Preparation ✍

As your week is progressing, take notes of what you may want to ask or discuss with your manager. You may want to confirm some best practices as they arise. Do you understand what to do and why? Does the team need to adopt practices that you feel bring value? You may feel unsure about a decision you made and seek clarity. Was it right, and why or why not? What would your manager suggest you do differently in the future?

Of particular value, note any difficulties you have had with other team members. Use this personal time to air pent up anxieties and angers before they leak through during team meetings and communication. Your manager can filter and anonymize this feedback into a constructive conversation with the third party during their 1-on-1 sessions.

Be able to rank your discussion topics by priority. Some topics may need to wait until following 1-on-1 meetings. Make sure when going into your meeting that what you need (or want most to be) addressed now gets addressed.

# Prepare to drive 🚘

When discussing topics of interest to you, be ready to take charge of the direction of the conversation. If your manager gets off topic or misinterprets your question, redirect the conversation back to your intent. This meeting is for you. You decide what is discussed, and — behavior correction aside — you can determine that a topic is not worth your time. You do not need to wait for an eventual point that your manager is making if it is not the point you are wanting to reach. Don’t let a derailed conversation put your goals at risk.

If this conversation-driving behavior feels unnatural in your relationship with your manager, you may become more comfortable by prefacing the conversation with your intent to drive.

# Ask 🙋‍♀

Start your meeting by asking your manager if there is anything they want to discuss. It should not be common that the manager wants to drive a specific topic during your 1-on-1. If they do, it may be the advice you need most right now. Make sure they have the time to communicate that topic to you, and that you make time to absorb it. Given that this feedback should be rare and important, start the meeting by deep diving and addressing it before moving on to the topics you have prioritized for yourself.

# Absorb ☁

Take notes on action items and personal growth feedback. Put what you have learned in your meeting in your own words and repeat it back to your manager. You can either do this for each answer your manager provides, or in summary at the end of the meeting. This will both ensure that your comprehension of the answer is correct and that it solidifies in your mind as you leave the session.

# Be visible 👁‍🗨

I never appreciated the value of being seen until I had the tool to ensure it. Many struggle with the reality that your best work often goes unnoticed, that your quality contributions and inventions may be buried under busy work and repetitive tasks. So you increased test reliability by 20% and decreased build complexity by 50%? That task wasn’t assigned in your sprint, so who even knows you did it besides you and the handful of people who reviewed your code? It can’t contribute to your promotion or value if no one is aware of it.

My manager provided this prompt to me, and I try to use it as often as applicable:

>I really wish my manager knew ______.

Is there something you wish was known that you don’t feel like is? Bring it up. Make it known. Make sure your manager is aware. You will feel seen, heard, and valued; and your manager will be educated to take your contributions into consideration when considering raises, promotions, and your independent contributions in the future.

# Priorities 1️⃣

Make sure your work priorities are in order. Clarify to what your time should be dedicated. This can go beyond your sprint planning, into bigger picture visions, or what you may want to start developing during your free time. I recommend asking at least once per month where your priorities lie.

# Current role 👩‍🎓

Earlier in your career, you may want to identify blind spots. “How has my performance been as a [job title]?” Make sure you are performing adequately at your current position before attempting to grow for the next one. I recommend asking this question once per 1-on-1 session.

Once you have comfortably performed well at your current position, you can begin focusing on your next step.

# Future role 👩‍🚀

Once I feel as though I am comfortably and reliably performing my current role, I like to “role play” my desired next level. Within Amazon, in order to be promoted, it’s typical to first function as the role you want, demonstrate success at it, habitually ingrain the behavior, and earn trust in your skill set.

Drop the “What do I need to do?” and enter “What am I doing?”

“As a [higher-level employee], how has my performance been since we last spoke?”

For example, “As a senior front end engineer, what should I be doing this next sprint?” Notice, I am not asking what I should be doing for a promotion. I am that promoted level. I have set an expectation and conception of myself that applies mentally to both sides: I am not just trying to be better, thinking about improving; I am functioning as my career goal.

# Quarterly questions 🌜

In addition to the above, the following questions are valuable to ask at least once per quarter.

* What are my strengths, and how can I better utilize them?
* What are my areas for growth?
* What is your vision for the team?
* In regards to the long-term vision for the team, what do you expect of me?
* What do you hope we achieve in the next 1–3 years?
* What are your priorities for the team and the project?
* What is the big picture this quarter?
* Where do you see the biggest challenges for our team?
* What are my next-level goals to demonstrate capability, development, and/or Leadership Principles of an [high-level employee]?",1593061225.0,2020-06-25 01:00:25
21,15 years of experience and I still get sad when I don't know something,154,iv85ts,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iv85ts/15_years_of_experience_and_i_still_get_sad_when_i/,106,"Was dealing with a very urgent problem at work and had to do a revert in some commits, but never did it. Tech lead said ""are you for real? really?"" when I said I've never needed it. This shitty comment made me feel like the worst piece of shit developer there is. Like, ""15 years of experience and still don't know how to do that?"".

Damn.",1600471559.0,2020-09-18 19:25:59
22,Interview process rant,154,iz2hmu,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iz2hmu/interview_process_rant/,135,"I've been in the industry for 8 years now. 4 years of full stack at a large financial company, and 4 years of almost exclusively frontend at a startup. Just had an all day interview for a frontend engineer role where I was asked a ridiculous amount of behavioral questions, at least 10 maybe close to 15 (I haven't been working THAT long that I would have so many examples from my work history) and 2 algorithm problems, 1 about linked lists which I haven't touched since college, and another that honestly I should have done better but I was so freaking tired from 5hrs of talking. There was a 1 tiny frontend coding problem that was more pseudo code than anything.

To me this doesn't make any sense. How can they properly assess my skills as a frontend dev in such an interview?

I've hired 3 frontend devs during my career, all have been outstanding. My interview process is have them do a \~1hr frontend coding homework, then discuss it during a 1hr interview, along with a few other frontend related questions like caching or error handling. No need for 5 straight hours of nonsense.

Rant over.",1600999924.0,2020-09-24 22:12:04
23,How to deal with very senior engineer who acts more like a junior?,152,j2nxrq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j2nxrq/how_to_deal_with_very_senior_engineer_who_acts/,193,"I am relatively new to this company and we hired a very senior engineer (20+ yrs experience) a few months after I joined. He has a great resume and when talking about broad concepts seems to know his stuff. However when it comes to implementation there have been several red flags.

* Overall theme is he does not seem very resourceful. Every single task involves him asking to do a video call so I can walk him through it. At first during onboarding this was fine to show him the codebase, but as time goes on I realize it is more of an issue not knowing how to figure out the answers on his own. I have started to push back on calls for everything, but it seems like he will wait until the next day and have no further progress until we meet again. This leads to features that should take a day instead taking weeks.
* No clear understanding of git - suggesting simple things like ""pull master"" or ""create a new branch"" require me explaining the exact commands to run when we are on a call after seeing him fumble for a few minutes. Even instructions like ""go to your PR on Github and click the Merge button"" are lost on him. I can understand someone not using git before, but I have sent several articles and created my own cheat sheet for the team. Seems like the basics should be easy to grasp for someone this senior.
* Poor code style that is worse than all of the other junior devs I am mentoring. I have linked to style guides which is improving it, but overall not thrilled with the quality. Took a while to understand basics like OOP and using classes. Trying to offer helpful PR review but he will comment on everything saying ""I will fix it next time"". I have requested that the changes be made before we merge the tech debt into the codebase. 
* Unable to debug - instead sends me an obvious error and says he does not know what to do. When I ask if he Googled it, he will change the subject and explain that it was working before and he doesn't know why it's happening. I am trying to ask guiding questions without telling him the answer, e.g. ""I see an error with x, do you know why it's not working?"" but usually he cannot figure it out.
* Local development only without testing integrations like S3, etc before pushing. Wastes my time since I need to help him deploy the changes, only to watch the code crash and burn, then rinse and repeat. Usually relates to previous point about debugging. This is more common with what I have seen in other devs throughout my career, but still always frustrating.
* Lack of initiative to try/learn things on his own. If I ask a leading question like, ""Do you want to kick that off in dev to test it out?"" I will get responses suggesting I can do it for him. When I say he has the capability and permissions to do it himself, I get asked to do a video call to show him what to do after having explained it several times before. Same thing if I suggest ""you can check the logs in Cloudwatch"", it turns out he doesn't know how to figure out how to do that.

I am going to chat with my manager about all of this, but wondering if any of you have experienced the same thing and if it eventually got any better? At first I appreciated someone else to bounce ideas off of and like the idea of someone else to share the work, but starting to feel like I could have delivered so much more last quarter without all of these distractions. Any tips appreciated!",1601507421.0,2020-09-30 19:10:21
24,Got called a Junior Dev for wanting an organized Backlog,153,im18ox,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/im18ox/got_called_a_junior_dev_for_wanting_an_organized/,60,"\*Throwaway account just to be safe.

We run a bastardized version of Scrum (don't most of us?) at our small organization. For our scenario, we have a Software Architect and a Director of Support doing 50% Product Owner work and this has been causing some strain on our backlog and quality of work for some time now.

We're finding that the Software Architect brings something into the backlog unpolished just because he knows what needs to be done but does not have the time to flesh it out properly with the intention of doing it later as it comes closer to dealing with.

The Director of Support on the other hand has fires all around to deal with and will lob stuff into the backlog as they come in because they're needed asap - as far as support is concerned.

It's fairly obvious that someone else needs to be in the middle to do the weeding and ironing out of the backlog.

I had the opportunity recently to talk to our CEO about this situation not being ideal but was quickly shut down and was told I was thinking like a Junior Developer for wanting a clean and actionable backlog and should just deal with whatever's on the top of the backlog. So I pick up one example about a bug that hasn't even been reproduced or any proof of what exactly was happening and it's on a developer's lap and I get a response like - ""This is development's fault. This defect should not have ended up in Production."" - ok then.

Just extremely frustrated and need some guidance on understanding if what our CEO is implying is standard stuff and just go deal with it or if something really does need to change.",1599192918.0,2020-09-04 00:15:18
25,I’m starting to question the value of product managers,152,jr82je,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jr82je/im_starting_to_question_the_value_of_product/,91,"   I’ve worked for a lot of different teams and companies during my near 2 decades in tech.  I’ve dealt with amazing team and some terrible ones.  But I have noticed that at the root of most dysfunctional teams has been an awful product team.

  I feel like product managers do nothing but endlessly toss more work at devs.   They’re always pressuring devs to deliver software quickly.  Even if it’s to the detriment of the team’s progress and stability.  

  Where I am we are being forced to push out features so fast that our current code base is a mess.   We are literally breaking features that haven’t been released yet.   And there is no end in sight for the product team.  They assure us that there is a lot more work on its way


   The product team does not seem to care that the entire dev team is overworked.  We’re in a state of unending crunch time.  Every feature is critical and needs to be done right way.  Meanwhile our technical debt has barely been touched.  Our code base is a mess with sloppily written software that is just rushed through. The product team scoffs at the mere mention of adding technical debt to the sprint.  As a matter of fact our product manager actively discourage pulling any sort of technical debt into the sprint.

  What I also can’t stand are heroic devs.  Our product team feels confident just cracking the whip because there is always that guy who will make miracles happen.  So product management doesn’t see anything wrong with our code base and see no point in attacking technical debt because we always have “that guy” who will perform miracles every sprint.

  At this point  I’m starting to really question the importance of product managers.  I feel they’re just attack dogs for the business side.  I’ve yet to see a product manager who knows how to manage expectations or mention trade offs to stakeholders.  I feel they’re literally just a conduit for the whims of the business side.",1604989946.0,2020-11-10 01:32:26
26,"Former software engineers, what did you switch to? I hate writing software for money and i want out, looking for options.",148,ikl2c7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ikl2c7/former_software_engineers_what_did_you_switch_to/,120,"I've been doing this for over 10 years now in North America and in Europe. I initially went into software because I loved building stuff, and I loved being proud of my craft. I enjoy programming for myself when I have the energy still. I didn't study CS in school so I'm not very well versed in algorithms etc, but I'm decent enough that people paid me money consistently to write code.

But almost ever since I started doing it for money, I've been questioning my career choice. I have worked at many different companies in many different businesses, and it's always the same: I don't enjoy it. There are rare times where I'm able to enjoy it: we're not in a panic or putting a fire out, the code is understandable and I'm able to figure out how to modify it to achieve the desired result, and there is good test coverage so that I'm proud of what I made. Unfortunately, 90% of my work has been the opposite: days of slogging through terrible code, no-one to explain or help with anything, rushing to deliver a half assed solution without any concern at all for maintainability, no tests, you get the picture.

Because this feeling never went away, I think I'm not made to write software for money. It's too much stress, frustration, and anxiety.

So I'm looking for alternatives where I could re-use what I learned but in a career that would suit me better, because I don't think I can keep my sanity much longer doing this profession; and I know changing companies isn't the solution.

I have considered sales engineer, but I'm worried that I'd still be expected to slog through terribly written codebases so that I can tell the customers what we can and cannot build. I'm also not too crazy about the traveling that's apparently involved with this kind of position. I'm more of a 9-5 person.

I have also considered a scrum master/project manager type of position, but I don't think I could deal with the BS that comes with endless meetings and ""ceremonies"" while maintaining optics so the customer feels like they got what they wanted but the company took the easier and cheaper way out that doesn't quite fulfill the requirements.

I'm hoping there are people in this sub who went through the same ordeal and have switched to something else: what did you switch to, and why?",1598998642.0,2020-09-01 18:17:22
27,"40+ year old Software Engineers, what do you recommend to those bellow 40?",144,gtxs1g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gtxs1g/40_year_old_software_engineers_what_do_you/,99,"I am hitting 40 years in a couple of years. My work experience has always been in small companies.

I think because of starting to feel older, and having kids etc... I start to look into big large companies as a possible escape, since the workforce in smaller companies tends to be younger (at least where I have been).

My question is a bit more broad that specifically this, but those who are above 40 and are/were software engineers. 

 * How do you go forward? 
 * What things are advisable, and not advisable to take on (in your opinion), now that you are one of the grown ups?
 * What things do you wish you had done more, and realise now that they were simpler in your 30s?
 * How should you try to improve yourself (doing a lot of leetcode exercises, doesn't seem to improve things that matter :) )?
 * General views/advice for someone going to the end of his 30s?

Thank you",1590954750.0,2020-05-31 15:52:30
28,"Like programming, dislike 'tech'",140,j3qzeo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j3qzeo/like_programming_dislike_tech/,64,"I wonder how common this is. I like designing, problem solving, programming, building things, fixing bugs, gaining an understanding of how a complicated code base works, etc.

I just don't like 'tech'. I'm not motivated to follow and keep up to date with all the latest trends and developments. I think the majority of software out there is little more than digital pollution. I have no respect for the FAANG companies, or hedge funds, etc.

By this, I don't mean I'm not willing to learn and develop. I think there are several lifetimes worth of personal development just in getting better at writing programs in C. The thought of trying out all the latest fads and languages as they come along doesn't really appeal at all, although it does to some people, and that's valid enough.

Thing is, it's quite hard to maintain a career without jumping on the tomorrows'-trash-tech roundabout.",1601656675.0,2020-10-02 12:37:55
29,Whiteboard Coding is a Terrible Way to Evaluate Candidates - Stack Overflow blog,138,ebj73p,ExperiencedDevs,https://stackoverflow.blog/2019/12/16/this-this-whiteboard-interviews/?cb=1,75,,1576550610.0,2019-12-16 21:43:30
30,New hire is overengineering,141,jfrtd1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jfrtd1/new_hire_is_overengineering/,112,"We have a new hire in the team (6 months with us now). Our codebase is Typescript and fairly straightforward with not too many bells and whistles. We try to stick to a functional style and our shared library is a collection of functions in namespaces and dumb data objects/classes. 
Anyway the new guy has a programming style that I would describe as enterprise-y. Very heavy on abstractions and interfaces and making everything expandable even though my intuition is that most of these things will never be expanded on. It reminds me of my design as a junior after having read the design patterns books and approaching everything with “what design patterns can I throw at the problem”. 
We’re a small team (4 engineers).

I have tried to challenge some of the ideas in PRs like “why do we need a factory to instantiate these simple objects? I don’t think we’ll ever have more variations of this object” And the answer is usually boilerplate design patternisms and how in theory it’ll be testable and expandable. Mind, they haven’t actually implemented a single test during their time here from what I’ve seen and have trouble delivering their features from start to production with consistent quality.
My preferred advice to give would be to scrap the abstract factories etc. and just make it work for the simple case and then abstract it later if you need to. YAGNI and all that.

Anyway is it worth trying to enforce a more pragmatic style or just let people code in the style of their choosing? How do you go about enforcing a style? I do have buy in from the CTO to do that but I don’t want to demoralize our small team.",1603365111.0,2020-10-22 07:11:51
31,Are you WFH due to coronavirus?,136,fhar7h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fhar7h/are_you_wfh_due_to_coronavirus/,173,"Considering all the big tech companies have told their workforces to WFH, I would assume everyone here is.",1584016041.0,2020-03-12 08:27:21
32,Senior candidates can't answer algorithm questions,141,diu8ec,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/diu8ec/senior_candidates_cant_answer_algorithm_questions/,61,"At my current job I'm part of the interview process for all engineering candidates. Our process requires us to ask all candidates various algorithm questions (non surprising). 

Something I'm learning, which makes sense and is unfortunate, anyone under 5 years experience can at least partially get through these questions. Not all of them answer, but most know about the leetcode game and can at least struggle through it. As for senior candidates (8+ years experience usually), almost everyone struggles. It's obvious most have never seen these questions and only know about CTCI or leetcode in passing. It's so unfortunate to see because a lot of these seniors are extremely qualified (and they typically anyswer architecture questions well). I always bring it up to my boss that we should change our process but get shut down with 'thats how every company does it'. 

This post is likely pretty familiar to most people here, I just find that the industry is in such a sad state that evaluating experienced candidates is difficult.",1571282355.0,2019-10-16 23:19:15
33,Some days are easier,142,k0jknl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k0jknl/some_days_are_easier/,65,"Some days, it’s like the programming happens automatically. Hours go by unaccounted for and you end up with a beautiful solution to the problem you were solving. Some nights I don’t want to go to bed, I’m on a roll and want to keep going. 14 hours programming today? No sweat. 

Some days though, I just can’t get in the mindset. It’s like slowly ripping off a bandaid. No matter how much time you spend, nothing seems to get done. And you just sit there and watch the to-do list grow as your work output halts to zero. 

How do you deal with stuff like this? Especially when it comes to estimating project completion dates and expectations for your availability",1606301130.0,2020-11-25 05:45:30
34,Devs who moved from a high-paying job to a lower one in the pursuit of fulfillment/enjoyment/purpose/etc - what was your experience like?,141,k2igro,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k2igro/devs_who_moved_from_a_highpaying_job_to_a_lower/,49,"Here's where I'm coming from: I'm coming up on 10 years of work experience and I'm starting to think about where I want to be in another 10. I'm fortunate to consider myself well-compensated, and I've been saving towards financial independence. My intention isn't to save until I never have to work again, but to be able to make far less while maintaining my current standard of living. I'd likely still do software development, but completely unrelated fields (teaching?) are a possibility.

I'm sure some have gone down this path, and I'd appreciate hearing anecdotes about how it went for you. Was it more difficult than you anticipated to get hired than you expected? Was it as fulfilling as you hoped, or was there a lot of unexpected frustrations? Did you regret it?",1606571991.0,2020-11-28 08:59:51
35,Is it okay to work just 8 hours and not go beyond?,138,jzhw16,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jzhw16/is_it_okay_to_work_just_8_hours_and_not_go_beyond/,92,"Hi, I am a software engineer with experience of 4+ years. I worked in all the shifts and 9-5/10-6 suits the best. Besides the working hours, I have never pushed myself and went beyond for the work or team. 

Off late, I have considered getting off work immediately the clock strikes the end of work. 

Is it okay/good for the individual in early years of career to not go beyond working hours?

How to accommodate learning skills if one has to stretch working hours?",1606168063.0,2020-11-23 16:47:43
36,4 Years In - Anyone Feels Significant Dread About Interviews?,139,jdx5u9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jdx5u9/4_years_in_anyone_feels_significant_dread_about/,114,"Hi all, I have been a developer for 4 years. I have noticed that interviews became longer, harder and less forgiving. For instance, even some random startups expect one to go through a bazillion algorithmic rounds before getting an offer.

I find Leetcode difficult - lots of medium problems are very tough and I frankly do not enjoy solving them. I can do lots of them eventually but it takes a while and not fast enough for interview setting. I also dislike fast coding because people who practiced that added serious bugs to production.

Anyone here has tips on how to become better at algorithm interviews? I feel like having practiced for dozens of hours, I am not getting much better anymore. And I frequently fail coding challenges due to time constraints. I also dislike coding under pressure.

I fear that one day I might not be able to pass any interviews despite being a continually employed software developer. I have projects I create on the side but no one ever cares about them - they only care if I can whip up an algorithm to find longest increasing subsequence or similar.

Anyone has tips on what to do? I feel like with the amount of people flooding in into the field as well as interview difficulty it might make me unemployable one day.",1603120746.0,2020-10-19 11:19:06
37,"How do you ""switch off"" as your responsibility increases?",136,jhe75t,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jhe75t/how_do_you_switch_off_as_your_responsibility/,55,"I've experienced a trend which affects me to different degrees throughout my ""lifetime"" at a company - as my responsibility increases (either informally by becoming an owner of different areas or formally by promotion/project allocation), I frequently find myself still thinking about work in the evenings and weekends, even if there are no ""problems"". I am constantly researching optimizations, new tech and just general implementations I can find outside of working hours. 

I believe this is made even worse in tech, when there is always a new tool, new tech, new way of doing things, discussion on different forums. Moreover software is fluid unlike other areas such as accounting/architecture/law, it is fast changing and you have the power to change things whenever you want. 

This has had a negative effect on different areas of my life, this includes social life, health, and wanting to work on personal projects.

I guess I am quite easy to engage, and find work interesting. But I believe in the long run this might harm myself personally.

So my question is: do you find this impacting you? how do you fight it?",1603593772.0,2020-10-24 22:42:52
38,I'm tired of being a web services plumber. How can I escape?,138,g5gxyx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g5gxyx/im_tired_of_being_a_web_services_plumber_how_can/,74,"I'm in my mid-30s. I've been a software engineer my entire career. Over the years, I've been landing in your average west coast big software company engineering jobs which are nothing more than gluing together business logic in web services. I've been in my current job for 10 months at a software company you've heard of. Ever since I started here I've been facing a crisis of purpose. Every day is a struggle for motivation. I have become Peter Gibbons in real life.

I'm just so tired. Tired of the endless planning meetings and bullshit status updates. Tired of the pointless projects that take months or more just to move a few elements around on a web page. Tired of companies that want everyone to become full stack so we can all become interchangeable cogs. Tired of having to learn a new tech stack and company culture at a new job every other year because companies won't keep existing employees at market rates. And above all else, I'm tired of using my supposedly strong, in-demand software engineering skills in ways that do nothing but allow employers to enrich themselves.

I don't want to be a web services plumber anymore. I know I need to leave this job. I don't know what type of work to look for, and I feel trapped in the handcuffs of a high salary and health insurance. What else is out there? How do I figure out what to do next?

I'm wondering how to get into something like the security field. I also have some history with computer networks, which I miss. What other software fields are doing more interesting work? What's the best way for an engineer who's spent years in average CRUD web services jobs to discover and move to a more interesting type of role? And is there a way to find more interesting work without having to be massively underpaid at a startup company?

**tl;dr** I don't want to be a web services plumber anymore. How can I figure out what else to do with my software skills? What other types of software roles are out there where I can both enjoy what I do each day and still make good money?",1587510584.0,2020-04-21 19:09:44
39,"As a female lead, do I have to give up “cute” ?",132,f2bt13,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f2bt13/as_a_female_lead_do_i_have_to_give_up_cute/,142,"So honest real talk for a minute.

I’m currently just your typical web dev office worker. Come in, do my coding, go to meetings, go home. 
I’m very much known by my team as “the Disney girl”
My cubical is decorated in Disney pins, a few Disney themed Knick knack and my office supplies and desktop background tend to be feminine colors and themes.

I’ve recently accepted a position where I will lead the web dev department of a small company.
It’s a relaxed and casual atmosphere, a growing start up.
I’ve been open about my enjoyment of Disney from a vacationing perspective, and how some of Walt Disney’s quotes are words I lived by, so it’s something they knew when hiring me.

But now I’m wondering, if I’m leading a team of developers. Would you trust your manager if they decorated their office with Disney and other cute characters.

I’ve had professors and managers be super into mickey, donald, and goofy. But I love Disney park culture which is much more cutesy feminine. And “cute” doesn’t tend to fair in management well.

My next trip to Disney is what keeps me giving 110% when I want to give up, so I like having the reminders near to me. I also like my work space being a place that feels me and makes me feel at home.

Real talk. What would you think if your new manager liked “cute stuff”",1581471562.0,2020-02-11 20:39:22
40,"Have been ghosted so many times, I now treat recruiting as a UDP transaction, not TCP.",131,i5fe9y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i5fe9y/have_been_ghosted_so_many_times_i_now_treat/,33,"Well, I do freelance contract work, so YMMV. But I often don't get any replies (or sometimes recruiters don't call, even if they wrote ""I might have an opening that would fit, I'm gonna give you a call today!"" in the morning), so each message I send out or reply to, I don't really expect anything back anymore. Doesn't matter how far in the process we are.

Until a contract is signed and I've worked at least a couple of days at that project, I don't consider it safe.

I've had contracts terminated on short notice (""Ok, all the freelancers in the room, starting the day after tomorrow, your services will no longer be needed.""), I've lost money with freelancing at startups (""Oh, yeah, we kinda overlooked your invoice during the whole bankruptcy proceedings, you won't get any of the outstanding invoices""), and I've had negotiations after the work has been done (""Yeah, this picture should be moved slightly to the left when you open it with Internet Explorer in Tablet size, until you're done, we can't pay you"").

I now make contracts which pay by the hour, I send my invoice at the end of the month.

ADD:  Based on this thread, I got asked how to get started and survive contract freelancing and it turned to a long answer, so decided to expand on it and write a blog post about it: [https://www.devpowerup.com/contract-freelancing-web-development](https://www.devpowerup.com/contract-freelancing-web-development) \- would appreciate any feedback!",1596841371.0,2020-08-07 19:02:51
41,"A simple idea, but maybe a game changer? Read for 30 minutes every workday.",135,hvzl0b,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hvzl0b/a_simple_idea_but_maybe_a_game_changer_read_for/,32,"I've always felt woefully behind on the books I would like to read about programming, architecture, etc. I have kids, other hobbies, and value my precious free time too much. I get by just absorbing bits and pieces in online discussions, blog posts, talks, etc.

The other day, I had a very simple idea that might turn that all around: I picked a 30-minute time slot in the morning for reading, and I put it on my calendar. That's it. It's part of my workday. I think it's a small enough amount of time that I'm not worried about objection from management (if they even notice), but over time it will add up to a ton of long-overdue education. And I can stop that nagging inadequacy I feel whenever I see someone mention a book I've been meaning to read.",1595472677.0,2020-07-22 22:51:17
42,"I finished reading ""Accelerate"" over the weekend, and I have some thoughts",129,gm20nw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gm20nw/i_finished_reading_accelerate_over_the_weekend/,41,"https://itrevolution.com/book/accelerate/

I read (listened to the audiobook) over the course of the last week and found this book to be very informative and extremely insightful into the patterns, behaviors, and traits that separate high performing companies from their lesser counterparts. 

The biggest takeaway for me personally is that there is almost nothing about actual tech stacks, tools, technologies, cloud hosting providers, etc. Everything points back to people & practices first, then to architecture & design. The part has a section called ""A high-performing management framework in practice"" where they follow along an overview of the office at ING after their transformation. They describe the organizational practices, how the teams collaborate, and some other things that are very interesting. I especially like how they have created some different cross-sections to help align to foster communication & collaboration in a variety of cross-functional and cross-departmental ways. 

I found that these articles do a much better job of reviewing the highlights and important takeaways than I could ever write myself, but I generally agree with them. 

https://medium.com/@laksdoddi/book-summary-accelerate-by-nicole-forsgren-gene-kim-jez-humble-848e421c4f27

https://techbeacon.com/devops/7-takeaways-accelerate-your-devops

if you have read this book, I am interested in your thoughts. if you have not, I strongly recommend you do.

Edit: Morgan, if you're reading this, GFY",1589839375.0,2020-05-18 18:02:55
43,Just got fired,130,jxbatr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jxbatr/just_got_fired/,71,"Well I had a feeling it’s coming but eventually company restructuring in the name of falling revenue caught up with me. 
My manager made it seem like a mix of uneven expectations and bad timing, but I knew those constant arguments with unrealistic due dates would eventually lead to this. It always bugged my how words like “people over process” and being “agile” were basically used as tools of micro management, making lives of average developers like me among great ones miserable. 
In a way I’m glad since I didn’t enjoy my work at all and wanted to try product or scrum/project management instead but now being on a visa I probably won’t have time to make a career change of that nature and would have to probably rinse and repeat. 
Sorry rant over, and now off to the sweet sweet job hunt during the lockdown 2.0.",1605848831.0,2020-11-20 00:07:11
44,"Our work put into place a policy that if you have kids/are required to take care of someone, you are exempt from on-call and can ignore core business hours. There is 4 of us not exempt on my team, how can i bring up how unfair/exhausting this is becoming?",134,iuy2pz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iuy2pz/our_work_put_into_place_a_policy_that_if_you_have/,73,"With COVID and WFH and after a fair number of complaints our work basically instituted a new policy. In boils down to:

* If you have kids, or you need to take care of someone you are exempt from the on-call schedule if your team has one.
* You are also allowed to work your weekly hours whenever works best for you.

Everyone else has to do on call if applicable, and we are required to be available during the core business hours.

Right now my team (api/backend/etc) has my self and 3 other coworkers who don't have kids, 2 of them are recent grads who we hired early this year. The other senior developer on my team is going to be having a kid in November. Turning it into me and 2 other recent grads. The response i got from my manager was basically ""oh we are going to have to get the recent hires up to speed asap, and get everyone not on call to do more KT"".

I watched an Elasticsearch cluster collapse a few nights ago, while it wasn't critical to our SaaS, it impacted some third party enterprise integrations. I had no idea why (tldr; nobody ever setup log rotate) since i never had any part of setting up ES. My knowledge of ES was passing at best, and I had to basically bang my head against it most of last night. 

On top of that the whole work when ever works best for you is becoming increasingly frustrating. Both me and the other senior are spending most of the core business hours, trying to answer/handle other teams issues/questions as many key people for various parts of our back end have completely random schedules. So they end up being directed to me and my coworker since we are available Monday->Friday. I have had meetings recently where it consists of me being dragged into a meeting with execs who want answers/thoughts on things that i have no understanding of. 

Some seem to do their 40 hours of week they start extremely early for a few hours then make up the rest later in the evening. However others i don't know, i have been waiting almost a week for a coworker to finish a simple task and the last thing i heard was he needed a bunch of extra time to get his kids into the school from home workflow that was monday and he hasn't pushed a single commit at all. I told my manager that we really need to get at least some sort of schedule or something however he immediately shut that down and lectured me about family life and how unpredictable it can be. 

On top of all this extra stuff being dumped on us, we still have our normal sprint tasks which frankly are not being done at all. 

Both me and my coworker are basically exhausted and tried to talk to our manager about how this is basically becoming increasingly awful and how we are both burning out. He said he would bring it up to our CTO at the next management meeting, however he said it is unlikely to change at all. He then basically proceeded to more or less patronize us about how we don't understand the responsibility of family and other things (yeah sorry kind hard for a gay man to have kids, and our families are all 100% healthy so /shrug).

I have worked for this company for 4 years now, and until this new policy stuff was pretty good. I was honestly considering just going to our CTO however he is one of the big proponents of this policy, which kinda puts me in an awkward place.

To clarify a few things:
* I am paid for OT, however i don't care about the money right now.
* OT is basically split between me and the other senior with two juniors getting the pager duty alerts first. We alternate on-call shifts daily. 
* On-call just doesn't mean ops. On call means dealing with our various integrators/enterprise customers who have something broken and require dev intervention this is pretty common since we have a lot of customers across the atlantic.
* I easily work 60+ hours a week right now on top of my on call schedule. 
* I get it kids/taking care of people is time consuming, but if we had some sort of semblance of a schedule then i would have some idea of where people are. My manager will just completely disappear for a whole day for kids/family stuff. He didn't take the day off, didn't report a leave of absence, he might just be making lunch or maybe he is gone for the day. Yet he gets a free pass and me and others end up being dragged into a meeting with execs/vp's/other managers and basically asked to explain about X, or give insight into Y. When i don't know. The reason why it is us is because we will be around during the core business hours apparently. But that consumes a huge chunk of time.
* Both me and the other senior got large raises (+50% for me), when we became the exempted ones. However since COVID doesn't seem to be ending anytime soon i am going to burn out (i think i already am).
* I can't just take time off, because that would leave the other senior to basically be on call 24/7 or so. The two juniors are learning, but they are not comfortable with stuff yet.
* We have asked repeatedly for other people who have kids, to ease our burden and help us with on call but most of the time nobody has any interest.",1600426408.0,2020-09-18 06:53:28
45,Stop telling your devs that they own their own promotion,130,fby7iz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fby7iz/stop_telling_your_devs_that_they_own_their_own/,46,"Dev managers of r/ExperiencedDevs: if you tend to tell your reports that they're in charge of their own promo consider an alternate strategy. 

At my current career stage, I'm gearing up for a transition into a Sr Dev role at a FAANG, and I've butted up against a philosophy that seems at once encouraging and also deflective. Lately, I've also come to the conclusion that this way of thinking is harmful to company, org, and team goals. This way of thinking about promotions, i.e. that the person being promoted should take full ownership of the process, seems to me to only serve as a filter for developers who are comfortable in their current position and therefore won't end up pursuing a promotion, regardless of whether they are already operating at that level. This saves their manager time, and saves their company money, as they'll languish at a lower-paying level while doing higher-level work.

The idea that developers are captains of their own promo ship is at least mildly disohonest. For any process that I could be considered a reasonable owner of, I have visibility into the stakeholders, the inputs, the mechanisms, and the outputs. From my observations and discussions with colleagues, both at my FAANG and other companies, most promotion processes are actually opaque at best, and black boxes at worst. The mechanisms for gauging the wind, charting a course, and steering the ship sometimes simply don't exist. 

As a process, promotions into senior roles are justifiably *hard*. There's documentation to review, peer interviews to conduct, work artifacts to be examined, entire panels to schedule and conduct. It's a huge time drain, and it absolutely does distract from other objectives. In fact it's such an arduous process that it's easy to see why it may entice dev managers to pass it off: it may seem like delegation. Less work to do.

But there's a positive side to the idea, too. In certain contexts, it can be encouraging to *hear* that you can take charge of your own promotion; that you own what artifcats get presented; that you have influence over what work you can plan out for the coming months that you will get you *into* some next-level criteria. Unfortunately this very often conflicts with the truth. 

As dev managers, it's in *your* purvue to find next-level projects for your devs. It's on *you* to identify who's ready, who needs coaching, how the process works, how to navigate it, who the stakeholders are, etc. Be their greatest advocate and their most effective facilitator. Don't tell them that the buck has passed to them, and that not only do they have to deliver on their work but they also have to navigate an opaque and possibly byzantine bureaucratic process. That's *your* job. 

You can choose *not* to do that, and instead insist that your developer take the helm. If you want to grow a team and be effective at delivering longitudinal goals, you're setting yourself up for a hard time. Motivated, effective developers won't tolerate having to build the gallows that they'll be hung on. Instead of spending months examining and executing on arbitrary bureaucracy, they'll opt to interview externally.

In short, if you tell your developers to own their promotion, they will. It just might not look like what you intended.",1583116017.0,2020-03-01 21:26:57
46,"Are interviews REALLY providing better talent as they get harder, longer, and more complex?",130,j9f154,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j9f154/are_interviews_really_providing_better_talent_as/,165,"Had this showerthought today....

Do you feel as interviews, as a trend, become more complex, longer, more rounds, more knowledge to retain, etc, that companies are actually acquiring better talent than when interviews were less stringent?

Are interviews just becoming more unbounded in difficulty with marginal payoffs for all parties? Or is there legitimate benefit with increasing difficulty?

Open ended, just wanted opinions on the current state of things.",1602484428.0,2020-10-12 02:33:48
47,Company structure changed. Is this new structure normal?,126,k71rwp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k71rwp/company_structure_changed_is_this_new_structure/,76,"The way the company operates has changed significantly. It feels off, but I've been here for a while so I don't know how other companies operate. This is the rough new model:

* Every year, the company decides how many developers it will need
* every developer is viewed as interchangeable
* current # - needed # is laid off (based mostly on performance)
* needed # is assigned to the various teams that exist that year
* little to no thought is given to developer skillsets, domain knowledge, etc.

The things that feel off are the 'every developer is viewed as interchangeable' and 'little to no thought is given to developer skillsets, domain knowledge, etc.' ones. This is not a small company...developer skillsets range from machine learning experts to hardware driver developers to database experts to frontend/UX experts.

The pitch is that it allows the company to remain agile and address whatever opportunities come up. My feeling is that it's super-inefficient to change tech stacks or careers every year and it feels like we're eating massive expenses retraining people constantly. For perspective, I'm on my 4th tech stack and 8th manager in my 6 years here.

Is this the new normal?",1607174507.0,2020-12-05 08:21:47
48,Let's have a real discussion on leetcode for experienced devs,125,fa7wcc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fa7wcc/lets_have_a_real_discussion_on_leetcode_for/,111,"So after my recent thread, I've realized that I should try for FANG or FANG type companies because they have good technical ladders if I want to stay as an IC.  But I find almost all discussion of this topic overwhelmed by posts from those who are younger and in a very different stage of life (just look at cscareerquestions).  These are the major differences between them and me:

* I'm not desperate for a job.  I have a good job right now and can take my time looking for a new one.  
* I don't have much free time (two kids take up a lot of time).

For younger people, it's the exact opposite.  Fresh graduates or those early in their career are desperate for that first job or to keep moving up.  And they have a lot of time.  So they can use the strategy of over-preparing to maximize their chances.  This is where the stories of spending months of preparation doing leetcode comes from.

But I don't need and don't want to do that strategy.  For me, the best strategy is to prepare just enough to have a decent chance of success.  Imagine preparation and interview success as a graph with time vs % success.  As time spent increases, % goes up but at rapidly diminishing returns.  I want that sweet spot where % is decent and time spent is not too bad.  

So let's use this to discuss what that sweet spot looks like.  How much preparation is required to have an ok chance so that going to the onsite is not a complete waste of time?",1582813647.0,2020-02-27 09:27:27
49,How do you guys pay attention in boring meetings?,126,jgmy5j,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jgmy5j/how_do_you_guys_pay_attention_in_boring_meetings/,88,My manager(a former teacher) has a nasty habit of asking questions to us to make sure we're engaged in a meeting on things I have no interest in or I just can't connect with (undergrad for me was 10 years ago).,1603487904.0,2020-10-23 17:18:24
50,Have you ever seen all of the technical leadership leave simultaneously?,125,kczppi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kczppi/have_you_ever_seen_all_of_the_technical/,61,"I'm at a small company and recently we've had a wildly mismanaged project which caused morale to drop like crazy and burn everyone out. The project is over now but I'm seeing a LOT of dentist appointments on the calendar. I wouldn't be surprised if the technical leadership all leave soon. At least that's what I'm also planning on.

But out of curiosity, has it happened to anyone?",1607988507.0,2020-12-14 18:28:27
51,Having access to production data makes me nervous,128,j8lx3g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j8lx3g/having_access_to_production_data_makes_me_nervous/,60,"Hi everyone. I’m a software developer, working for a small company (less than 10 developers). I have been in the field for about 10 years, and at previous companies I never had access to production. Someone else was responsible for modifying production data or doing deployments. At my current company, any developer can be assigned to carry out a series of steps in production, which usually includes running database scripts or editing files. I find myself getting very nervous even doing simple tasks in production. I triple check everything I’m about to do, and as a result I’ve caught myself about to make mistakes a few times. Examples include almost running a script in the wrong environment, or against the wrong client’s database. While I haven’t made a big mistake yet, these close calls shake me up. I have considered bringing this up to my manager, but I’m not sure what to suggest as a solution, and I worry that it will be seen as me just not being able to handle the role. What’s the data access policy at your company?",1602370829.0,2020-10-10 19:00:29
52,When You're Bored Out of Your Mind?,122,ict3fi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ict3fi/when_youre_bored_out_of_your_mind/,39,"One side of me knows I've got it good: a job at a company that seems, as far as the executives are telling us, stable through a pandemic and recession. The job pays very well for a low-to-medium–cost-of-living area. These things mean a lot with so much uncertainty ahead in the economy.

On the other hand, my lived, day-to-day work experience is that I'm bored. Not just a little bored. Painfully bored. It's not that there's no work to do; there's plenty. But the work feels like endless busywork to me: yet another REST API to implement according to the same pattern, a new column to retrieve from the database, working around the same architectural debt we'll never have time to replace, some ceremony particular to our process and architecture, etc. The company's culture has evolved to put tremendous emphasis on speed of feature delivery—oh and quality whenever moving fast inevitably breaks things.

I've had some discussion with management about this, put less bluntly: ""I feel like my experience and skill set could be better leveraged...""; ""if we slowed down, we could address some things that would speed us up in the long term""; etc. In theory, management agrees; in practice, well, we really need to get this story out yesterday.

I think I'm a bit too burnt out for an effective job search (or interviewing well through a demanding interview process) right now, but I wouldn't want to just quit a stable job in the middle of a pandemic.",1597889791.0,2020-08-19 22:16:31
53,How to handle junior unreceptive to feedback?,125,kezt2p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kezt2p/how_to_handle_junior_unreceptive_to_feedback/,95,"Hi y'all, there is a junior called Joel who joined our team a few months ago. Joel is generally pretty good but sometimes his code could be better.

Also, he is not that good at taking feedback. He sometimes doesn't acknowledge PR comments or will maybe do the specific fix requested but doesn't apply it more generally. The same kinda things keeps coming up. Things got bad last week when he raised a PR that had quite a few bugs. People in the team picked up on them in review. We think our comments were constructive but there were definitely a lot, which sucks I know. Joel started fixing some of them but then kinda flipped out that we were raising all these tiny issues and they didn't matter.

For info not long ago we had to revert some of Joel's work because it caused a production outage... the things we were commenting on weren't tiny more like 'this might cause a null pointer exception'..

I think part of the problem is our team manager, Martin. He knows Joel from outside of work I think and is kinda protective of him. Martin is very 'just ship it man' and will approve Joel's work without looking very carefully (that's how the last production outage happened).  Martin thinks we are too tough on Joel's code. I think Martin encourages Joel to take on tasks that are a bit too big and then Joel starts to panic when he's taking too long and just wants us to merge his rushed work.

Things have been pretty tense since last week. Martin is kinda implying the whole flip out was our fault for making too many comments. We want to help Joel but we can't pass on bugs and he has to be able to take constructive criticism. it feels to us like Martin isn't encouraging Joel to learn from this?

Edit: thanks so much to everyone for their comments. There was loads of really good, thoughtful advice.

I  really liked the point that PRs shouldn't get lots of comments because  we should all have a shared understanding before that. Some of the  comments critical of Joel didn't really ring true. I know you can only  go by what I wrote, but that made me think there was potential to sort  things out.

So I took Joel out for  a walk this morning. We agreed we could have communicated better (I  don't know if Joel realized I meant mutually haha). I suggested we maybe  all get together and discuss code standards, how we approach things  etc. That got shot down real hard.

As  some of you suggested, Joel pretty much sees himself doing exactly what  Martin wants and so our ""gripes"" are our problem. There was zero idea  he could have maybe done things differently. Because he's been in other  teams in the same company he says he knows what's expected. I was  honestly pretty shocked by this attitude but I know this is Martin's  view too so makes sense.

I'm kinda  thinking now of just letting it all go. I mean, it's kinda Martin's job  to set standards, right? If more shit does go wrong then that justifies  going over his head but I'm not confident doing that now.

All  these comments about working together constructively sound great but it  needs to come from both sides I think and that's not there.",1608248821.0,2020-12-17 18:47:01
54,Did anyone get impostor syndrome later in their career?,121,ipztzw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ipztzw/did_anyone_get_impostor_syndrome_later_in_their/,103,"I’m 40 and have been working in software for 18 years. For most of the time I was a very confident developer (most definitely spilling over into arrogance in my earlier days). I think I hit some kind of sweet spot between confidence and humbleness in the “middle” part of my career. 

I’ve been at my current place for 4 years and I am being crippled by bouts of impostor syndrome, to the point where anxiety is impeding my ability to do work. I’m sure WFH has exacerbated this but it was definitely there a while before that. I try to tell myself the usual advice ie everyone gets IS sometimes but it’s not helping.",1599757707.0,2020-09-10 13:08:27
55,"Having a great relationship with your job is an exception, not the norm.",120,giygyc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/giygyc/having_a_great_relationship_with_your_job_is_an/,63,"Likewise, it's also an exception to have a horrible relationship with your job.

For the vast majority of us, I'd guess, we just have an okay relationship with it, nothing stands out as particularly stellar or bad; it's just kind of an average day-to-day experience.

This topic came up yesterday while I was talking to a younger relative who also works in tech. He commented on how almost everyone he knows loves their work and gets paid handsomely working on interesting projects, while he is ""stuck at an average job working with a decade old enterprise app dashboard"".

The fact I wanted to point out to him is that if someone else's job:

- Allows the person to work on cutting edge and interesting technologies...
- Gets to work on cool and interesting projects...
- Has great pay and benefits...
- Provides the person with a consistent work-life balance...
- Has a supportive and technically competent management...

... Altogether, it means that the person is so much more of an outlier than he thinks.

For most of us, we get 2-3 those advantages utmost at one time, and we don't necessarily have too much of a strong feeling with our job; it's not something we consistently hate nor love and **that's okay**. We don't need to let our career define what's meaningful in life.

(Of course, it's a different thing if your job absolutely bores you. That's not good either. That's a sign that you need to find a new placement that could help you to be more mentally stimulated.)

It's just something we do to get paid so we can enjoy the rest of our life. Whether it be working on side projects, playing video games, or just spending time with family and friends.

So yeah, just wanted to share my thoughts since some of you might need to read this.",1589403271.0,2020-05-13 16:54:31
56,Junior-ish hire is absolutely crushing it a month in. I came in at a senior level and having a hard time understanding some of the code,117,jo90ky,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jo90ky/juniorish_hire_is_absolutely_crushing_it_a_month/,60,"As it says on the tin. I do think I have the intangible skills that were quite hard fought but man, this guy is a PR and productivity machine.

When you get a Sr tier guy joining the company, what are the contribution expectations like where you work? This is my first ""real"" senior gig and I am eager to do a good job which to me means forging lots of quality connections, understanding the product and a bunch of other stuff but this guy is a ticket closing machine / code genius and I'm feeling out of my depth.

I understand that the comp difference between us is also pretty substantial. I don't want him to start feeling like he's underappreciated given my work so far (though I'm just on my second week)

Hope that makes sense - cheers!",1604566705.0,2020-11-05 03:58:25
57,"What is that one piece of advice or Book or Course, you regret not knowing sooner?",120,hf0v6o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hf0v6o/what_is_that_one_piece_of_advice_or_book_or/,44,"For me

Advice: Developing communication skills as much important as developing technical skills.

Book: Pragmatic programmer (simple tips yet so effective)

Course: Clean code by uncle bob was a life changer for me.",1593033518.0,2020-06-24 17:18:38
58,Surprise forced time off at the end of the year- a red flag,116,kb5apn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kb5apn/surprise_forced_time_off_at_the_end_of_the_year_a/,54,"IME- if you're told something along the lines of ""We're shutting down the last week of the year so that you can enjoy time with your family. You may take PTO or go unpaid,""- that's a red flag.

Primarily because it's extremely disrespectful- the execs get plenty of vacation and have plenty of cash and probably knew it was coming far in advance. But you got stuck with a week of downtime and less cash and (especially now) nowhere to go because it was a surprise.

Also pay attention to how this is spun- is it open and candid ""We're burning your PTO because it makes our books better"" (what they were really doing) or is it ""so that you can spend the holidays with your family""- a total lie, and all the more galling when you needed the money/pto and are not in the exec's cushy situation. I subtract points when upper management can't be candid.

I was burned by this a long time ago and want to point it out to those who might keep this in mind in future.

This has happened to me twice now. Once at a company that I should have bailed from earlier, and again now. Now is a little different since it's a contracting company and because no one can go anywhere, no one's taking vacation so the hours are in excess of what was budgeted- so I'm giving them a pass.

I'd be interested in your thoughts.",1607730726.0,2020-12-11 18:52:06
59,My CTO is scary and adversarial,118,jwdnty,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jwdnty/my_cto_is_scary_and_adversarial/,76,"Hey all,

So my CTO is scary. He's proper smart and very, very good at coding, but he's also very quick to throw blame about or pile on something. If you bring up something that looks like an issue in a meeting or a PR, and it doesn't immediately look like an issue to him, he'll jump on it with loud and harsh words. If you can explain exactly why you brought it up and why it's an issue he'll backpeddle graciously but it makes so many interactions far more adversarial than they need to be, and it makes you nervous to  ask for help or for anything really. To non-devs he's even harsher, and has caused HR issues because of it.

I think he prefers this kind of interaction, but most of his department definitely do not, and it puts an air of tension around meetings. Do you have any advice for dealing with this?

EDIT: To make it clearer, this is a fairly small company with about 10 devs total, the the CTO still does a fair amount of programming and PR reviews.",1605725360.0,2020-11-18 13:49:20
60,"For developers that started their careers working at very small companies, what culture shocks did you get when going to a large tech company the first time?",118,k1mtcd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k1mtcd/for_developers_that_started_their_careers_working/,126,"Did you have to reason about knowing you will take less responsibility of a project? Were you happy about some changes? Unhappy with others? What advice would you give for those working in 10-20 people companies with an eng. team you can count on one hand to  brace for when joining a big tech co (FAANG is not exclusive, it could be any other name brand company)?",1606451585.0,2020-11-26 23:33:05
61,"Mentally Checked Out, Burned Out After 3 Years In",116,k05h42,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k05h42/mentally_checked_out_burned_out_after_3_years_in/,98,"Hi, been a dev for last 3 years, many things happened during that time. Currently working fully remotely. However, I have terrible time in focusing and doing work. Recently, 2 out of 4 team members left the company and another took rest of the week off to tackle health issue. We work at a fast-paced start up with a gazillion requirements changing all the time. Thankfully, company is recruiting for 3 more people in my team but it does not fix my issues.

I have saved 6 figures over the last 3 years being very frugal, somewhat expecting a moment like this. And here I am, barely doing any work. I have not written a single line of code for 3 days now and the company did not notice yet. I have stopped playing music because I feel so exhausted every day. It got worse after senior coworkers left. Before that, I could output some code but nowadays I am totally dead and not interested in anything besides huge urges to spend time outside doing fuck all.

Any amount of thinking about JSON makes me feel nauseated. I did not have any holidays since April though working from home allowed me to take breaks long enough to recharge. But recently, my battery stopped recharging and I sometimes have chest pain from thinking about work. So questions for you...

1) How do you manage stress? Is it possible to sustain a stressful job or is it a sign it is too much for me? I do some light exercise like yoga and 5 tibetan exercises but they don't make a dent in how I feel. Going for a walk helps for 30 mins and then I feel tired again.

2) I recently got an offer for another company but listening to how much work they require + in office presence made me nope out of it. I would probably be worked to the bone and tossed out when completely exhausted.

I feel like after 3 years of work I am spent....I can afford to quit the job and rest but I fear coming back would be feeling the same.",1606255216.0,2020-11-24 17:00:16
62,I can't seem to work 8 hours minimum a day WFH,114,jj15ue,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jj15ue/i_cant_seem_to_work_8_hours_minimum_a_day_wfh/,91,"I use Toggl Track to make sure I am actually getting my hours in since WFH can be unstructured whereas the golden rule of 8 hours in an office is the bare legal minimum requirement and that is easy to adhere commit to. So when I use toggl, doing 8 hours of real focused work a day just wears me out and eats up the majority of my day due to all the breaks I take. A lot of days I can't make it to 8 hours without adding a session or 2 on the weekend.

1. Am I just working too hard, and should pace it to make the 8 hours go by more smoothly?
2. Should I work less than 8 hours a day and lie and say otherwise? How should I then hold my self accountable, 6 hours = 8 hours?
3. Should my breaks be included in my work shift? If I do this, how will I hold myself accountable to not take too many breaks or not let them run over too long?


I've WFH for a long time in the past.",1603834318.0,2020-10-27 17:31:58
63,"Loving the craft, burnt out from the trade.",116,jbbqcf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jbbqcf/loving_the_craft_burnt_out_from_the_trade/,83,"This is more a rant than a specific question, but Jesus Fucking Christ, why is so hard to find a place that lets you just program and care about your code most of the time?

I've been working for almost 8 years, and I'm so FUCKING tired of having to fight left and right to follow the narrow path of what-it-is-supposed-to-be-a-programming-career that believe me, if I could, I just moved on to a different career and kept on working on my spare time on my shitty projects that are fun, small, and never will get anywhere.

Most places usually go to the edges of a scale bounded by:

* Stale place where the air is toxic, the people started working there before the turn of the millennia and the technology hasn't changed since and hired you because they want to try that ""SVN"" thing you talked about in the interview. And because you filled more than 40.283% of their technology acronym bingo (T.A.B. of course).
* Super cool and hip place that uses the latest technology because is the latest technology and asks you to make a useless hackerrank clone test or alternatively a 4-hour assignement in a technology you have never used.

And when you finally get into somewhere that seems to be fine, its time to to fight, thinking on jumping ship, and get depressed because what are you doing with your life after being asked or pushed by, and not limited to:

* Getting into a management career path.
* Doing devops and/or LVL 2 support tasks on a daily basis.
* Take on functional analysis tasks even though the position was ""pure technical.""
* Told that ""part of my work"" was talking in public and making presentations of the team's work.
* Being required to remember every small detail and intent on a huge project because there's no documentation and the DAMOCLES SWORD OF THE RANDOM SPRINT TASK ASSIGNATION will strike you.
* Being able to switch offices from 1 hour commute to 1.30h if you are in a staffing agency.
* Ignore every single thing I've learned on clean code, good practices and architecture, because ""Bloody Mess Code"" is the real new trend on software development. [And always has been](https://i.kym-cdn.com/entries/icons/original/000/034/470/7a0.jpeg).

All of this while the company does jack shit to keep yourself up to date (is better to waste time in company-wide meetings than in giving you one hour per week for self learning) but everyone and their mother is asking you to be up to date to work with them.

And you get old, and the imposter syndrome changes and what at the beginning was ""I am stupid, I don't get this"" becomes ""these guys are going in a completely different direction of what I think we should be going, WHY I DID GOT IN HERE, GOD DAMMIT.""

All I wanted was a place to be able to write code, to automate processes and having an option to improve them. To be proud of the shit I've done. To discuss architecture and usability. Being able to learn and keep myself employable. But it seems no one is providing this kind of workplace anymore.",1602745412.0,2020-10-15 03:03:32
64,How many of you have a net negative lines added to the product at your current company?,117,i3qox4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i3qox4/how_many_of_you_have_a_net_negative_lines_added/,54,"Using GitHub and thanks to refactoring and removing dead code we have devs with -100K lines in the product.

I want to give them an award. I think it be fun.",1596600386.0,2020-08-05 00:06:26
65,"As a senior dev getting ready for interviews, the recent trend of Math questions worries me",116,hxqdl2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hxqdl2/as_a_senior_dev_getting_ready_for_interviews_the/,118,"I have worked in major etailer/SaaS/data operations from startups to large enterprises, built good amount of production code. Recently getting ready to interview with west coast companies. Leetcode/system design - everyone just needs to study them more or less. However there seems to be a recent surge in trend of math questions. For folks like me who has not taken math class or studied math in 10+ years, this is extremely worrying. Below are some examples from FAANG I have heard:

    Provide number of trailing zeroes for 100! 
    
    Find First Fibonacci number with 1000 Factors (eg: 8 is a fib with 4 factors)
    
    You are given an array of N integers, A1, A2 ,…, AN. Return maximum value of f(i, j) for all 1 ≤ i, j ≤ N. f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x. f(i, j) = |A[i] - A[j]| + |i - j|

The first and second question requires brushing up on Number Theory, and second one if aiming for O(n) requires certain level of math intuition. I asked some of my colleagues/friends, none of them were able to solve these questions. However when I asked people in school preparing for internships online, they were able to recollect class lectures and solve them.

At this point should HR tell us to prepare Algorithms & Data Structures & Number Theory? For older devs with family and less free time - how do you propose to deal with these problems? Humble up and pick up Number Theory books, play the roulette and hope they ask standard A&DS questions?",1595726361.0,2020-07-25 21:19:21
66,Resume inflation,117,khaipc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/khaipc/resume_inflation/,91,"Tonight I browsed LinkedIn in hope of learning to revamp my very outdated profile, little did I know I was in for a shocker. Many of my ex-colleagues put job titles that they did not have in their old jobs. A frontend dev put ""Software Architect"", another junior dev added Senior to his title, a QA intern is now SWE. Here I am using ""Software Engineer"" in a job where I was technically the lead, and omitting a tech lead job at a failed startup (because I'm no longer in contact with anyone there).

Does no one vets job history anymore? Are honest people at a disadvantage?",1608555576.0,2020-12-21 07:59:36
67,"How do you get that ""magic"" when everyone is working from home?",117,iph1ly,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iph1ly/how_do_you_get_that_magic_when_everyone_is/,87,"Working from home was already trending, but with 2020 giving it a little nudge it looks like companies that can, are going to be moving to a WFH model going forward. I love WFH! My productivity is great and I certainly don't miss the commute. I do miss the people and that energy you get when you're all in a room and get jazzed up and working on something big together. Those hallway conversations that connect the dots and put the pieces of something together that would have never happened without that accidental conversation across teams. The whiteboarding sessions where you can just feel something awesome unfolding as people are jumping up and contributing and coming up with ideas excitedly.

I haven't seen that happen, especially at the cross-team level, while WFH and I am concerned that's where the productivity is going to taper off and something major will have been lost. It's so easy to say I'm productive because I'm just knocking out tickets and the inability for people to drop-in and chat has increased my focus time. However, I no longer have a handle on the pulse or morale of my co-workers throughout the company. I no longer have insight into things their teams are wrestling with because the opportunities to have those conversations have dried up. I no longer see people getting that excitement and designing something together. And there's definitely a cost to that.

So is this something other teams/companies have struggled with and figured out? I'm just curious how people have managed to bring that energy/magic into a WFH paradigm.

&#x200B;

Edit: (attempting to summarize the feedback)

Here's a poorly summarized list of some of the great feedback I got from this thread. Definitely some things I'm going to be trying with my own team/organization. Really appreciate all the great conversation.

&#x200B;

Overall Takeaway:

The overall takeaway seemed to be that the hallway/coffee break/lunch room type conversations and those energized times were events of chance opportunity. In this WFH world, you have to work to create more chance opportunities. They don't necessarily exist naturally so you have to make space for them. 

&#x200B;

Suggestions:

* Pair programming - was a solid tactic before WFH and remains a key tool in the belt now, provides a chance to get to know other developers and have an opportunity to spark conversations and creativity
* Scheduled Team/Cross-Team Social Times - create planned times for people on a team and across teams to just socialize and hang-out, will require some active participants to ease the awkwardness and make people comfortable with the video hangouts
* Virtual Communities/Virtual Community Hangouts - forming various chat rooms/idle rooms around various interests in the company gives people with similar interests across teams a chance to talk. Helps with both getting to know each other and provides an opportunity for just random conversations to bubble out. 
* Key individuals on each team that lead by example and get people chatting/posting - seems like a lot of the success in the WFH world is dependent on making sure you've got a good mix of people across all of the teams. If all you have are heads down developers, it's going to be challenging to draw them out cross-team. A WFH company is going to need to balance the types of people they have to help encourage good communication and collaboration in this WFH world.
* Weekly Demo Meeting - chance to talk about the project people are working on (engineering only, so there's the freedom to talk)
* Weekly Standing Engineering Meetings - a chance for engineers to talk to engineers
* Hackathons/Innovation Days/Events - fun days to encourage cross-team collaboration and spark ideas
* Hangout Video Rooms/Coffee Break Video Room/Lunch Break Video Room - re-create those event opportunities in the WFH world. Give people a place they can just idle, hang out and talk
* Leads/Seniors Creating Open Video Times slots - having just drop-in times will encourage both your team and other teams to simulate the drop-ins that could occur when in the office
* Whiteboarding - use a vector drawing tool (Lucidchart/Inkscape, etc.) to help make Whiteboarding in a call that much easier, find better tools to simulate the types of collaboration that were being done in the office.
* Group Working Calls - schedule times where your teams just kind of gets in a call and works together, creates an office type opportunity
* Move teams chat public/drop-in and idle more often - teams that use to talk privately will need to chat publicly to allow other teams to hear and have those drop-in, connect the dot types opportunities
* Random Meetups/Scheduled Meetings with people/Coffee Chats - create more ways to talk with other people, you have to actively seek them out now and make them happen. Create a virtual ""walk around the office and chat with people"". 
* Getting comfortable with the tech/tools in the WFH world - the more comfortable you are with the tools and less embarrassing/foreign/awkward they feel, the more comfortable you will be doing the types of things you did in the office. Just dropping in to chat (i.e. video calling), etc.
* Mob Development - agile technique to get everyone on the team to tackle a problem with one driver. Great way to shake things up and build some team collaboration opportunities.

I'm sure I missed some great advice/thoughts/ideas in this thread, so my apologies! Definitely worth a read and thanks again everyone for the fantastic conversation!

&#x200B;",1599690992.0,2020-09-09 18:36:32
68,How to learn good architecture?,117,il1h3g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/il1h3g/how_to_learn_good_architecture/,47,"I'm a software engineering manager, and I'm considering moving jobs and eyeing all sorts of companies including the FAANGs. I know they like to ask architecture/system design type questions. My career has either been at small companies that didn't have to think about scale or on product teams that were more focused on delivering features. So designing a system and then scaling it isn't really something I have a lot of experience with.

How do you get better at that without doing it?",1599055890.0,2020-09-02 10:11:30
69,Why do companies hire for personality instead of just skill?,114,k4lhfz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k4lhfz/why_do_companies_hire_for_personality_instead_of/,194,"This one is driving me a bit crazy. At my current company, we are dangerously low on staff. We desperately need to hire someone for an open role. We interviewed a guy who I thought was great. He completely nailed the technical question. He has an impressive academic background and has some really cool projects he's doing on his own time, and the interview just confirmed to me that he's really smart and would be great in whatever we threw him at.

We passed on him, because a few people thought he was too quiet, or took a while to warm up socially during the interview.. over Zoom.. in 2020.  I just don't understand this. I would much rather hire someone who is strong technically, who is smart and will figure things out, instead of prioritizing external factors, like whether you would want to go get a drink with them. Lord knows when we'll ever be in office again anyway.

I understand wanting to make sure someone can communicate effectively, that they can explain their projects, that they have the basic social skills to work with others. But often I see that devolve into hiring based on personality or ""culture fit."" There is often a ""company personality"" that is dominant across the engineering org. People who don't fit into that get passed over. Often this unintentionally can turn into discrimination as well without the interviewers even being aware. I know it's not illegal discrimination to hire based on personality, but it rubs me the wrong way, and often leads to sub-par teams that feel more like a social club than a professional working group.

In general, I'm just very wary of this idea of hiring based on personality. I try as much as I can to ignore the ""would I like to get a beer with this guy"" factor and focus instead on testing specific technical skills, asking about background, interests, and trying to get a gauge of their work ethic. I would never want to hire or work with someone who is a jerk, but someone who wouldn't be my friend might still be a really good coworker.",1606860460.0,2020-12-01 17:07:40
70,How to deal with developers over-engineering things and bottlenecking deployments,111,jtk9qz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jtk9qz/how_to_deal_with_developers_overengineering/,72,"Been at a couple roles where devs find the need to over engineer the code for really no reason outside of their own preference and enjoyment I spose. It generally makes things more complicated and since we have a myriad of similar apps, hard to keep everything straight day in and day out. In my experience these have generally been the same devs that want to rewrite everything that touches a story/feature/task etc. but is entirely out of scope and there is a fine line here I think. 

I like to abide by the KISS and YAGNI mantras but am having trouble dealing with these devs on code reviews. They’re intelligent enough people and are semantically correct but to an unnecessary extent. I found a straightforward and blunt approach beneficial but generally sound like an a** doing so. How do you folks generally deal with this?

Edit: thanks for all the replies, going to try and respond as soon as I can but at work so may take a bit. Appreciate the community, good stuff.",1605318016.0,2020-11-13 20:40:16
71,Is it usually a red flag for a US developer if almost all of a company's engineers are offshored?,111,jrw92d,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jrw92d/is_it_usually_a_red_flag_for_a_us_developer_if/,80,"I have applied to a startup company based in the US and they replied back with interest and want to schedule an interview with me. I later looked at their LinkedIn company page again and went to see who's working there. I noticed a pattern. Out of their 50 or so employees on the page, almost all their engineers live in Ukraine or the Balkans. They comprise fewer than 40% of the entire company staff, but almost 100% of the engineering team. Only one engineer is from the local area where I live in the US. And the employees that do live in the greater local area almost all have director or manager roles.

This isn't my first time around working with a company that's structured like this. In my previous job, 95% of the engineer team lived in India or Pakistan. My managers were mainly cool people to work for, but it was sometimes a hassle to coordinate with people halfway across the globe in bigger projects, and furthermore I have grown to get tired of the job as there was really no future for US developers other than to move into a non-eng. role like management. And also because of the crappy pay. That old job paid $45k for a salaried worker in the US and $20/hr for independent contractors. Maybe fine for ""baby's first SWE"" job but I could easily do better now.

I have fears that this could turn out the same with the new company. That I can't grow into a lead or architect, unless maybe to lead non-US developers. Nothing against the people from other countries, but I think if a US company structures their staff in this manner- 99% of tech in cheaper foreign countries, non-tech in the US- it will be a disadvantage to any tech people from the US because they won't invest as much on the US side. Are my notions true?",1605079543.0,2020-11-11 02:25:43
72,What makes a true senior engineer?,114,ivmcwo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ivmcwo/what_makes_a_true_senior_engineer/,77,"In my mind it's doing everything a competent mid-level engineer would do as a coder, plus:

1. Understands that code needs unit, integration and end-to-end tests to be true quality.
2. Has to always be thinking in terms of performance, scalability, reliability, extensibility, maintainability. Always.
3. Has the ability to interface at a HIGH level to different stakeholders - architect, tech lead, product manager, project manager, technical documentation, test, other engineers. Customer is optional depending on if freelance situation.
4. Has the ability to drive stories from requirements --> design --> coding --> testing and delivery. Takes ownership and is glad to do so.
5. Never skimps on design artifacts, is not trying to be the 'coding shaman'. Domain knowledge is to be shared.
6. Never loses temper. Seniors must posses extremely good soft skills. They know how to be diplomatic in the roughest situations. Rudyard Kipling - '*If* you can keep your head...'
7. Is always learning new technologies, frameworks, design methodologies(SOLID, Domain Drive Design, etc..), no complacency.
8. Is always willing to mentor junior engineers.

But the single most important quality for a senior engineer... is **honesty**. Never lie when giving estimates to the lead or if you're stuck on some technical issue. Always own up to your mistakes. Always be 100% transparent with how things are. Don't play games, they'll end up playing you.",1600521110.0,2020-09-19 09:11:50
73,Favorite Conference Talks,110,k9br70,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k9br70/favorite_conference_talks/,34,"I was having trouble deciding between two conference talks happening at the same time, when I remembered that basically every conference talk gets uploaded somewhere a few weeks later. Do you have any favorites?",1607486528.0,2020-12-08 23:02:08
74,Anyone else notice the extreme number of senior positions on the market?,109,jxw3at,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jxw3at/anyone_else_notice_the_extreme_number_of_senior/,143,"I've been searching for a while and it seems like ""team lead"" and ""senior software developer"" are the most common job openings across the board.  I've already been to a few of the interviews and it feels like if you don't 100% know every technical piece of information they ask during the tech interview, you never hear back.

This is in contrast to back at the start of the pandemic where it felt a lot more open.  People would ask generally about what you did in the previous job and some high level questions about architecture.  Maybe it's just me but it feels like places decided to cut junior and mid level devs in favor of senior workers. ",1605930618.0,2020-11-20 22:50:18
75,Figured I would pass the most lifesaving work from home tip I have learned as an embedded software dev.,111,ftzu6d,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ftzu6d/figured_i_would_pass_the_most_lifesaving_work/,16,"Guys, network controlled power strips exist. For many of you this will not matter, but for those of us working on dev boards, SoCs, or other such finicky things that have a tendency to need hard power resets to debrick. Holy shit we just got them in today and the boss got permission to enter the office to install them. I can now actually do work again! Huzzah. (Warning they cost 2-3x the price because global supply chains are fucked.",1585909431.0,2020-04-03 06:23:51
76,Being pushed into a lead role too early,104,j5obfa,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j5obfa/being_pushed_into_a_lead_role_too_early/,39,"I am a backend dev with 2 years in the industry. A few weeks ago I was asked if I wanted to be lead and senior on a specific project, which I agreed to as I thought it would help accelerate my career. A lead would be placed onto this project and I would eventually be mentored by him.

I have found it very overwhelming. I have had to work a lot of late nights. The lead left for vacation and I have been asked to be the lead for the project until he gets back and I have received no mentoring. I am lead to developers with 6-10 years of experience whom seem to know a lot more than I do. We are in architectural meetings where I am the slowest to process what we are doing and my suggestions to solution are very suboptimal, such that the other mid level dev is coming up with very good solutions to these problems.

I think it is very obvious I am not ready to take on a senior/lead position yet. It seems to require a lot of soft skills and experience that I have yet to achieve. 

I have a meeting with my boss and I would like to discuss taking a step back from this position, as it is relatively early within the project and allowing someone else to take lead should be feasible. 

I was wondering how would be the best way to bring this up without making myself look utterly incompetent?",1601949469.0,2020-10-05 21:57:49
77,Hitting the wall,109,gv67ef,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gv67ef/hitting_the_wall/,85,"Will have been working as a developer 20 years as of 17/7/2020. Started two weeks after leaving university. Never liked it, but I needed to earn money. I kept myself going with the idea that I would only be doing it temporarily until I found something better to do. Somehow I've managed to keep the show on the road for 20 years despite having zero passion or interest in tech/computers. There have been a few times where I've felt I'd reached the end, but in the end I always just stuck it out. 

However now I think I've truly hit the wall. I was off work for 9 weeks because of COVID and didn't use one single brain cycle to think about work/career/computers/programming in that time. It was great. I built some windows, some pieces of furniture, did stuff I enjoy that I normally have no time for. 10 days ago we started back a work again and I've literally been staring at the screen, moving the mouse around for the whole time. Not written a single line of code. I've just run out of gas, can't do it anymore. This time it feels like the end of the road. The idea of doing 25 more years of this is just unthinkable.

Dunno why I wrote this, I don't think there is any advice that can be given. Guess I just wanted to have a self indulgent rant.",1591128777.0,2020-06-02 16:12:57
78,There's more to this industry than web development,107,fciqp5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fciqp5/theres_more_to_this_industry_than_web_development/,103,"I'm curious why nearly all posts here and on CSCQ are about web development. 

Software engineering includes a lot of areas other than web. Desktop development, embedded systems, consoles, driver development, HPC, AI / DL / ML or whatever it's called this week, GPGPU... I realize that web is a huge part of the field, but it's far from the only option. 

Are these subs just inherently biased towards web, or are there that few opportunities in other areas that they don't bear discussion? I work in a games-adjacent segment and haven't touch a website or database in a decade. It's just surprising that there isn't more interest in other areas from new grads or shared experiences from seasoned coders.",1583211059.0,2020-03-02 23:50:59
79,"If unit tests are expected part of software development, how come I haven't seen any at work? Is unit testing still rare even today?",104,ixajhz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ixajhz/if_unit_tests_are_expected_part_of_software/,155,"When I discuss my job experience with other developers, they have been aghast at the thought of not done any unit testing. I tell them I have never seen it in practice. I only follow the practices already in place.

With that said here's a description of the software developer jobs I've worked:

* A small independently owned photo studio. The owner is an ex-DBA who started his IT career in the 90's, then left the IT world to pursue his passion of photography. He's my boss and the only title I could give him, because he does multiple jobs, including occasional web programming. I was the only dedicated programmer at the company. I saw no unit tests in the code he wrote.

* Programmer for a multi-national book publishing company. They have hundreds of workers among all their offices. I worked in a pair of two developers. My manager is non-technical and in fact does double duty as QA. No unit tests found here.

* Software engineer for a digital agency. Non-technical co-founders. However, being founders of a tech company, they do hire lots of developers, who are usually offshored from India. 10% of their dev teams are in-house where I work alongside anywhere between 1 and 4 programmers. No unit tests found here.

* A bootstrapped early B2B startup not even seeing a series A. Smaller in size than the digital agency but again a lot of offshore devs. No unit tests found here.

So as you can see, I worked in a variety of places and none of them have unit tests. As far as the people who find that to be ridiculous, are they in a bubble expecting too much of companies and lack of unit tests is actually the norm? Or is it me that's in the bubble, who's only getting the bad hands when it comes to the cards of software development practices?",1600754885.0,2020-09-22 02:08:05
80,The process for interviewing Senior Software Devs is F*cking Broken,106,fjwoy3,ExperiencedDevs,https://www.naveed.dev/posts/senior-engineer-interviews-broken,65,,1584437788.0,2020-03-17 05:36:28
81,Employer withholding paychecks after refusal to conduct knowledge transfer to outsourcing firm,107,g6bc1c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g6bc1c/employer_withholding_paychecks_after_refusal_to/,38,"Long story short I'm a project lead at a small/midsized company, up until several days ago I was leading the development of one of the companies web projects and I had 2sr, 3 mids, and 2 Jrs working on the project.  last Thursday I was called into a meeting where I was informed the company is planning to move operations over to an unnamed consulting firm and they asked me to conduct a month-long knowledge transfer where I would be training my team and I's replacements.  I politely refused, knowing that it was the end of the job for me either way.  My boss whom I formerly got along with quite well had me directly escorted out of the building, I was unable to collect my belongings from my desk which included a $700 monitor, nice keyboard/mouse, and several other items of lesser value.  He has also refused to pay me for the previous two weeks and had insinuated that I wouldn't have been paid unless I had agreed to the knowledge transfer.  Has anyone found themselves in a position like this, I'm planning on consulting with a lawyer but I don't know if this is necessary?  I have never experienced anything like this, never even been laid off or fired before, any advice?

**Edit for clarity**:  At the start of the meeting my boss basically said that he was going to hold my pay (including what was already due) until the training/knowledge-transfer process had finished.

**Update #1**: The 2 sr devs on my team faced the same ultimatum this week and have been fired w/same pay issues.  We are getting in touch with a lawyer tomorrow, I'll let you know what happens.

**Update #2**:

* Met with a lawyer today.
* One of the devs recorded his meeting and has the manager explicitly holding his pay hostage on record. Our lawyer isn't sure if this can be used in court though.
* Contacted the DoL today and will hopefully recover back-pay.
* Unemployment got blocked by the company, but our lawyer is prepared to help me fight this.
* Likely won't have much else to say for a while since the legal process could take a while but I'll fill you all in if we further pursue legal action.

**Update #3**:

* Recovered my back-pay today.
* Close to getting a green light on using the recordings as evidence, this lawyer is a pro.  I also forgot to mention that he was recommended to me by some close friends who had really good things to say about him.
* The company seems to be panicking over the publicity repercussions and potential lawsuit, there has been a major shift in tone from them.  The lawyer is discussing settlements with the company and seems really confident about the situation, it sounds like this could pay out big.
* The settlement will probably be something along the lines of cash + termination of our non-compete agreements in exchange for signing an NDA regarding the whole situation.  It's still too early to say if that will come true but our lawyer is playing hardball and is confident that we will get a lot more than I ever expected.

&#x200B;

Also, to those sending me PM's harassing me and calling me a piece of shit for refusing to train a consulting firm, please stop, this whole situation is very complicated and the company was breaking the law so I was under no obligation to cooperate with them.",1587624852.0,2020-04-23 02:54:12
82,"Feeling uninspired and barely able to focus on work, due to struggles with depression",102,jjdrhq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jjdrhq/feeling_uninspired_and_barely_able_to_focus_on/,59,"I've been with my current company about two years. I started really enjoying it here, and still do like my team and the people I work with.

However, over time from working at home, I've just become uninspired with the work we do, and am finding it an extremely difficult feat just to get excited about work, or to do anything productive for more than 1-2 hours a day.

I have some personal issues going on, including depression from a recent break-up of my long term relationship, and severe isolation (I moved to a new city for this job, not knowing anyone, and then COVID hit a year in).

My thoughts every day revolve around how to get out of my depression, and while I'm working with a therapist about these issues, work has just been feeling like an annoyance lately that is impeding the process of rehabilitating my mental health, if that makes sense.

In other words, I wake up every morning thinking ""how can I do something good for my mental health today"" and then realize I have nine hours in front of a screen doing tasks that, frankly, bore me to death at this point, and it kills my hope for the day. It feels like a vicious cycle.

Yes, it's probably time to find a new job, but I just made this realization recently, and I'm currently starting to practice for interviews over the next few months.

Till I can find a new job, my inaction at work is making me scared that my manager will step in soon and fire me or at least reprimand me, either of which might make it harder to find a job or ask for his reference in the future.

I know this isn't purely a dev-related issue, but I'm wondering if anyone has experienced similar challenges with work and mental health, and has any advice for this situation. It would be greatly appreciated. If not, that is okay too.",1603874174.0,2020-10-28 04:36:14
83,Results of the polls on years of experience needed for a position,104,iaxpmb,ExperiencedDevs,https://i.redd.it/qlfks0g9seh51.png,26,,1597631800.0,2020-08-16 22:36:40
84,Software engineering promotions: advice to get to the next level,105,dbyrnv,ExperiencedDevs,https://blog.pragmaticengineer.com/software-engineering-promotions/,2,,1569988376.0,2019-10-01 23:52:56
85,Having a huge amount of trouble mentoring a recent hire who is deaf. Any advice / suggestions?,103,kbiano,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kbiano/having_a_huge_amount_of_trouble_mentoring_a/,71,"My role is team lead and my team is more or less 6 people. Middle of November I was informed by HR (my manager is on leave due to health issues), that a new person would be joining my team. They also mentioned this person is deaf. I didn't hire this person, and i had no idea this person was even coming. 

Right now it is kind of crunch for us, and typically this is the busiest time of the year for us. This person also is a recent grad, and unfortunately they seem to have very limited experience.

They also have a limited grasp of writing English, while they can read it fairly well often times their messages leave me somewhat confused causing me to ask an increasing number of questions.

Originally i asked people to try and write more things down, and have less meetings as the only text to speech tool that we have for chats (google meets caption software) is basically trash. While there are some better real time captioning things, unfortunately IT will not approve them. So my hands are tied. I have also had several complaints from people that they are getting tired of writing every single little thing in detail. 

HR has given me basically no useful guidance or help working with this person. 

I feel lately I have pretty much been neglecting other duties just to try and bring this person up to speed, and i am constantly writing huge walls of text, and answering huge walls of text. Even during meetings i have been told by HR it is my responsibility to pretty much be human captioning software for this person, which is both exhausting and makes me more or less useless for the duration of the meeting.

Today I had my first one on one with this person, and they expressed a lot of frustration that I am not supportive enough for them. They also mentioned that if i am to be their manager they would strongly recommend I learn something like sign language, or get some proper speech to text software for them for meetings. 

Does anyone have any suggestions for how to work with this person?",1607774344.0,2020-12-12 06:59:04
86,Working with people that fired you,105,gak7pb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gak7pb/working_with_people_that_fired_you/,57,"Details vague to stay anonymous.  

I was fired from company A (smallish ~70 employees) for under-performance, everyone knew and it was quite demotivating. I wouldn't say I left on good terms and I think I burnt some bridges.  

About a year after that, I've joined another company C and have just discovered that the main vendor my team works with is company A. I will need to work with staff from company A closely on a daily/weekly basis at least for the next 2 years. I know all the company A staff I'll be working with and many of them were directly responsible for letting me go. On top of that my position is more senior than I was before, and I'm sure that those at A don't think I deserve it.  

How do I handle this professionally? I don't think staff from A would intentionally try and undermine my work at C or make me look bad, but they could very easily just let my manager know that I was fired for being bad at the job I'm meant to be responsible for now.",1588231264.0,2020-04-30 03:21:04
87,"My coworker started the same time as me as an entry level QA (i am a senior developer), now 4 years later they are now our team's manager/lead. Myself and several others are kind of unhappy about this is it worth bringing it up?",101,i1l1cz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i1l1cz/my_coworker_started_the_same_time_as_me_as_an/,69,"I don't really know how this happened, but almost 4 years ago i started on the same day as an entry level QA person who i will call K, as their first job out of College. I don't really know how it happened but they have changed their title half a dozen times, recently they became a senior developer maybe half a year ago.

Recently we have gone through a re-org of dev, which was kind of weird. Before we had several team leads (\~60 devs overall) act as quasi managers, who in turn directly reported to our CTO. Now we have all been divided up into Client, Backend, Devops, QA departments with a bunch of the smaller teams being merged together.

In the past we have had our team lead by a guy named Tom, who has done a fantastic job. When we heard about the re-org we all expected Tom to become one of the new managers. Up until very very recently Tom expected that to apparently.

Last week our CTO basically laid out the plans for the new teams, instead of Tom becoming our back-end manager/team lead it went to K. The person who just became a senior developer. The meeting was kind of awkward as many of us were confused as to why K was chosen over Tom.

K isn't a bad developer they just are not that experienced, they will often create solutions that are not optimal, and often try to over-engineer things that are very simple. They also have a frustrating tendency to often try to roll their own everything.

This week we had our first ever i guess sprint meeting headed by K, and it was a mess of a nightmare. K acts like its a dictatorship, and tries to force us to incorporate all sorts of shiny new things into sprint tasks, things that are simple to do they now want it to be a microservice using FaaS, instead of just adding the endpoint to our boring node.js API.

On top of that Tom has made it very clear internally with some of the other senior developers that is just going to start looking for another job.

The second issue is salary increases are supposed to be frozen because COVID affected our company and we did a small layoff earlier. But during my one on one with K, they dropped their new salary which will be almost double what i make (my salary is fairly good for our area). This kind of sucked because i have basically been told they don't expect to unfreeze salary increases until late this year.

The whole thing just kind of put a really bad taste in my mouth. Tom was one of the best bosses i have ever had, and he is a fantastic developer. I don't understand why K is now our manager and Tom is demoted.

Our CTO is about to go on mat leave in a couple of weeks, is it worth it to bring this up to her before they go away for a few months? Or is bringing this thing up a terrible idea?

Also to clarify something i use they because this is pronouns they asked to use awhile back and have kept with it. ",1596279523.0,2020-08-01 06:58:43
88,I want to switch from being a backend developer to a system programmer,101,jhwa4z,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jhwa4z/i_want_to_switch_from_being_a_backend_developer/,41,"I'm a senior software engineer, and have been one for about 9 years at this point.  It has mostly not been all that enjoyable.  As I've worked for either highly dysfunctional fortune 500 enterprises, or I've worked with startups where dysfunction is just different.   I will say for the past 6 years I've been lucky enough to work at either companies that offered cloud services as their product.  Or I've worked in telecom.  Both jobs have more of a tech heavy product focus, and it has allowed me to stay mostly fairly technical even when considering the business side of things.

&#x200B;

   However I recently joined a position back in May where it is completely product focused.  It's in a fairly non-technical domain of healthcare.   And I'm finding that the product focus is just way too boring too me.  I'm constantly getting orders from the product manager, and that product manager couldn't care less about the technical details.  On top of that because of the product focus, code is just kind of allowed to either be sloppy or overly engineered, and people just kind of roll with it.

&#x200B;

  However in this role, I've come to realize how much I just love technology and system level software.   I spent years as a infrastructure focused developer, where I defined cloud management workflows.  And I've allayed loved Kuberentes and containers, and software centered around it.  I've come to find that for the last 6 years, mostly of my programming has centered around high scalable cloud systems, micro services, and network programming.   To the point where I'm not even sure I like product based development.   I much prefer to write code that digs deep into network, or where I can learn more about packets.  I love being exposed to things like SDN or digging deeper into kubernetes internals.  Or looking into things like containerd and container runtimes.  All of this I would consider more system programming.  And while you can build products with this stuff, the products are more focused on tech solutions, and not so much actual business requirements.

&#x200B;

  Currently I feel that my org is focused on business requirements, and the tech is an afterthought.  I feel they look at software as a means to an end, and no more thought and effort needs to be considered as long as it's ""working"".  And I get it, I've been in the game long enough to get it.  But I'm bored out of my mind.  Considering there so much innovation and interesting things to work with in the realm of system programming.

  Lastly I'm no spring chicken.   I'm now 41 years old, and I really do plan on retiring by the time I'm 50 (I refused to be checked into the matrix during my mid life).    I just want to enjoy what could be my last few years in this industry.   Like I really want to work on something interesting for once.  It's like I learn about things like BPF, networks, and all of these interesting architectures like Docker and Kubernetes.  But I feel that I'm never given the chance to really work with this stuff in an actual job.   At startups I was able to, but startups have their own problems.     How does someone go from a backend engineer, to becoming a full system engineer?  Is it too late career wise for me?  Any suggestions that may help?",1603672311.0,2020-10-25 20:31:51
89,Principal Engineer Interview at Microsoft?,101,gr1dza,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gr1dza/principal_engineer_interview_at_microsoft/,21,"I've gotten a lot of interest from Microsoft about interviewing for a Principal Engineer position. However, it's been more than 6 years since I've had to do a coding challenge interview. I'm likely out of practice since coding interviews are a skill unto themselves.

Does anyone have any recommendations on how to prepare for a Microsoft interview at this level? Should I just read Cracking the Coding Interview and grind Leet Code?

Thanks.",1590542728.0,2020-05-26 21:25:28
90,Company just fired a bunch of people immediately without a heads up. Is this normal?,100,gkd02h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gkd02h/company_just_fired_a_bunch_of_people_immediately/,46,"I understand during these times it’s common for companies to let go a lot of people, but is it common to do so without telling them ahead of time? 

A couple weeks ago we were all told that layoffs were off the table, but yesterday we just let go a ton of people instantly. I was in the middle of reviewing someone’s PR and then 5 minutes later he got fired and all communication to him was cut. Just instantly removed. Thanos’d. It seems this has happened to like 300 other people all at the same time - all communication just cut off. 

My company isn’t gigantic, but it’s not a startup either. Medium sized, I guess. Is this a yellow or red flag of some sorts?

Edit: thanks for the responses guys. The insight is very useful and I’ll be more responsive tomorrow morning.",1589590996.0,2020-05-15 21:03:16
91,"Kickstarter developers have unionized. Experienced devs, what do you think? Would you be in favor of adopting a union at your company? Why or why not?",100,f6t2os,ExperiencedDevs,https://www.nytimes.com/2020/02/18/technology/kickstarter-union.html,153,,1582234134.0,2020-02-20 16:28:54
92,Anyone using competitive programming sites this way?,102,kagkhp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kagkhp/anyone_using_competitive_programming_sites_this/,43,"I find it tiresome to come up with original solutions whenever I attempt LC or HR (Hackerrank) questions: I'm impatient, and IMHO feel they don't help you build the right sort of skills to grow you as a *senior* engineer. Instead, I go straight to the Discuss section, copy solutions, read them for a while then take a piece of paper and write line by line each assignment, iteration and function call till I've a call stack that explains how the problem is solved. 

I feel that my code reading and debugging skills have improved ever since I began the exercise some 6 months ago. Hell, I can look at some code, identify bugs and frame exactly how it will execute without writing a single line of code! It feels like I discovered this use case a little too late in the game but doing this on a daily basis has a huge potential upside for me. Are there novel ways of using competitive programming sites which boost your technical capabilities you've discovered yet?",1607640640.0,2020-12-10 17:50:40
93,"Older devs who want to keep programming, how are you planning on doing it?",95,k5a86y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k5a86y/older_devs_who_want_to_keep_programming_how_are/,80,"So, I turned 50 this year.  I'd like to keep programming for another couple of decades, with new tech and new companies, but there are not a lot of grey hairs at the local meetups.",1606948245.0,2020-12-02 17:30:45
94,Where did I go wrong with my junior team?,98,grwsu5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/grwsu5/where_did_i_go_wrong_with_my_junior_team/,72,"   I'll try to keep this concise.  Im leaving a company this week for a higher paying job.  Its bitter sweet, but I need to reflect on where things went wrong.  So last summer I left a crazy startup and went back to good ol corporate America.  I took contract work, and I joined as a senior engineer/architect on a team.  Anyway my team was full of junior talent.

 Upon joining the project I was told there was a junior engineer who needed to write a really critical piece of backend code.  Not only she not familiar with the language, but she didn't have the experience.  I noticed there were over 70 jira tasks assigned to her and not 1 piece of code had been written.

 I was told by my manager (at the time) that he needed me to take lead on this project.  It was crucial and he wanted me to show her the ropes.  So all was good at first.  I worked on the code base.  Laid it out, created a build system, even worked in integration test (which no other members of the team wrote).   I did a demo and it went well.  Meanwhile I was teaching her how to write clean code, and having her send me PRs for review.  I would send articles about architecture and design if she needed to further understand.

Things were good at that time.  Then things changed late last year.  We were getting ready to launch this into production.  And I noticed she started cutting me out of meetings and critical discussions with stakeholders.  She was even sending emails about the product and leaving me off the chain.

Keep in mind I wrote 95% of this code, but I couldn't help shaking the facr that she was trying to take credit for my work.  I shrugged if off.  Management all knew it came from me, so I had nothing to really worry about.

 Then her and this other junior came up with a plan.  This new system that is suppose to enhance my code.  Granted we barely had it in production.  She presented the idea to me, but I'm not going to lie.  It had a lot of flaws.  But I told her to POC and take a look.  Months went by and she never did.  Meanwhile she's more distant and not communicating at all.  Even changing my code without my review.

Enter a new manager (actually 2 managers later than the first one).   The new manager is, uhm, weak.  She went to the manager telling him I was talking down to her, and that I thought she was beneath me.  I NEVER said anything like this.

 
She even visibly start arguments with me on conference calls in front of people from other teams.  So I save her job by getting a project assigned to her off the ground.  I teach her a whole new language.  I instill her with ideas in creating clean code.  Because code she was writing before I walked in the door is way different than the code she writes now.  And I get treated like I'm the bad guy.


 Not only that but if feels like the rest of the junior staff is against me.  Which is weird because the team had a horrible reputation before I came in board.  And I helped bring confidence and stability to our products and systems 


 So I have to ask, where did I go wrong?  How did I fuck up the morale of the team so bad to where everyone started working against me. It's a dysfunctional team, i get it. But it feels like the team is mad because I wanted to stabilize them.

 
I literally have no answers here.  Any ideas or suggestions?",1590658211.0,2020-05-28 05:30:11
95,I'm scared of going to interviews as a back-end developer it seems to be that I need to know about everything in deep,101,jx2oop,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jx2oop/im_scared_of_going_to_interviews_as_a_backend/,91,Am I the only one? I have 7 years of experience and I've put several hours on study but that is never enough to go through interviews now. There are so many topics/technologies/flavours + leetcode expert. How do you cope with it? Even if you study so many things you are going to forget it because in real world we don't use all that sh.t.,1605821367.0,2020-11-19 16:29:27
96,Team member placed on a PIP - how to respond?,97,joz65z,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/joz65z/team_member_placed_on_a_pip_how_to_respond/,62,"This is sort of orthogonal to the post earlier this month about getting [put on a PIP](https://old.reddit.com/r/ExperiencedDevs/comments/j441yp/getting_put_on_a_pip_personal_improvement_plan/). I recently became a first time team lead of a small team. This team member has been at the company for a little over 1.5 years and from my perspective their performance has been middling. In so many words management basically came to me and asked to put together very specific success criteria for a new product feature at work they want this developer to lead. Based on a few other conversations I've had I can infer he is being put on a PIP and the feature design they are asking me to put together is basically their ""PIP project"" for them.

I'm not quite sure how to react. I've been told to be hands off and let this team member have ""full control"" on the area but I can't shake the feeling I am, to put it tritely, giving them the shovel to dig their own grave. Perhaps that is pessimistic but regardless I am unsure how to properly navigate this situation as the one ultimately responsible for the success of the project as a whole. Anyone have any advice or experience in these situations they'd like to share?",1604668855.0,2020-11-06 08:20:55
97,How do you know if you're on a path towards having 10 years of experience vs 10x1 year of experience?,98,gvfuvq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gvfuvq/how_do_you_know_if_youre_on_a_path_towards_having/,15,"I feel like the pressure to keep learning new things and studying is relentless. I'm keeping up well enough at work and nobody is giving me a hard time, but am having a hard time judging how much side-learning is reasonable. I don't feel particularly challenged by most of my day-to-day work and am worried about falling into the 10x 1 year experience trap if I ever try to change companies.  


I'd love to hear any guidance or advice on how to determine how much learning is appropriate or how to best direct my professional development time.",1591160815.0,2020-06-03 01:06:55
98,"Recently hired team-lead is making my teams lives hell, and when i refuse to cave, they run to our CTO to complain and give inflated time estimates because of us. How do i handle this?",96,hbtssl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hbtssl/recently_hired_teamlead_is_making_my_teams_lives/,69,"Company is fairly small dev team in total is around 50 people, split up between 5 different internal dev teams. I have been with this company for \~5 years now, and and have been team lead for our backend team for around 2 years now.

Recent hire is someone who i will call Var. Var was hired as team lead for one of web front-end team around \~5 months ago.. Var interviewed great however in the last 4 months of working with them they are becoming very difficult to deal with. 

Early on Var was adament that my team was slowing their team down, because we use REST and not GraphQL, they did a whole presentation to our entire exec team how us moving all our API's to GraphQL would allow their team to deliver much quicker. I gave a time estimate to do this and our CTO  immediately said its not worth it now.

Var then wanted us to change our API data model because we use the field ""id"" everywhere in our API, they don't like that. They constantly complain that it slows their team down because they have to do some degree of boiler plate work. I explained how it would break so many different things and the response i got was basically ""that is your problem at not mine"".

Var will often sign off on API implementation stuff without any thought. Then when they actually come to implement it, they suddenly make a 100+1 complaints that the API isn't what they want. However by this time my team has moved onto other tasks and issues for our sprints. Then they go to our CTO and complain that they will be behind schedule, then our CTO comes to me and i explain, and he seems to understand. On top of this we have often have a mobile team who is completely fine with the implementation, and is using it actively. 

When ever var's team is behind they blames my team, this happens constantly. Two weeks ago they was complaining about the fact that our API returns dates in UTC time, but they wants it to return in the actual clients timezone. I explained the technical limitations countless times and their response lately has been ""that is your problem not mine."" Then they will just hang up/leave the conference call. 

Today i was dragged into an uncomfortable meeting with HR where apparently Var has complained that i am being demeaning/harassing and refuse to listen to their viewpoint. I explain how my team's resources are severally limited and explain that Var has signed off / agreed to this stuff and showed examples. I don't know what is going to happen here. 

Sorry i am somewhat ranting, but lately this is driving me up a wall. I told our CTO during our 1 on 1 my concerns, and he told me he would handle it. But Var is still complaining constantly. 

How do i handle this?",1592568557.0,2020-06-19 08:09:17
99,"""Turn The Senior Around"" - An interesting way of restructuring teams to make non seniors responsible for delivery, and seniors their enablers.",97,jyte6s,ExperiencedDevs,https://shaimendel.dev/docs/2020-11-02-turn-the-senior-around,59,,1606068648.0,2020-11-22 13:10:48
100,How come everyone is so bad at source control management?,94,iso0e1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iso0e1/how_come_everyone_is_so_bad_at_source_control/,113,"i've worked in a few different companies now, in both an Ops role & as an embedded DevOps engineer to help with automation overhaul projects. 

without fail all of them have no branching strategy, tons of old branches that were merged but never closed, no consistent naming convention or tagging, literally every classic problem you could think of. 

how is it that so many shops can all fall into the same classic pitfalls? i've worked with probably 20 different products and haven't seen one that was ""good"" yet. 

there are other patterns i've noticed too, but lots of them stem from having bad repos that creates downstream complexities to compensate.",1600128870.0,2020-09-14 20:14:30
101,"Company has massively grown over the years, and i am struggling to find any interest/will to work with all the ""red tape"" now. Can anyone give me some advice?",96,jqqza6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jqqza6/company_has_massively_grown_over_the_years_and_i/,57,"Company is a SaaS, i joined about 7 years ago as a mid level developer. When i joined the the company consisted of around 8 other people, previously i did government work and i hated how useless i felt there.

Over the years the company has grown to a couple hundred employees, our previous CTO about a year ago to go join another start up. Dev team right now is \~40 odd people, and i am considered a team lead, and i have the second most seniority after our CEO at the company. 

In general i really like my team, and there are some awesome people here. Over the years i found myself always challenged and i was given a huge amount of freedom to pursue tasks, and tackle challenges how i felt they should be done. 

Our new CTO joined like 8 months ago, they are okay.  However i personally feel they brought an absurd amount of red tape to the company. Everything must go through a design process that involves basically every single friggen different team. All teams now started needing to use Agile and everything must be documented / tracked in Jira, Product Board, Confluence. I need to make a friggen Jira ticket now to our DevOps to even request something as minor as a SQS queue, or an EC2 instance, and fully document a dozen different fields, explaining in detail the use case etc.

My team is 6 people, we now only handle part of our backend systems. Over the last few months i have basically had to hand off all sorts of other responsibilities to other teams like Enterprise, or DevOps. I have fought and fought about how this whole Agile thing is overkill for the 6 of us, and apparently don't have sort of choice.

On top of that there is just absurd amounts of useless meetings, we have been talking about a feature for \~6 weeks now. I quickly wrote up and gave time estimates for everything, and rather than being told ""yeah implement it"", it needs to go through a design review bringing in the entire DevOps/Front End/Mobile team where i need to argue my reasoning for why i need X, and why i need Y.

The time frame they are projecting for this feature is like Febuary next year for our part of the project. We could have done this in a few weeks at most. 

On top of that when other teams come with asks, instead of being able to help them or do work. I get no say anymore, in our teams tasks/projects. Our CTO/VP of Product basically says we can put it in the road map in the future. The roadmap currently goes to 2023. 

For the last month i have basically been sitting here with most of my team doing nothing aside from minor busy work. I have been inflating time estimates for tasks in our Agile workflow, simply because there is almost nothing to work on (mostly because i am worried that people will be laid off or moved somewhere else). There is a ton of stuff coming up, but we are not allowed to work on those epics until every single team impacted by it signs off on it. But since other teams are doing other things nobody is looking at the future things. 

I have explained this to our CTO/VP of Product how awful this is and he told me that this is how things are being done at our company from now on, there is going to be no more just doing stuff. I have asked what his concerns are if things are just done, and how we could make stuff move faster because most of the front end team can't do stuff unless its done in the backend, and have been ignored.

I even tried to talk to our CEO about this since he is probably the person i have worked the longest with and brought up my concerns, and he agreed with me and said he would talk to our CTO but obviously that did nothing.

Hell i found out this weekend that i don't even have any form of access to our production environment anymore. Yesterday a panicking sales person contacted me basically begging me to figure out why his pilot for a big new customer isn't working at all. I knew exactly what the problem was, but the only real  way is to fix it in the database. That bug is meant to be fixed sometime in late 2021 according to the agile board.

But I don't have access to that anymore, instead if i want access i need to submit a request to the dev ops team, who will then validate my request etc, but that won't happen until next week. So the customer is pissed, and the sales person is pissed. I am annoyed because from what i gather the customer isn't going to move forward on the pilot because it doesn't work at all so the company just lost a possible sale.

Its just bothering me unbearably bad, i know over the last few years before this everything was hectic and crazy and i swore how much i hated that. But i really really miss it, it was exhausting but this is just becoming unbearably boring. 

Has anyone been in a situation like this before? Is the only real answer to just move on and find another company?",1604925088.0,2020-11-09 07:31:28
102,How many of you still practice for interviews even with all the experience you have?,92,i4wnn3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i4wnn3/how_many_of_you_still_practice_for_interviews/,97,"Do you find it still necessary to practice for interviews instead of just relying on your past SWE and ""brag history"" to carry your conversation?

Or do you believe that practice never stops?

Looking to see the years of experience you have and if you have find it more or less necessary to do practice interviews as the time goes on.",1596765515.0,2020-08-06 21:58:35
103,20 years to the day since I started my first proper developer job,95,hstrl9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hstrl9/20_years_to_the_day_since_i_started_my_first/,162,"From the start I didn't like it, I told myself I'd just do to earn a living until I sorted out something I enjoyed. Still doing more or less the same thing 20 years later! Get paid a bit more though. Kind of depressing what a waste the last 20 years of life have been.",1595012783.0,2020-07-17 15:06:23
104,What do people do who are bad Devs?,95,hrdgtc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hrdgtc/what_do_people_do_who_are_bad_devs/,92,"I'm talking about 5+ years of experience and I mean that they aren't technically savvy and suck at their job.  In my time working as a software engineer I have only ever met 1 person who I would say is a ""Bad Developer"" in the sense that even working 50+ hours a week and trying to succeed and having a good attitude, being upbeat and friendly to the team.  He cant get anything done because of a fundamental lack of understanding of how the code works and despite him trying, he doesn't have the ability to learn at a reasonable pace.

I talked to this person more in depth and it turns out that he has had this problem his whole life, In school he got bad grades, despite trying very hard,  and is overall not a very skilled person. (he is a nice guy though and has charisma going for him)

He asked me for advice on what to do for his career,  its currently looking like hes going to be fired from his 3rd job in a row as a software developer because he cant meet the low end of the bar for performance. (performance for Dev1, even though he has 5 years experience)  and I don't really know what to tell him,

&#x200B;

Have you guys ever worked with someone like that?  I want to tell him to just look for another job, but I know companies interview specifically to screen out people like him.  he doesn't really have the skills to do another job that pays anywhere near what a dev makes.  What should I tell him?",1594801617.0,2020-07-15 04:26:57
105,How do you make yourself hire-able again after working at a company with a *very* legacy codebase with poor practices and a negative culture?,90,hipftd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hipftd/how_do_you_make_yourself_hireable_again_after/,43,"Basically the title. Using a throwaway because my main account has some info that could probably used to identify me if someone in my company read it. I want to preface this all by saying I don't have a degree. I'm self taught and I love software development, I've been building stuff since I was 13-14 years old.

I've been with my current company for a couple years (my third job in the industry). Most of our codebase is old code (late 90's/early 2000's. 100% monolithic) that has never been reworked, only piled on top of with bandaid fix after bandaid fix. There's absolutely no attempt to clean the code up and organize it, we don't have any tests, 90% of our files are >10k lines with duplicate code \*everywhere\*, most of the ""core"" code is completely custom - DB access, user authentication/authorization, etc... I've brought up testing or attempting to use some industry standard libraries/frameworks to help make working with our codebase easier and reduce the number of issues we create every time we update to no avail. Every time we push an update we usually get customers calling in and complaining about something that we unintentionally broke. Essentially, I'm stuck in a job learning absolutely nothing, losing my edge and not using any best practices that the industry would expect a developer to use. I feel like I'm pigeonholing myself.

I've been passively looking for jobs for about 2 months now. I had an interview with one company in particular that I was excited about but ultimately didn't receive an offer because I interviewed poorly (totally expected, it was my first interview in years and I barely prepared). The interview really shell shocked me though because I realized just how far I've let my skills slip. I do a lot of side projects and try to work on being better but I ultimately think that won't help me find a job because I'm not using those skills professionally. As a developer with nearly 5 years in the industry I would expect myself to have a strong understanding and a good bit of professional experience with testing/DB frameworks/user authentication/authorization frameworks, system architecture, infrastructure, etc... but I don't anymore because I haven't had to use those skills for a few years given that our entire codebase is custom.

Just as a quick note - The first company I worked at I learned a lot very quickly, and I was competent in all the skills I mentioned above. I designed and built a few services from the ground up with all the best practices that were/are probably still used.

My question has two parts:

1. Am I hire-able even if I haven't been following best practices professionally for the last few years?
2. How do I show potential employers that I'm worth hiring even if I'm not up to date on these best practices?

I just feel like the longer I stay at this company the harder it's going to be to get back into a good company.",1593559544.0,2020-06-30 19:25:44
106,Dumb things you hear in dev meetings that left you dumbfounded,91,haplb0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/haplb0/dumb_things_you_hear_in_dev_meetings_that_left/,103,"We were told in a meeting just now, ""to plan better"" for an issue that is way beyond our control. 

What's ""beyond our control""?

1. Devs needed to work until late nights for bugs that are left by other teams - raised many times during meetings, no actions
2. Testers have to retest every single thing due to the said bugs (not caused by the team)
3. Bugs and re-test caused delays in releases 
4. Team have informed many times of the said issue - no or slow actions
5. We take our own initiative - no thanks whatsoever (in fact other teams got credit for it)

Now it seems there's some hope during this meeting, and all we got was ""plan better"" and ""identify the issue during Sprint planning"".

I felt super dumbfounded ... so what have we been doing al this while!?

Any stories, experience on this sort of thing during dev meetings?",1592423162.0,2020-06-17 15:46:02
107,New Rules and New Changes,94,fne7vv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fne7vv/new_rules_and_new_changes/,77,"# New Rules

We are going to be testing new rules in the subreddit for the next few months. Please *report any posts and comments that do no follow these rules.*

# Weekly Thread

We are also going to be having a weekly **Ask Experienced Devs** Thread where those who shouldn't be posting can have a place to ask questions. 
The Ask Experienced Devs Thread will be only lightly moderated. Most of the subs rules will not apply, besides those rules which are about behaviour rather than discussion. 

# Verified Flairs

Finally, we're adding *Verified* flairs. We're going to lock down flairs, you can request a flair without providing proof of being experienced, and you will be given it, but if you want the _Verified_ checkmark, then you will need to provide proof _for the flair you requested_. Currently that request can just be made by messaging the mods, but hopefully I can get a bot running soon. 

**Edit to clarify verified flairs:**

Please use the Message the Moderators button to send a message to the team for verification. For now provide details that you think would verify you. Examples include:

* LinkedIn
* Resume
* Company Email with another supporting piece of evidence, such as a website where you are listed with your title
* Degree if you are looking to verify your PhD (this one you can take a picture with your username covering up your name on the degree.
* Papers you have written, with accompanying proof (I'm not sure on how to completely verify this one, but message us anyway and we can work with you)

If you have alternatives, just message us and we'll try to work with you. Remember, this is all a trial. Just trying to figure things out. 

**end edit**

On to the rules. Remember, these are first draft. We're just trying these out to see how they go. **If you have feedback, please message the mods.**


## Rules

### No New Grad or Internship Advice

This includes things like asking about switching jobs one year in to your first job, asking how to move on from your internship, etc.

### No Interview Prep for Beginners or for FAANG 

These things are easily searchable, which leads to the next rule
    
### No Googleable Questions

Self explanatory. This includes most equity questions, most salary questions, every FAANG question, most questions about job titles

### No ""What tech should I learn"" questions

This does not mean no discussion about industry direction or upcoming technologies. Just frame the question as part of a larger discussion, rather than implicitly aimed at yourself and you will be fine

### No off-topic comments, memes, or jokes

This one is a bit of a catch-all, but it's clear enough that it's actionable if we get a report. I'd just like to be able to refer to a rule for certain comments and this rule allows me to do that. 

### Don't be a jerk

Don't be a jerk. If you see someone is being a jerk, report them. If you feel the need to tell someone off for giving advice when they themselves are inexperienced, don't tell them off, just report them. All roads lead to reports.",1584967989.0,2020-03-23 08:53:09
108,Do you keep a personal document on the side to keep track of everything important you've ever done at work?,90,gh6nok,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gh6nok/do_you_keep_a_personal_document_on_the_side_to/,27,"With regards to updating and polishing your resumes, one thing that gets hard to me is delineate and quantify specific accomplishments. I mainly remember my responsibilities but not my achievements. So it's been advised to me that I keep a Google doc of some sort to list of accomplishments that you fill out on a regular basis, while I work. I guess it makes sense because very often when I re-write my resume I have to get most updates from mental memory. 

Is this more common than I think? Do most people write down a long list of things you've done in your career in order to pick out and condense it in a form of a resume? Because I have trouble telling people some bugs that I've fixed in previous jobs. Even things that were important at the moment I might forget in a year or two because I don't take notes for anything I do. I hardly wrote notes to look back at later, even in college.",1589164092.0,2020-05-10 22:28:12
109,How do you know when you must make a team vs. company vs. career change?,88,jv7j20,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jv7j20/how_do_you_know_when_you_must_make_a_team_vs/,49,"Hi everyone,

**TL:DR: Based on the 5 experiences below, should I change teams, companies, careers, or stay put. Sorry for the long post. (if I should take it down, just let me know)**

So, I was really hoping to get some advice here. I've been a developer for quite some time, and it has been something of a rollercoaster ride for me. There may be some underlying issues that I've been ignoring, but I was hoping that maybe you guys could help me identify those. My career thus far has been both good and bad, but even in school, it was the same.

The goal of this post isn't to bash my previous teams, but I truly wonder if anyone has had this much fluctuation in their career path as an engineer. Sometimes, I wonder if this is actually a common occurrence in software development careers, or if this is just a team/company issue. More so now than ever, I've considered switching careers, because it truly seems like it will be a constant.

I've presented 5 distinct experiences so far just so you'd have context. 

I would really appreciate anyone's advice, feedback, or guidance.

&#x200B;

**College:**

So, in college, I was a Mathematics major. I grew up loving math, and I loved all that you could do with it. However, I learned very quickly that once we got to the proof-based courses (all the others were fine), it was as it I just couldn't think in the same language as my professors. I didn't do very well, but I managed to get by. I also picked up a minor in Computer Science, which was fun with the exception of the OS-level courses. I simply loved how creative I could be with it. So, I pursued a career in software engineering.

**First Job:**

My first job as a software engineer was both good and bad. I got creative projects and I got to make changes that people around the world could see. I was 100% the ""UI-guy"" at this point, because our previous UI specialist had left the company. I had a role, and it was great. I could be creative at work, and help millions of people. Eventually, we had a re-org, and this put me on a new team, where UI work was not at all something they cared about. More often than not, I found myself in situations where I was asked ""why don't you know this?"" or ""why do you keep looking up how to do things instead of memorizing them?"" This was usually in reference to OS-based things. I tried my best to be useful in every other way I could be, including going through our customers feedback and identifying how we could make our product more useful. I was then presented with the statement, ""sometimes, even if we know we can do something to improve the customer's experience, we simply don't because it means they will pay for our service longer waiting for it."" I'm not sure why, but this statement bothered me so much, so I left for a new job.

 **Second Job:**

My second job was as a SRE/DevOps Engineer. It seemed like a great opportunity since I could essentially help both the company and the people with it. I could be creative and build tools that hopefully, would benefit everyone. However, while I got to program/code to some degree, most of my job was watching dashboards and rerouting phone calls. Eventually, some of the team took to watching movies or playing video games all shift (and in some cases, bring in their drones) whenever the manager wasn't there due to the sheer amount of down time they had. I quickly watched my team grow in frustration with the way the team was managed, and over my time there, 75% of my team had either left or had been fired (largely due to growing disgruntlement with the way things were). My manager frequently skipped my 1 on 1's with him and eventually, it came to a point where I'd only see him at bi-monthly intervals. I become something of a heads down programmer on the team, building random project and random project, hoping that eventually, someone would pick something up. Finally, I realized no one would, because I was the only one who could code and was willing to. I don't know if my code was good or bad. I just knew everyone was disinterested. So, I tried to move back to a software development team.

**Third Job:**

My third job was something of a relief for me. I got to develop for a customer facing set of services, and I truly don't think I've ever been so happy for an extended period of time working in my life. There were always things to learn, always ideas to be discussed. and always opportunity for improvement. I think 90% of what I learned as a developer today, was through that team. I did everything I could for the team, and ultimately got a promotion for it. That said, it didn't matter that I got a promotion, because I simply loved the job. Additionally, it was through this job I realized the importance of negotiation of your salary. Mine had been so far off the mark that my team/manager grew concerned for me and fixed it (this was a huge fix). For the first time ever, I felt like I was in a place where I cared about the work, and my team cared about my input. I even led a few projects here and there as well. I truly envisioned staying with the company forever, and potentially becoming an engineering manager at some point because of it. The sheer amount of support I received was phenomenal. However, when COVID-19 hit, of course this shook things up a bit, leading to another re-org.

**Fourth Job:**

For the first time, even though this was my second re-org, I often wondered why I was placed were I was. I often asked why at this point. Before my official start on my new team, I learned that I would be joining a failing, politically-corrupt team; that the current members of the team refused to teach, learn, or share any new information, because with doing so, it meant their jobs would be in jeopardy of being taken by younger developers. This was a team the entire company needed, but seemed to hate working with. I don't think I truly understood this at the time. That said, I learned why I was put on the team. I learned that I was put on the team solely because I was a DevOps Engineer in the past (work that I grew to hate by this point). The entire goal was to get people together to transform this team, despite expecting some of the other engineers there to push bad. Our tech stack was incredibly old, and the previous team members where clearly specialists. No one was willing to learn anything new. Only the newer members tried. This team was so under water, that asking anyone for help seemed like a huge burden on them. That said, what we heard, was in fact the case. The team eventually was split down the middle as ops and automation. Eventually, the team functioned as separate parts. It eventually became all about systems design and pushing for ideas that we could never get an unanimous decision on (almost always 50/50). Eventually, I had stopped coding entirely, and a bulk of my job had become manual labor (yes, turning devices on and off). I have been a ""software engineer"" for several months on this team, but I've never felt so distant from it. So, as you'd expect, I decided to leave to a more development centric team.

**Today:**

I am posting this because I genuinely want some advice on how to proceed.",1605565317.0,2020-11-16 17:21:57
110,What are some developer career-growth books that go beyond technical skills?,91,hpgkvv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hpgkvv/what_are_some_developer_careergrowth_books_that/,39,"Book suggestions almost always turn out to be something about language breakdowns or data structures and algorithms. I have pretty rock solid technical skills, but I need growth in the soft skills aspects.

I think _How to Win Friends_ was an excellent book, but I haven't been able to bring myself to finish it. I am curious to try other books, maybe some directed towards software engineers.

Are there any data-driven books about how best to document, plan, communicate, problem-solve, impact the company, impact customers, impact the product -- things applicable to most efficiently functioning as a _senior_ or _principle_ engineer?",1594526372.0,2020-07-11 23:59:32
111,Is it normal to get bitter at the company you work for? Where do you all find happiness at work?,92,jtrsuy,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jtrsuy/is_it_normal_to_get_bitter_at_the_company_you/,40,"I’m about 5 years into my career, worked at 4 diff companies, and outside of the 1 company I interned at I have inevitably become quite bitter towards the company I worked for.


The top 2 experiences in my mind was:


1.	past 6 months at series a startup where it seems really cool at first but then I realized they don’t give a shit about employees only growth.. and no one really knows what they’re doing (me included)
2.	previous 4 years in big tech where the company went through a whole lot of public and private shit, CEO changed, business direction, empire building ... incompetence aplenty 


Where do you all find happiness at work? I have some great coworkers and I love them but I still get very bitter towards work.",1605341307.0,2020-11-14 03:08:27
112,"Who used to be experienced.. but as you got older, things to more difficult",88,j3jjdv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j3jjdv/who_used_to_be_experienced_but_as_you_got_older/,93,"Just curious how many older devs.. lets say those with 15+ years.. maybe in their late 30s, 40s or later.. used to be little code monkeys when they started out, much like new college grads today, but have had a harder time with the way things have gone in our industry? I am trying to figure out if it's just older age, or that things are changing so fast and when I started out, things were relatively slow... language updates every 2 to 3 years, only a few languages to really do things in for the first 10 or so of my career... deployment/builds/etc all on site and understood, etc.

The problem I content with is I am paid as a senior, but recognizing I am not doing as much or as well as my juniors who are a few years out of college. I don't know if it's because I have other obligations in life now that take up more time, distract me more, not to mention Covid, etc... but I know I am paid more but doing less than my colleagues who have only a couple years experience.

What really sucks is as I have gone up in level, and pay.. my life has adjusted towards that as well. So I am starting to really worry about my future.. namely.. am I going to be trying to fight for a $15 an hour job in a few years (or sooner) and work the rest of my life scraping by, or are their jobs out there that don't require some academic level white board session to determine that I can code.. even if I am a little slower than others.

To make things worse, there are so so so many developers now, that it seems like even though apparently we have more jobs than developers, there seems to be 100 applicants for every damn job available.

I never wanted to go in to management, wasn't my bag. I love writing code, figuring things out. Just starting to man up a bit and realize.. I am not as good as many younger developers today. I put part of the blame on the very fast advancements, changes, etc that have happened in the past several years.. which is a great thing, but I think it is sadly aging out older devs that are not able to work 18 hour days like the kids out of college who are eager to please and move up, etc. 

Oddly, I can build an entire product, front to back, CI/CD, deploy it in the cloud, etc.. by myself. Not fast by any means, but I have the knowledge/experience to do that. But.. that won't do well to land me a paying gig if I am not part of the new norm where I am putting out 3 to 5 PRs a week, either fixes or new features. The pace at which some things move now is so insane, I feel like this has become a cut throat career. If you can't keep on putting crazy hours and knocking shit out fast, you will be replaced.

So, I don't think I am alone in this. How many of you older devs, are feeling this sort of pain? Any of you concerned? Tired of the frustration and willing to give up good pay to just work a basic 9/5 and struggle if necessary? How do you transition down to half, if not less of the pay you were used to? Have you had any luck in landing jobs in companies that pay decent, dont require 80 hour work weeks and aren't so gung ho about churning out 1000s of lines of code a day?",1601622818.0,2020-10-02 03:13:38
113,Have you ever seen microservices do more good than harm?,90,k8qun6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k8qun6/have_you_ever_seen_microservices_do_more_good/,63,"I've been in three different projects using a microservice architecture and it has been quite a frustrating experience in all of them.

Massive overhead in communication and deployment just slow the teams down immensely. All common guides seem to assume you are a big company that can truly do ""1 team per service"", but that has definitely not been the case at the places I've been at. One team cannot simply maintain the overhead of maintaining multiple deployment pipelines, a local dev setup, logging, communication protocols, and a sane architecture without sacrificing a reasonable development speed.

I feel that the teams have chosen microservices mostly because of the hype, and not thinking about the real consequences it has on the development speed.

Even though my current project has around five teams (distributed over three countries), the project consists of 20ish services that are still deployed as a single monolith, defeating the whole purpose of microservices. Not to mention there's a ton of antipatterns, such as sharing DBs between services and using ""client libraries"" with business logic in them... I'm one of the few ""DevOps"" persons who has to go through 20ish repos if a change needs to be made to the CI pipelines or service configurations. We previously has a dedicated DevOps team that got dissolved, but the practices don't change in one day just because teams get shuffled around...

What are your experiences? Do you think a smaller company/team can truly benefit from microservices, or have I just been dealing with people that don't know better?",1607408092.0,2020-12-08 01:14:52
114,Does anybody else hate serverless architectures?,89,hnj1u0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hnj1u0/does_anybody_else_hate_serverless_architectures/,85,"I'm not sure if this is a job-specific thing but I just can't bring myself to care anymore.

In this new project we were required to use every AWS service we could to provide a complete serverless platform, expecting 'spike' loads in some specific real life events. Of course, we also had a (short, 5 months) time constraint, and to put the cherry on top, nobody had experience with it. To be 'fair', it's a startup client.

We decided to go with AWS SAM since it seemed to provide a local environment for testing purposes.. but I've hit so many walls with CloudFormation and other services I just want to smash my head against the wall.

For lambdas we didn't have any idea how to structure them and we ended up copying-pasting all over the place since we also had a tight constraint on the dependencies (cold startup as a concern). I tried to split our CF templates since we had to use nested stacks for multiple APIs (we're going full Api Gateway + lambda here) and managing them has been a nightmare of copy-paste and a quick-we-don't-have-time Makefile I had to create for the project.

Local testing is very limited with SAM and we end up requiring pretty much everything in AWS.

Don't get me started on \`env\` variables. We have over 25 ATM and are passing them as CLI params within the Makefile.

I'm writing this post because I lost it after a  CF deployment failed because a Lambda event required a S3 bucket to be defined in the same template.. which it is (no typos, I triple checked that) and has worked before.

Is this mostly a job specific thing?

Is it a 'serverless' kind of general thing?

Would my experience be better if I used Serverless Framework instead? (too late for that now)  


I honestly feel very childish to rant like this but I just can't take it anymore and had to vent with somebody.",1594250801.0,2020-07-08 19:26:41
115,"To very experienced devs, how did Dotcom and 2008 crisis affected your career? How to prepare for 2020 crisis?",91,fm02uj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fm02uj/to_very_experienced_devs_how_did_dotcom_and_2008/,88,"I have been in the industry for 6 years now, so even though I'd like to think I have some experience, I have yet to gone through a major economy crisis. 


All that I heard from more experienced peers around me are horror stories about layoffs, temporary career changes, or dropping programming permanently. 


In time of uncertainty like this, I think it's best learning from history and the ones who witnessed. Hence, if you have the experience surviving the last major crises and can share them, I think it'll be of immense value to all of us here. Also, what's your opinion on how we can best prepare for the looming crisis?",1584757910.0,2020-03-20 22:31:50
116,"As developers we are expected to always be learning new things. Problem: I learned too many of the ""wrong things"".",87,ff20sb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ff20sb/as_developers_we_are_expected_to_always_be/,51,"Or rather, I've been learning things that fell out of popularity for the job market way too quickly or they are just not that great practices, full stop. Now what? 

In my career I don't have a lot of face-to-face interactions with other devs. I never experienced code reviews, pair programming or mentoring, and nobody talks internal documentation. Our management is barely technical enough to use Excel and we are left to our own devices to accomplish things how we want, and it sounds nice at first but you can easily work yourself into a bubble this way. You can easily pick up a lot of dev process anti-patterns. Like being aware that testing frameworks exist, but everyone ignoring them all and continue to use console.log unabashedly. Oh, and most projects in places I worked at are solo developer work. I'm the actual lone guy working almost in a vacuum stereotype, that many non-programmers imagine all programmers to be like.

As someone who's now been at this for 6 years but mostly working alone in the tech, companies now have rigid expectations of me. That's the thing I've noticed. The more experience you get, the more rigid the expectations of you are. The idea that your tech career can be ""fluid"" is a myth- we have to stay on certain courses or else get rejected in a lot of places.

And I didn't even get to specific tech skills. I have an interest in learning things but incidentally they don't really line up with the current market trends. And some I overblow in importance. Someone told me that adding Bootstrap to my resume is not a good look, and they [linked to this website](https://www.dagusa.com/). And other skills I have are being phased out and I'm expected to know Software Lifecycle concepts that never fully understood because I dev alone.

Should I wipe all the bad and go back to junior work, with larger dev teams? Or, how do I make all the tech and habits I have learned not look like garbage when most companies don't want it, and the companies that do, will just corner you further away from being an in-demand developer?",1583645942.0,2020-03-08 00:39:02
117,I’ve always had a much harder time finding/interviewing for the job over actually doing it.,93,f9ez8u,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f9ez8u/ive_always_had_a_much_harder_time/,41,"Is this a good sign that the work I've been doing has always been too easy and I should be challenging myself more?

I get recruiters left and right reaching out to me about senior SWE jobs but I have never had a full-time mid-level job must less a full-time senior SWE job. I've mainly fallen back on contract jobs for sustenance. But my interview feedback does have a common theme, that I'm not wise  enough for my years.

On the other hand, I seem to breeze through most of my programming work with few hiccups. So I don't know what's going on if it's me or the particular jobs I interview for. Could be that the work is indeed so easy that it hasn't prepped me well enough for job interviews.",1582685244.0,2020-02-25 21:47:24
118,Setting boundaries after onboarding,88,jp98ih,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jp98ih/setting_boundaries_after_onboarding/,36,"tl;dr, roughly three months as an SRE. I have been walking on egg-shells since my first day (I really need the job) and as such, I didn't set boundaries for myself. My manager recently took someone off the on-call schedule, so now I am on every other day (cycles are 24 hours; we are understaffed), shit is always on fire, and the majority of our alerts are not actionable. On top of that, my manager is the type who works 20-hour days (weekends included) and calls/texts me if I don't resolve the alert in under 20 minutes.

Today, she modified the schedule and put me on-call with no prior warning. I did reach out to put my foot down, but how can I set permanent boundaries now that will protect me from original ""expectations""? How can I do this professionally?

Edit: I am actively interviewing.",1604712252.0,2020-11-06 20:24:12
119,Get very apathetic after 3 years at same company,90,i46hcg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i46hcg/get_very_apathetic_after_3_years_at_same_company/,55,"Anyone else  experience this? This is my second  company I've worked for, first one I did 4 years, but by the 3rd year I just did not care at all and let my relationships with my coworkers deteriorate as well as my job performance. I switched jobs and had renewed spirit,  but now at around 3  years  I have the same thing happening. I'm very irritable with my coworkers and I'm putting in minimal effort  and it makes  me feel  depressed and guilty. I have it made I'm full time  remote making a great salary,  my team is full of really nice people and the work I'm doing is a value to society. But I just don't know why  I get like this after being at a place for a few years.",1596667099.0,2020-08-05 18:38:19
120,New job is a significant bar raiser,86,hg21ki,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hg21ki/new_job_is_a_significant_bar_raiser/,57,"I just joined a B2C Unicorn team doing much higher quality, more deeply technical work than my previous position of two years at a mid-stage startup, post-grad.

At my previous position, the product was really a hodge-podge of spaghetti features developed in isolation. I spent the first year doing shitty web-dev with low guidance from non-existent senior engineers. I just picked projects I thought would teach me something and would figure out a way to learn. I owned a lot of different pieces from BE to data/ML pipelining to infrastructure. After a year, I transferred teams to my third manager, who was short on my technical growth. Needless to say, we butted heads; I'd spent almost two years at an organization feeling like a code-monkey working at least 50 hour weeks. I probably have some career PTSD.

In May I took voluntary severance to job hunt across the country. I then worked probably the hardest I ever have. 200 leetcode questions & a shit ton of networking later, I've somehow found an amazing job. The team is super talented, fun, the business is doing well, good WLB, and they are paying me 1.5x at lower CoL. My manager is actually invested in my growth & long-term success. Needless to say, I'm fucking stunned, and can't help but laugh in the middle of my workday at my good fortune. I thought my career was doomed to sweatshop coding.

With that said, it is pretty clear that the services the team is building are more modern, better architected, and in a complex, larger SOA environment. It is also in 2 statically typed languages I don't have significant professional experience with (Kotlin, Go). The code is very SOLID, immutable, DI, etc.; if my previous job was a Toyota Corolla, this is a Tesla.

I've been reading resources for learning Kotlin after work in my first couple days, and previously was reading Clean Architecture/Designing Data-Intensive Applications, but there is honestly just a ton to learn, let alone perfect.

Has anyone else had this experience?

How did you handle it?

What are some things I might be neglecting? Especially with regards to interpersonal skills?",1593179571.0,2020-06-26 09:52:51
121,"How have you improved developers with ""1 year of experience repeated N times""? Or what have you seen that has worked?",91,gmvcvi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gmvcvi/how_have_you_improved_developers_with_1_year_of/,86,"From [this article:](http://www.boykiemackay.com/productivity/10-years-of-experience-or-1-year-repeated-10-times/)

""Making the mistake of falling into the 1 year experience repeated over 10 years is fatal as it puts you in a false sense of security believing you have ""so many years"" of experience under your belt when all you have is so many years of just showing up.""

So I am not talking about how to prevent this kind of developer from happening. I want to know what solutions you've seen have worked people who already went waaay down this rabbit hole but then came out of it, moving in a new direction. What helped them stop this ""expert beginner"" stagnation and then actually improve over time?",1589945141.0,2020-05-19 23:25:41
122,Is it ever worth it to try to change the wages at the company you're at?,88,kfn516,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kfn516/is_it_ever_worth_it_to_try_to_change_the_wages_at/,59,"20+ YoE.  I and my coworkers used to be somewhat underpaid relative to market, but have good benefits.  In the last five years, our local cost of living, particularly housing, has increased >40%.  So now, we're really underpaid.  Promotions are not a thing (non-tech), so we're all truly capped out.  Our employer doesn't seem to have noticed.  In the meantime, FAANG's have come to town in a big way.

I'm naturally a pessimist, so I'm not inclined to fight it, and just start looking for something else.  But, I want to check that instinct.  

Is there a point to trying to get my (otherwise very good) employer to raise wages?",1608334015.0,2020-12-18 18:26:55
123,Getting put on a PIP - Personal Improvement Plan - Your experiences?,86,j441yp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j441yp/getting_put_on_a_pip_personal_improvement_plan/,101,"Have you ever been put on a PIP (Personal Improvement Plan)?

Other regions or countries may have a different name:  a written document, usually from both your direct manager and HR -- listing specific areas where you must improve -- and this must be shown from your work, by a certain date.

What was your situation? Do you feel the PIP was accurate and justified, or not? And, what was the ultimate outcome after that?",1601705208.0,2020-10-03 02:06:48
124,"Site that collects stories about transitioning to staff eng, principal eng, etc",86,g6w277,ExperiencedDevs,https://staffeng.com/,12,,1587708477.0,2020-04-24 02:07:57
125,How to give negative feedback?,88,gjnezv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gjnezv/how_to_give_negative_feedback/,33,"I'm a team lead who has an employee who is trying to fix things that aren't broken and being argumentative when I am directing them to not spend time fixing what isn't broken. 

I am relatively new to management and have never had to give actual negative feedback before. When the negative behaviour occurred, I did not address it at the time. But the employee has since tried requesting to do the same sort of work in a group chat with my own manager. My manager is aware of this issue and has suggested I speak to the employee about this. I recognise that I should have been forthright about the issue in the first place and, next time this sort of thing comes up, I won't wait to 

I am noticing in their messages that they are becoming territorial about their work (referring to shared work as ""my x""). They are otherwise a valued member of the team so want to handle this issue gracefully. How can I communicate this issue / provide negative feedback about this?",1589495400.0,2020-05-14 18:30:00
126,6 years as a software engineer in one company and I feel scared moving to another company,84,hu12s0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hu12s0/6_years_as_a_software_engineer_in_one_company_and/,24,"The title is kinda misleading but after 6 years in one company (first company after I graduated) I decided to move on. I took a break for about 6 months till July and decided to get a job. Fortunately, I was able to get a job quickly but I feel like the job offer I got was too much of what I was hoping to expect and anxiety kicked in. 

My years as a software engineer wasn't really that good. In my previous company I felt like I was thrown to the ocean without much support from my seniors/teammates. First thing that we didn't have is a good process from coding structure to proper git merging. I tried to implement processes that will benefit us but my teammates just didn't really care at all as long as they are able to band-aid the issues. I also felt like I was the only one who is always doing the new projects and my teammates just wanted to do their old projects(enhancement/bug fixing) and don't want to move out of their comfort zone. I did try to escalate this to my manager but nothing happened and instead they increased my workload. On my 6th year I was really burned out and also some personal issues happened to my life so I decided to quit.

Now, I'm starting tomorrow to a new company and I'm scared that I would be incompetent and even if I have some experience I would like to ask for mentorship. I apologize for the ramblings and English is not my native language

I'm just really anxious and wanted some advise as this is my first time moving in to a new company.",1595196607.0,2020-07-19 18:10:07
127,How do you go about expanding your sphere of influence to a principle/staff level?,82,gb56ib,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gb56ib/how_do_you_go_about_expanding_your_sphere_of/,34,"I'm a senior engineer, my next big goal is to move to Principle/Staff. 

I have a general understanding that that level of technical leadership requires a broader sphere of influence. Rather than enacting and driving technical change on and around your team, you do it at a much broader organizational level. 

I'm at a bit of a loss for how to do that exactly. Does it just mean interfacing with lots of different teams, and finding a common problem to solve? How do you convince others that it's worth dedicating the resources to solve that problem? And further, how do you know that it _is_ the right problem to solve. I'm sure if you started looking at broad organization wide problems you can find a number of them, but there's only so much time and so many resources to spend on solving them. How do you determine what is the right problem to spend time, money, and energy on?

I should note, I am actively having conversations about this with my manager, but I'm curious to hear the perspectives of folks in this community. For context, I work at a large (>2k employees) tech company. But I'm happy to hear thoughts when working with teams of varying sizes.",1588312448.0,2020-05-01 01:54:08
128,Staying focused with meetings scattered throughout the day,84,kfzdf3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kfzdf3/staying_focused_with_meetings_scattered/,39,"I've been a full-time developer for 13 years now. Worked at Microsoft early on, and now I'm at a FAANG in a senior role. I don't manage anyone directly, but 'influence' a team of 5-6 devs, 3 of them senior, the rest more junior. The project I lead I have one senior dev and one junior dev, who is right out of college. I help her the most and I'm considered her manager, though not reflected in the org chart.

Our greater team (30-40 people) has a relatively high load of meetings which we've talked about and have reduced.

However, as we add new people to the team I end up spending time ramping people up and thus have 3-4 half-hour meetings scattered throughout the day. This leaves little time for actual code time.

When I have raised this with my manager and his manager, the feedback was along the lines of 'on the days you meet with them more you just have to make up that time on other days or in the evenings'. In other words, they expect me to produce a lot of code. Which I do, but as we add people, I run into the [Mythical Man Month](https://en.wikipedia.org/wiki/The_Mythical_Man-Month) problem.

Thing is, I have three kids. I want to work a good 8-9 hours and call it a day. I don't want to burn out either.

I'm trying to come up with ways to be more efficient in-between meetings. I try to group my meetings together but it's often not possible, so I end up with a schedule that is full of half-hour gaps.

I've done Pomodoro for years and it works well. However, what I find hard is jumping from one meeting where I'm explaining one project (for another dev) to going back into code on my own project. Often I spend 5-10 minutes just refocusing, and then the last 5 minutes thinking about the next meeting. That leavs me with 15 minute gaps to code throughout the day.

Some people I work with are really good at context switching. I'd love any advice on quickly focusing back into the project. Reducing meeting load is something I'm working on, but may not go away.",1608373679.0,2020-12-19 05:27:59
129,"Everyone hates Jira, but no one stops using it",80,izu5u3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/izu5u3/everyone_hates_jira_but_no_one_stops_using_it/,146,"Hi there!

From countless conference discussions and Twitter threads it seems there is a universal haze of developers for Jira as a project management tool. But still, whenever I ask a dev in a company with more than a handful devs - they use Jira. How come?

What are your gripes with Jira? Which other solutions did you try? And what was missing in the end?",1601103756.0,2020-09-26 03:02:36
130,Understanding why a coworker was fired,84,ityr1i,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ityr1i/understanding_why_a_coworker_was_fired/,67,"I've found that when a fellow coder is let go or fired, management is generally pretty tight-lipped about the ""why"". It can sometimes be easy to infer (lots of unexcused absences, doesn't get along with people, etc) but other times it's very unclear.

What's your general strategy when a coworker is let go? Do you respect their privacy, don't ask, and move on? Do you ask your ex-coworker directly? Do you run questions by your manager?

I don't want to come across as unprofessional and I don't want to offend anyone, but I think it would be helpful to know what happened, so I can have a better understanding of the dos and don'ts of our industry.",1600301842.0,2020-09-16 20:17:22
131,Pigeonholed as Some Kind of Savant?,83,hlyxpb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hlyxpb/pigeonholed_as_some_kind_of_savant/,40,"Has anyone seen this dynamic arise at work: they or a coworker being treated as some kind of coding savant, especially by management or the business side?

Production is down; there's a gnarly type error leaving everyone else scratching their head; no one else can figure out what's causing this bug affecting our best customer. People come to you.

Communication style may tend towards the overly detailed and precise or seemingly random connections.

On the other hand, when it comes to product road map or overall technical strategy, some on the business side would rather look elsewhere, even if that means someone else literally repeating your words, or ignoring your advice until it hurts too much. Besides, your time is saturated reacting to these immediate needs.

Has anyone had success pivoting out of this without changing teams or companies (or some other big personnel change)?",1594029816.0,2020-07-06 06:03:36
132,Do you feel emotional while leaving a job?,82,hl2g5n,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hl2g5n/do_you_feel_emotional_while_leaving_a_job/,25,"I have been working at the current company for about 3.5 years now. There are quite a few things I did not like here and had been thinking about leaving for a while. Recently I got an offer that seems like an upgrade from the current role in every aspect and very very close to what I have deemed as my dream job. I am going to let my current manager know about it in a few days. But now that the time has come, I am feeling very emotional, maybe having second thoughts too though this is what I wanted since a long time. Has anyone experienced this?",1593894036.0,2020-07-04 16:20:36
133,"So, anyone else ever had that one guy you need gone on vacation during a critical upgrade?",81,khqjvg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/khqjvg/so_anyone_else_ever_had_that_one_guy_you_need/,84,"You know that time where you have to run a database migration or launch a feature, and your coworker named Bob decided a month ago that he was going to go on vacation X-Mas week, and then left some instructions on how to run the migration or upgrade in a word document or email, and then something happens during the migration no one expects and Bob is on vacation and not taking calls?

Funny enough it ended up being a net positive in the long run since it forced me into speed grinding Hibernate and a lot of SQL.",1608614522.0,2020-12-22 00:22:02
134,How are you making new hires successful in the remote work situation?,83,jfd16c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jfd16c/how_are_you_making_new_hires_successful_in_the/,24,"My org (series B startup in fintech space) has been hiring at a good pace post covid 19 and has doubled in size during this time. We have a very strict process for hiring, however we've found that some of the new hires have found it hard to get onboarded properly and we haven't got enough out of them. This is happening to inexperienced devs

Here are the things I've heard from them

- it has been hard to feel part of the team as you're working with people you have never met
- they gotten stuck doing simple tasks and made bad technical decisions resulting in their work being rejected from being merged
- they have felt they have not received enough support even though they have been the ones who haven't communicated enough


Basically people are busy at their own tasks and the new hires aren't going to get attention if they don't seek it. It's much easier to notice a struggling colleague when it's not remote.

I'm trying to understand how to make new hires, who are pretty smart people but not very experienced successful at their roles. 


Thoughts?


Edit: thanks for all the thoughtful responses!",1603316583.0,2020-10-21 17:43:03
135,What to do about startup CTO who does not hold himself to the same standards as others?,84,heqssg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/heqssg/what_to_do_about_startup_cto_who_does_not_hold/,66,"I've recently just joined a super small startup and my CTO holds others to a very high standard - which I think is great. When one of us engineers submits PR's we can always depend on a really in-depth code review from himself, and we're not allowed to merge in our code without his review.

However, when he raises PR's, he immediately merges them in using his admin privileges, without giving the other engineers a chance to review his code.

I'm worried that this is bourne of an ingrained attitude that his code is better than others, which is a little toxic IMO.

What's the best way to approach this situation, as someone who has not been at the company very long (less than 2 months).",1592987909.0,2020-06-24 04:38:29
136,How do you explain yourself to people if you're stuck in a rut?,79,hbfmgr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hbfmgr/how_do_you_explain_yourself_to_people_if_youre/,22,"So I have a monthly meeting with management soon and for half of the month I haven't been performing my best for the last to weeks (brain fog/farts, emotional stress, etc). Work is getting done regardless, but at a slower pace which I'm sure my manager might notice.

It's a classic problem we all face I'm sure 😁. Basically, I just want to know how to explain myself in a positive manner.",1592519279.0,2020-06-18 18:27:59
137,Any tips for not being so emotionally attached to projects?,80,h9mux4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h9mux4/any_tips_for_not_being_so_emotionally_attached_to/,40,"This tends to happen if I've been the lead dev on a project for an extended period of time.

Whenever there’s new PRs for ideas I hadn't considered, or using an approach I think might be a bad choice, my gut reaction is usually a mix between confusion, anger and suspicion. The projects have scaled to the size where I offer my concerns for each issue or pr. 

Curious whether you folks have any tips on relinquishing control of projects or becoming less emotionally attached when folks want to add new, features that you might not agree with or are implemented differently than you would have done it.",1592277525.0,2020-06-15 23:18:45
138,New moderator: snowe2010,79,f77o43,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f77o43/new_moderator_snowe2010/,68,"Hi /r/ExperiencedDevs, 

I've just been added as a new mod on the sub and wanted to introduce myself and my goals. 

I'm snowe, I'm a Senior Java/Kotlin/Ruby dev professionally, and I do a bunch of random programming in my free time. I've got 8 years professional experience, but about 10-11 non-professionally. I enjoy rock climbing, snowboarding, D&D, board games, video games, 3D printing, and woodworking. 

With my moderatorship, I hope to:

1. Introduce clear set rules about the type of content allowed on this sub. 
2. Decide on and implement verification of users, which should cut down the moderator queue. 
3. Clean up the moderation queue after clear rules are decided (currently, `Discussion about New Grad/Entry Level Job Offers` is hard to moderate on, because we don't have a clear definition of 'Entry Level'). 
4. Implement AutoModerator in some capacity to help out. 

We've had tremendous growth lately (~10% in the past week alone), so I believe that we need to take some action to stop things before they become too big of an issue for the mods to handle. 

Feedback will be important in the coming weeks, so please think about how you want to see the subreddit grow and leave comments below. 

\- snowe",1582298654.0,2020-02-21 10:24:14
139,Your experience makes you dumb,81,cb2exk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cb2exk/your_experience_makes_you_dumb/,15,"Just a reminder to not assume your assumptions are correct. Experience isn't a substitute for confirming with actual tests. 

I just spent hours on an issue because I dismissed the obvious option. I thought ""no, I tested that before, know how it works, and no code changes affect it."" Yet that was the issue and if I bothered to run the test I'd have saved a lot of time and frustration. 

This is a reminder to me, thought I'd share in case others are falling in to that trap.",1562715237.0,2019-07-09 19:33:57
140,A dev with poor English has joined my team,81,j1jq89,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j1jq89/a_dev_with_poor_english_has_joined_my_team/,32,"I'm not sure whether I want to rant and share my experience or to ask about other mentors' and experienced devs' advice about this. Perhaps, both.

So, I work for a small company in a country with generally poor English proficiency, and we happen to develop software for a customer whose native language is English (which is of lesser importance, because I'm sure that coding nowadays is done in English almost universally). Initially, the company assigned the most proficient devs to the project (as the ""secondary"" skill after their main specialty, of course). But about one month ago I took the opportunity of mentoring a new guy on my team.

He's a productive junior dev, but his English is... let's say read-only. I know I'm no perfection either in that regard, but his lack of foreign language skills reflects in the code that I have to review. It's not only the longer sentences in commit messages or comments, but even names in the code (the limited choice and bad ordering of words in particular). I can't leave it like that, it distracts me when I read the code. And I don't usually mind the extra work, but this time I feel kinda hopeless for this guy.

All in all, I'm confused. Everyone on the team is. He admits his English sucks and everyone understands that it's not going to improve overnight (over a few months). I'm just trying to decide if it's time to call this out.",1601352394.0,2020-09-29 00:06:34
141,Advice on massive shitty codebase,84,iy9z0x,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iy9z0x/advice_on_massive_shitty_codebase/,48,"I currently work for a software company that has about 8 web applications written in Node / JavaScript / Angular / jQuery. These applications have been created over a few year period by copy/pasting another application as a starting point and now we’re up to maybe a million lines of code in total (if you include html templates, config files etc as code).

Possibly as much as 80% of this code is duplicated between the applications, although over time whilst the functionality has remained roughly the same, the code itself has been changed, refactored and bug fixed in different ways, meaning the same features and apis in each codebase are no longer compatible with each other.

The code itself is mostly shit, often very shit. There has been no real attempt at architecture. Just assign a JIRA to the next available junior developer and let them have at it. Plenty of code with conditions like “if (x === ‘true’)” and worse.  No comments and no automated tests to speak of.

So having watched this situation develop over the last few years, with absolutely nobody interested in hearing my warnings, it seems to be falling into my lap to find a solution to this mess.

Thing is, I don’t think senior management want to hear about any of this, at all. They just want short term code out of the door and I think they think Everything Is Awesome so to find out that it’s not quite that awesome is going to come as unwelcome news.

Actually, that's not quite true. I think they know it's shit, but don't want to acknowledge it and they think that it doesn't really matter anyway, if we can just keep shoving features out of the door everything will be OK.

What has finally brought this to a head is that they want to re-brand the applications, which should be a simple task like spending a week tweaking a few templates, but since all the template code has drifted apart over the years isn’t going to be quite that simple at all and is probably going to be months of work.

It’s not impossible that there could be a “shoot the messenger” or at the very least, “resent the messenger” sentiment when I raise this issue. It's very likely I will be thought of as a ""Negative Nancy"" in thinking the issues are problematic.

The company is doing quite well but I think this problem has the potential to disrupt that success by making it more difficult to add features to the applications. If I’m not careful, I think I could end up getting the blame for that disruption.

Overall, I think my management are decent people and reasonably approachable but they don’t really know, or want to know, anything about web development and are themselves under pressure to deliver which is why code quality, architecture or indeed anything other than short term thinking has ever been applied to the codebase.

I wonder if this group has any insight on good ways forward or the best way to approach this with management?

edit: Note: my question is about how best to raise this issue with management, not how to solve the technical issues around refactoring etc.

edit2: thanks all. plenty of good advice and food for thought here. will probably have the conversation tomorrow. ",1600896080.0,2020-09-23 17:21:20
142,What is the most over-engineered solution you've seen implemented for a relatively simple task/feature?,81,iy0gfj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iy0gfj/what_is_the_most_overengineered_solution_youve/,92,,1600852057.0,2020-09-23 05:07:37
143,"Team lead is younger than me, I think he's edgy and being sure I know my place",82,fw4y42,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fw4y42/team_lead_is_younger_than_me_i_think_hes_edgy_and/,38,"He's really very competent but he seems to nitpick me more than anyone else on the team, on code reviews.

Maybe I'm really not as good as I think I am, but there's a feeling that it's more personal.

Any suggestions, working remote so sitting down to figure this out may not be feasible.",1586229329.0,2020-04-06 23:15:29
144,How many devs here are women?,84,dagjzx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dagjzx/how_many_devs_here_are_women/,26,"Just wondering how many devs here are women? Are you the only woman on your team?  If so, Do you feel left out? How is your rapport with your male colleagues?",1569709100.0,2019-09-28 18:18:20
145,Bombing interviews with experience sucks even more,82,k6b7z8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k6b7z8/bombing_interviews_with_experience_sucks_even_more/,90," I just finished an interview, and needless to say I bombed it. I felt awful afterwards, even as someone who has 3+years of experience, a solid portfolio and even open source contributions.

I'm here justing wanting to vent and complain about how much I hate questions like ""Tell me about a time where you had an unpopular idea but it was the right idea and you had to push really hard for it"".

Couldn't help but stumble and struggle trying to say something semi-related that wasn't cringey af.

Then from there, he goes and asks something super specific like what is a controlled component or uncontrolled component in react. Granted I have a react on my resume, but it is not like I have every terminology or reference memorized. Like ask me how I improved our lighthouse performance score of this React app instead.

Sigh I guess I need to pratice making up stupid stories for these general cringey behavioral questions and memorizing a crap ton of definitons. I'd honestly rather do a leetcode hard.

Atleast I currently have a job, although one that I don't like but I'm not stupid enough to quit first...",1607075518.0,2020-12-04 04:51:58
146,Being a better generalist?,81,jllihb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jllihb/being_a_better_generalist/,61,"I’ve been at my company for 10+ years and it’s the only company I’ve ever worked at (joined right out of college). I have been a generalist in my role as an app developer (desktop and mobile), building new small features, debugging, helping others out during crunch, etc. I’ve worked on several disparate areas of our apps, but never stay on one area for very long before I move to another feature.

I’m concerned that my value as a developer is diminishing, especially as I get older (I’m 40). I have a lot of breadth but no depth, since I’ve bounced around different areas. I recently updated my resume and it reads like a feature list. I have a hard time selling myself as an “architect” of any large project.

My boss insists he values me as a generalist, but I’m also concerned that my value proposition isn’t especially great if a new hire can take a few months to learn and become as knowledgeable in an area as I am.

Has anyone else found themselves in this position? What’s the best way to increase my value as a generalist? I’m thinking ahead to the dystopian future if/when I have to look for a new job and my resume doesn’t stand out, despite having more than 10 yoe. Thanks in advance!",1604191182.0,2020-10-31 20:39:42
147,"Manager trusted me as a lead on a feature, but several months later realized I left out a key stakeholder request. What's the most professional way to handle this?",78,hb72gp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hb72gp/manager_trusted_me_as_a_lead_on_a_feature_but/,26,"I have been a software engineer for a few years. Recently passed the one-year mark at my current company, and I was placed as a dev lead on developing a fairly important feature. This was a good sign as it showed my manager trusted me with a big opportunity despite being new to the company, and I was able to deliver the feature without too many hiccups. Or so I thought.

During development, I made a tough decision not to support certain capabilities, as my discussions with stakeholders at the time implied adding this support was excessively complicated and impactful to satisfy the (relatively small) demand. However, in this process, I left out a key stakeholder (internal team) of this feature that I simply did not know about; although no one on the project really gave me a heads up about this team, it's mostly my own mistake for not being more thorough. 

Anyway, I developed the feature, tested, fixed a few bugs here and there, and now we are well past the deadline for the latest release, so there's no going back. Today, a member of that stakeholder team I mentioned reached out to me. He had assumed I added the support to the feature, and gave a pretty compelling case asking for the support. He even politely mentioned something along the lines of ""our team was one of the key voices asking for development of this feature, so I'm a bit surprised that it doesn't have this support we requested."" 

Now I feel like I made a huge mistake not making an effort to be more thorough, and consulting the use cases of this team. Adding this feature to the release is not only impossible now, but I don't even have a specific estimate of how much time it would require and its impact . Usually in this case I would go to the dev lead for help, but for the first time in my career, I'm like oh shit, that's *me*. 

So what I'm wondering is, what's the most professional way to handle this scenario? Should I work with my (non-technical) manager to see if there's a way to resolve this issue? I'm just embarrassed to have dropped the ball on such an opportunity, and don't want my manager to hold it against me.",1592481069.0,2020-06-18 07:51:09
148,It’s harder than I expected to get a senior level position.,78,g2qm9c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g2qm9c/its_harder_than_i_expected_to_get_a_senior_level/,74,"I always assumed that I could go get a job no problem at all. That’s true to an extent but a decent job is harder. Yes, I can get tons of interviews. However, getting an offer is tricker. I’m a dev2 but for all intents and purposes I’m a senior and for several reasons can’t get a promotion right now none of which are performance related. 

I can do the take homes no problem. However I stumble on the white boarding and specific tech questions. I just really hate that my day job and excellence in my work isn’t enough. I have to grind leet code problems and read cracking the coding interview to get an offer, a decent offer I should say. I want an increase. 

I’m finding it difficult, the tech interviews are all over the place. I’ve also passed several and made it to onsites given presentations and everything but no offer for who knows what reason. They don’t tell you. 

It’s just frustrating because here I am at the peak of my skills and I’m having a harder time getting a job now than I have when I was a junior. My past two jobs were cake to get. I feel like a lot of it is based on luck. 

Anyone else have a harder than expected time getting a senior role?",1587109495.0,2020-04-17 03:44:55
149,Why We Will Never Have Enough Software Developers,81,jx52rd,ExperiencedDevs,https://whoisnnamdi.com/never-enough-developers/,41,,1605829726.0,2020-11-19 18:48:46
150,Keeping Pace?,79,jl1u8g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jl1u8g/keeping_pace/,37,"How much of your mental energy do you spend just keeping pace? I work at a mid-sized company, and it feels like we're trying to do the volume of work of a Fortune 500 company with an organization a small fraction of the size. To do my job effectively, it feels like there are numerous things I need to keep on top of coming from various sources.

* **The day-to-day flood of communication:** e-mail, Slack, meetings
* **Change coming from the tech industry:** new libraries and frameworks deprecating the old, new best practices, security bulletins, etc.
* **Change coming from the business's industry and the wider economy/society:** for example, the COVID-19 pandemic
* **Change coming from the business itself:** executives shifting priorities to react to a new opportunity, Product refining requirements, support requests escalating to the developers
* **Change and questions coming from other teams:** interfaces or processes changing, their own priorities shifting (i.e., when they can do the thing your team depends on), etc.
* **Change and questions coming from within the team:** new patterns being introduced; new steps added to some workflow; a workaround introduced; helping a coworker get something working; switching contexts to work in another application, layer in the stack, or business domain; etc.

The team has been iterating on how to make these things less intrusive, but it's been a constant juggling act; at core, I think we're just understaffed. The Product Team is intended to act as a buffer between the developers and everything else, prioritizing and grooming the team's work.

Stepping back and letting go a little helps until you're called into a meeting where you didn't keep pace with some change or other the meeting hinges on; a junior developer works on a major feature without any review or guidance from any senior developers; or someone's work is blocked waiting on your piece of the puzzle.

How do you do it without burning out?",1604109809.0,2020-10-30 22:03:29
151,How A Software Engineer Used Facebook Ads To Land An Interview at Reddit,80,hmivns,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hmivns/how_a_software_engineer_used_facebook_ads_to_land/,70,"Hey guys -

Here's a fun story about how Chris Seline (an experience software engineer) used FB ads to target the CEO of Reddit and get an interview. Main lesson is that you don't need to keep blasting your resume - try to be creative :)

\----------

The traditional way to get a job interview is to submit your resume and pray.

Everyone does this and it’s taken to be the default because it’s easy. You can send the same resume with the click of a button to totally different companies, no effort on your part other than preparing the resume.

There’s no way to stand out, no uniqueness.

Generally, the way to get around this is to ask for a referral or to reach out to someone at the company for some sort of informational interview. Both of these methods allow for a more personalized approach to job hunting.

But is it possible to go even one step further?

**Stand Out**

In 2016, [Chris Seline](https://www.linkedin.com/in/dumbfounder/) was coming off a failed startup and looking for new opportunities.

Unlike most other people, though, Chris wasn’t a fan of the resume blast method.

His strategy was to target specific companies and try to get noticed creatively rather than use the traditional channels and get lost in the shuffle.

Chris decided that he really wanted to work for Reddit.

His plan was to write a [blog post](https://twicsy-blog.tumblr.com/post/135712326189/hey-reddit-lets-make-some-recommendations) and then email it to the CEO of Reddit.

The blog post is thorough - it’s 2000 words, technical, and you can tell a lot of effort was put into it.

Even if Chris had emailed his post to the Reddit CEO, there’s a strong chance he would have gotten an interview. 99% of applicants don’t put this much effort into an application and receiving such a personalized email is a positive signal.

But Chris didn’t just email him.

**Facebook Ads**

He decided to use Facebook Ads to target the CEO of Reddit (Steve Huffman).

Here’s how he did it:

1. Find the Reddit CEO’s public Facebook profile
2. Use this to find out where he lived, what he liked, what he was interested in, etc
3. Use the above to run a super targeted FB Ads Campaign

Note that Chris only wanted *one* person to click on this Ad, that’s why he had to go super targeted.

The Ad simply said: ""Steve: Reddit needs Recommendations""

**The Result**

Chris ended up spending $10. The ad reached 197 people. 4 People clicked on it. One of them was the CEO of Reddit.

Next thing you know, Reddit HR reached out to schedule an interview. Nicely done.

I contacted Chris to find out if he actually got the job - here’s what he said:

*I did not. It turns out they were just starting a search for ""head of search"" at Reddit, and asked if I would like to interview for that job. That would have been my dream job, and definitely worth a move across the country, even with 3 kids and a wife in tow (I live in DC), so naturally I was very excited and said yes. But after a few talks they thought I didn't have enough experience with big companies, so they asked if I would be interested in an IC role. I was, but I wasn't willing to move across the country for that, and they didn't want to hire remote workers. So that was that.*

**Takeaway**

The reason this is a fun story is because of the FB Ads.

But I think what people may gloss over is the amount of time and research Chris put into writing the blog post that he eventually showed to the Reddit CEO.

If we go back to the beginning of this case study, notice how I mentioned that just blasting a resume to a company signals nothing unique and frankly a lack of effort.

Chris’ blog post was well researched, relevant, and made him stand out. The FB Ads targeting was just the cherry on top.

Next time you see a job you really want to get, think about how you can go that one step further.

**Thanks for reading**

You can view the original article with nice images [here](https://www.careerfair.io/reviews/how-to-land-interview-using-fb-ads). I'll be in the comments if anyone wants to discuss :)",1594106050.0,2020-07-07 03:14:10
152,Feels like I'm regressing in skill during quarantine,80,ghw652,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ghw652/feels_like_im_regressing_in_skill_during/,45,"While I've been lucky to maintain full-time remote employment during quarantine, I honestly feel like I'm getting worse at my job the longer this goes on. Even simple tasks are taking forever to do, and I'm making stupid mistakes in my PRs that aren't helping. And worse, I've been moved to a project that has more direct visibility to the bosses. Not a good combination.

I'm trying to stay active, eat right, sleep well, spend more time with my family, etc. but it's frankly not enough. I'm not advocating for ending the quarantine and returning to the office, but I feel like I'm losing my f#%*ing mind at this point. What I really need is a proper vacation, but taking time off right now just seems so pointless. I really don't want to burn my limited PTO on what would essentially be an extended weekend.

There's no real question to this post. Just throwing it out there to get it off my chest. If anybody is feeling something similar, you aren't alone.",1589258970.0,2020-05-12 00:49:30
153,"Software engineering managers, what's your ""process""?",80,ggiuaf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ggiuaf/software_engineering_managers_whats_your_process/,32,"New software engineering manager here looking for some advice on process.

I've been a tech lead/team lead at my org for a couple years and am moving into a software engineering manager role on my current team (I've worked with these folks for about six months).

As I begin this new role, with formal HR responsibilities + direct reports for the first time, I've got some questions for other software engineering managers:

How do you track longer-term goals of your reports? Do you keep a file on each person and add notes after meetings/conversations? If so, where does that file live (private confluence space, google docs,  local file)? Does the report have access to it?

What's your approach to 1:1 meetings? How frequently do you meet, and does that depend on seniority? How much do you prepare for 1:1s — do you bring specific topics? Do you take notes during?

Do you schedule more formal performance review meetings with your reports? If so, how frequently?

How do you measure your own performance? What goals do you set for yourself regarding your reports (e.g, goal of seeing X promoted to Senior within the year)?

I think I've got a better handle on higher-level direction but would be very interested in your answers to these questions or other advice/opinions on the hands-on process/where-the-rubber-meets-the-road type stuff. Thanks!",1589071652.0,2020-05-09 20:47:32
154,Junior dev opens a very large refactoring PR -- thoughts on how to handle?,79,ezecdm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ezecdm/junior_dev_opens_a_very_large_refactoring_pr/,45,"I'm the lead on a team of three. Yesterday, one of the other engineers submitted a PR that refactors some key parts of the application in a direction we have discussed wanting to go in. This wasn't ticketed; he did the work on his own time and I wasn't aware of it until he opened the PR. After a first pass, it looks pretty sound -- I'm aligned with what he's doing, and it's a concrete improvement -- but b/c it changes so much, it's going to be hard to be as confident in it as in our typical-sized PRs, for example, b/c it moves logic and concerns around, it also moves and changes lots of important test cases, so you can't tell at a glance whether anything has been missed. Also, b/c it touches so many places, work we have lined up will conflict with it unless it is merged before we start on that. I have some leanings about how to handle this, but I'm curious what others have done in similar situations. Work with him to get it merged, putting aside feature work until then? Close it and work with him to break it up into smaller chunks? What messages would you communicate to him about it?

For context, working outside of hours is not common or encouraged -- not strongly discouraged, either -- just not part of our culture. Sometimes people do it b/c they're excited about something, but not often. Something we do encourage is small PRs (and discourage ""god"" PRs that must be merged).",1580957654.0,2020-02-05 21:54:14
155,Top 5 books you've read that have helped your day-to-day?,79,bx1c7w,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bx1c7w/top_5_books_youve_read_that_have_helped_your/,29,"To fellow experienced devs, I prefer reading books to blogs, and would like to gather a list of your top 5 books which have helped you day-to-day.",1559761785.0,2019-06-05 15:09:45
156,Leaving company right before getting promoted,77,k8kioi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k8kioi/leaving_company_right_before_getting_promoted/,59,"I'll keep it generic here, because I'd like to get everyone's opinions on this situation.

I've been with my company (in NYC) for many years now and I'm getting promoted now to a more senior role. The work I do is nothing special, writing some backend services and APIs, but the stack is quite decent (Java,React,Kafka,AWS). The workload varies, some weeks are longer than other but on average maybe 45-50 hours. I'm getting a bit disinterested in this role and don't see myself learning much new tech (only gaining domain knowledge) in the near future. But I do like my team and manager seems supportive. After 4.5 years, I'm making 133k base + 37k bonus last year in New York. I have no idea how much my salary will increase after this promotion (I'm expecting 10-20% base increase + up to 70k bonus).

A few weeks back I interviewd a few places and landed a job offer from a fintech company in NYC. The offer is much bigger than what I'm currently making (193k base + 35k discretionary bonus at the end of year). The work should be similar in nature, the culture is more laid back and engineering-focused. The tech stack is subjectively worse (C++ and some proprietary tools, not as modern). Can't say much about the team and manager, but they all seemed nice and approachable during the interviews. 

I'm very conflicted. Should I take the new job or stay and see where my promo takes me? I'm afraid switching right after the promotion will burn bridges as it'd catch my manager by surprise. But at the end of the day, money is money and I'd certainly be making way more from day 1.

If I switch now, I'm not getting the bonus from the current company. Buy I'd be getting a new higher base from day 1. The team may or may not be good and the work may or may not be interesting.

As a side note, I'm planning to leave NYC in 2 years. So theoretically, even if the new job is not that interesting, I'd still get paid more and I can find something else in the city I'm moving to.

What would you do?",1607389428.0,2020-12-07 20:03:48
157,Which industries have you most/least enjoyed,77,jsxkca,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jsxkca/which_industries_have_you_mostleast_enjoyed/,25,"   As software engineers we are able to go into different industries.   I’ve hopped jobs and industries a few times in my career and I can say what industries I’ve enjoyed the most and the least.


OEMs - I’ve worked for 2.  Mostly pleasant experiences but software engineers are 2nd class citizens.  I like due to their scale that there is always something interesting to work on.   OEMs can be a bit conservative but because they’re still mostly engineering companies it’s not as bad as some industries

Finance -  finance comes in 2 forms.  Traditional financial institutes and fintech.  With that said I hate working at banks and other financial services company.  Typically some interesting projects are lurking somewhere in the company.  But it seems easy to get stagnant.  Plus the enterprise mindset is pretty bad here.  Over engineered messes are common place and if you want to see abstracted messes look no further.  Almost no one in finance has a sense of humor.  But work life balance is pretty good here.

  Fintech is another story especially for early stage fintech.   You can tell they desperately want to be enterprisy big company.  So I’ve found that these are usually stifling startups which is usually an oxymoron.


Telecom -  the industry I have the most experience with.  If you want to work on cool tech but don’t want to study leetcode to actually get the job.  This is the perfect balance.  But offshoring and H1B is insane here.  Every telecom company I’ve worked for is filled to the brim with cheap H1B talent.  Salaries here vary on the company but they’re usually at least serviceable.  Work/life balance here is horrid typically.   And despite telecom companies being amongst the largest in the world there is still much internal dysfunction.  Senior management is usually extremely short sighted or incompetent.  But it’s usually a fun ride.  

Healthcare and government- I put them together because they’re both equally bad.  Both have “rules” that only rely on “just because”.   Enterprise mindsets are worse here than even finance!  Your job is hard because everything is process heavy.  Process takes a life of its own, that no one is quite sure why they’re doing stuff.  I’ve seen some of the worst code you can imagine in both healthcare and government.  Tech is honestly just seen as a necessary evil for both.  Oddly salaries in both are high.  It’s the ultimate “collect a paycheck” industry.  Want to spend your free time working on a band and you’ve completely given up on expanding your tech skill?  Join a healthcare or government job.  You won’t be expanding your skill much since any tech decision is by committee.    The only way tech ideas are accepted is if they are overengineer solutions to simple problems and if they have confusing diagrams.    1000 line programs to transform simple jsons are common.  Complexity is a badge of honor here because smart people come up with complex things.  That’s literally the thinking here


I am interested in your takes and experiences",1605226924.0,2020-11-12 19:22:04
158,How do I change my attitude towards work?,76,gel1r4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gel1r4/how_do_i_change_my_attitude_towards_work/,48,"I'm not sure if this is normal behaviour, or there's something wrong with me.

 In the last seven years, I haven't stayed at a job for more than a year and 8 months. My least time spent at a job has been 6 months. This is usually because I just can't stand the job or the people anymore. I either leave on my own or get let go. 

I find myself feeling like this at every job I have:

- 0-2 months - feel great, energized, happy to be there. Boss is great. 
- 2-6 months - start feeling bored, start feeling resentment creeping in. Start complaining about my job. Even my wife notices. 
- 6-9 months - complaining pretty much daily. Usually about things that piss me off (boss is an idiot, the way he talks to me, etc)
- 9-12 months. I start to not give a fuck at work. Effort starts to slowly go down. This phase scares me.
- 12+ months - I just can't. So many little things bother me, I just end up hating the people I work with. They don't know that though, because I keep it together on the outside. 

I want to stay at a job comfortably for at least 3-5 years. I'm done with hopping. Just feel like I'm in this self fulfilling prophecy loop that I can't get out of. 

This happens at every job. I want to change my attitude but don't know how. 

 How do I fix this? I envy people that stay at jobs for 3, 5, 10 years.",1588804192.0,2020-05-06 18:29:52
159,"Senior Level Career Advice - almost 40, what next?",80,f4xi9y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f4xi9y/senior_level_career_advice_almost_40_what_next/,19,"TL;DR - 10 years exp. What do I focus on for the next 2 years? Management or IC?

I'm a ""Staff"" software engineer and front-end tech lead for a startup (~250 employees, ~$150 million in VC funding). I've been working at this company for 4 years now and don't know what direction to take my career.

I have been a FE dev for 10 years. I know/do a little BE tech via NodeJS/Docker/Kubernetes/micro services/etc, but databases even less. I'm considered a Staff engineer at my company mainly because:

- I created the Engineering REST Guidelines
- I am one of 5 members of our Architecture Council
- I am one of 3 members of our Security Council
- I set up all our FE related AWS infra, CI/CD build/testing pipelines, tooling, etc.
- I am in charge of a team of 4 FE devs split between our US and European offices. I travel to US Bay Area and the overseas offices about 4-6 times/year.
- I am in charge of all the FE architecture as we have 10 distinct applications for internal/external users (there was only a single app when I started).

I would consider myself a Senior level at a FAANG (with some serious grinding/study) to be honest.

As I see it, here are my two options:

- Go into management
- Stay an IC but start learning BE/Dev Ops/ML side of things(heavy ML use at current company)

I am close with the co-founder and he is supportive of either direction and will let me try anything out to see if that's what I want. The company is probably 2 years away from a liquidity event so I feel like now is the time to build my resume in what ever path I want to take. 

I enjoy being a lead and an IC, though I do less and less actual programming as the years go on. I am people person and also enjoy helping a team succeed and grow. I am in the Seattle area so my next jump could easily be one of many tech companies in the area. I'm a few years away from 40 and feel like I should be picking the next phase sooner rather than later.

Thanks for looking and any/all advice is appreciated. 

*Throwaway account but can provide mods with real account if needed.",1581916979.0,2020-02-17 00:22:59
160,Strugglign with PRs,78,ki9g9f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ki9g9f/strugglign_with_prs/,48,"Howdy experienced devs!

So I have a problem with receiving critical feedback in general - I know it's a problem, it's something I'm trying to work on, and I'm pretty ashamed of it. That problem is really manifesting itself in pull requests. I'm finding myself really bristling when I get PR feedback that I disagree with or that feels too much like that developer trying to push their personal coding preferences on me. It's enough of a problem that it's impacting my general job satisfaction (though I try _very_ hard to make it sure it doesn't impact my actual performance and have never received negative feedback around my handling of critical feedback).

I think part of the issue is that I tend to approach PRs in a way that gives the benefit of the doubt to the existing code - I'll usually only call something out/request some type of change if I see something that falls into one of three categories:

* Actively violates our style guides (4 spaces instead of 2, snake_case instead of camelCase, that sort of stuff)
* Has a specific logic flaw or is very likely to mask a logic flaw (this will lead to a crash in this scenario - those sorts of things)
* Is particularly egregious or architected particularly poorly (all of the logic is contained in one two hundred line method, or this is written in a way that's untestable - that sort of thing

If it doesn't fall into one of those categories, I find that whatever gripe I have with the code I'm looking at usually falls into a fourth, huge bucket:

* I wouldn't have written it this way

And I recognize that a _huuuuuuge_ portion of the software we write comes down to personal preference. As a team we tend to agree on some preferences (indentation, formatting, etc) but there's still a ton of room for opinions. And in my opinion, it's not my place to try and force my opinion on other developers unless I have a really, really good reason to do so.

---

But from my experience that's not the way most people tend to review code. A lot of the comments I get, or see on other peoples PRs (and this is across organizations) tends to be developers saying something to the tune of ""Why not structure it this way"" when there's no real benefit (or con!) to structuring it that way. I feel like unless you can give me a good reason why structuring it that way would be better than the way it is, then you shouldn't bring it up (unless you're just trying to have a launch point for a conversation).

This has been enough of a problem that I want to do something so that I get less riled up by these PRs. I'm ashamed to say that that feeling of frustration has gotten worse the more I've progressed in my career, presumably because I've got more of an ego now than I did when I first started.

So i guess I have two questions for y'all:

1. Is this feeling of frustration/annoyance at what feels like nitpicking PRs common for y'all?
2. What have you done to try and be better about taking PR feedback in stride without getting upset?

Thanks everyone!",1608685894.0,2020-12-22 20:11:34
161,"It seems like a lot senior roles are much more tech only narrow focused than I thought, after interviewing around a bit. Did I focus too much on soft skills and macro views?",79,kdq64a,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kdq64a/it_seems_like_a_lot_senior_roles_are_much_more/,94,"I lost my job because corona last job, working in the ecommerce sector with a product not so popular anymore

So I started doing some interviewing, and one thing I notice a lot of what is labeled as senior developer , at least in Europe and Germany, means ""consultant that can come in quickly and help us with exactly X"". I get that that might be needed, maybe especially now since companies focus on their core business, but why are they interested me then when I list things that are a bit more philosophical and strategic in their nature?

I of course know a lot of normal software things, but for me those aren't what makes or break a project anymore. So I talk a lot about more strategic thinking things, how teams can work together or the importance of understanding tradeoffs of quality vs speed in software development and things related to that.

Now to my problem, when people ask me questions or just discuss experiences, they tend to focus much more than I thought on some specific part of SQL or React, which for me is things that just can be looked up anyway if needed. The things I explain where I scaled a team from 2 to 20 devs or refactored some old service, that I think are the really interesting and education things for someone to  have been through, it's a bit the attitude of ""yeah it's nice but yeah not so much needed maybe"".  


For example, I noted i get half-stuck on different coding tasks asked because instead of just saying ""yeah we can use lib X together with server type B"" I say it depends on factors and team knowledge and so on, this is not very liked I have noticed, although in my opinion it's the best approach to unknown things.

Not really sure what I wanted to ask more than if my expectations are slightly wrong about makes a really good senior dev, and if I just should focus more on the tech parts instead of the things you just can get from experience.",1608082407.0,2020-12-15 20:33:27
162,"Working remotely -- what is your current situation? After the pandemic, what would you like to happen (for yourself)?",80,j0ww78,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j0ww78/working_remotely_what_is_your_current_situation/,100,"Been working remote since March. 

The company is following the guidelines from medical experts as well as the state governor - and in our last town hall they told us we will be remote until at least Dec 31, and most likely beyond that.

For me, the advantages far outweigh any drawbacks. So, I will be requesting 100% WFH, when the time comes. One fact (in favor of this), is that several people I know (not just on my team, but others), have been working remote for years, way before COVID. Our teams are also dispersed not just across the US, but Canada and other countries.

So -  how about you? 

Are you fully remote now, partially, or not at all? If remote, do you want to stay that way, or return to the office (or have both, i.e., 3 days onsite, 2 days remote, etc)? 

And - Where does your company stand on this? how does your manager feel about it?",1601262690.0,2020-09-27 23:11:30
163,Onboarding a Junior for the first time,77,ixq9bh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ixq9bh/onboarding_a_junior_for_the_first_time/,39,"Hey y'all. I recently transitioned into a Senior IC role at a smaller dev-focused startup. We just hired a Junior dev and I will be her ""buddy"" for onboarding. We don't really have a formal onboarding process, so it's up to my best judgement on how to bring her up to speed.

Aside from introducing our internal tools, deployment process, etc., what are some things you have found to be particularly effective when onboarding a Junior dev?",1600819244.0,2020-09-22 20:00:44
164,Barely getting algo/leetcode questions. Is this the new norm?,79,fastka,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fastka/barely_getting_algoleetcode_questions_is_this_the/,129,"I just had 3 on sites this week. 9 interview sessions, only 3 involved algo/coding.

All interviews were at well established companies.

I've basically been studying leet code for two months but instead I got either system design (which is totally fine), but also lots of ""gotcha"" type sessions where they go down a list and just ask a series of questions, for exmaple:

- write perfect syntax SQL that does ""X""
- what's the diff between 401 and 402 error
- what does idempotent mean
- difference between atomic and volatile 

Am I wrong to find some of these questions a bit ridiculous for gauging a candidate? It's easy to know these conceptually but forget them in the moment.

Another company asked me to draw out a system which I have been working on at my job - it's extremely awkward as I feel like I should not be sharing that info - so I was being extremely vague. And now I'm annoyed it may have been perceived as a lack of knowledge.

I have not gotten responses yet. I didn't do bad. But I'm curious if this is typical?",1582914817.0,2020-02-28 13:33:37
165,Is not going into management stopping career progession as you reach the ceiling as a dev?,74,jerm8q,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jerm8q/is_not_going_into_management_stopping_career/,74,"Honestly i dont know where i am going to end up but I cannot see myself coding till the end of my work career when im a 70 year old grandpa. 

Right now it is a lot of fun to develop a product and ensure it runs smoothly and then giving the boring maintaining work to the next team so i can develop another product. Currently I am a senior dev and lead dev / architect should be my next step but what is next? 

Ive been asked whether I want to enter management in the past years but I have always said no and that I want to focus on being a tech specialist. Ive already been specializing in tech for a few years now but what is a realistic? Am i killing future growth because I decided to focus on tech when in the end I am probably going to end up in management since i dont want to stay in the same position(lead dev) for 40 years? The ceiling for european devs seems so low compared to management.",1603236073.0,2020-10-20 19:21:13
166,Where's the line between negative feedback and signals of getting fired?,76,icmue4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/icmue4/wheres_the_line_between_negative_feedback_and/,26,"I've been anxious the whole pandemic and it's been about 3.5 months in my new workplace, obviously all remote and so in a 1 on 1 with a nearby manager, I asked for feedback. And that was the point where it suddenly turned from 'things seem to be going pretty well' to 'oh shit I'm gonna get pipped if I don't finish this project soon' and my anxiety has ratcheted up due to the feedback.

As far as my memory can handle, the manager said ""Not really"" initially in terms of having any feedback, but then started to note my project is dragging on for a long time 'just like many of the team's other projects'. I've been telling him the challenges along the way in previous 1 on 1s, like having to ramp up on learning to work with monorepos instead of distributed repositories and the fact that my changes are impacting many other consumers leaves things to break often. I was also blocked on many other teams approving my changes, so I've been working on other ancillary tasks I could come up with to not waste time while I waited for those. He said passive aggressively ""I mean you could keep doing this if you're fine with the speed it's going"" but it was obvious he was not happy about it. I repeated the fact that it's blocked on other teams approving code changes and unfortunately it came across as an excuse as he said ""Well, you could do X.."".

I'm not trying to manager blame either, I've certainly made my share of mistakes that resulted from working at Amazon in a highly distributed team structure and much better internal tooling and testing mechanisms. My new smaller company doesn't have that so I had to learn things the hard way on things I took at Amazon for granted but ended up breaking things in my current company, which was indeed to partially account for the delay.

I'm thinking maybe I'm overreacting to negative feedback so that's where I was wondering if Reddit could chime in and offer their thoughts on what the warning signs are of getting fired vs those 'signs' just coming from someone who actually wants you to improve. What should I do going forward? My current plan is to deliver the project asap via taking his advice and when that is done say it was expedited thanks to his advice and hopefully that demonstrates I can take feedback effectively.",1597869550.0,2020-08-19 16:39:10
167,Switching back from management to developer,76,hxfzh7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hxfzh7/switching_back_from_management_to_developer/,20,"I was a dev for 10 years and made the switch to management. I’ve been doing the manager thing for 6 years and I’m done with it. I’m tired of the politics. I’m tired of being so distant from the actual building and watching my skills getting dull. I’m tired of the work not being fun. It’s already in motion, my role change happens in a month. Has anyone else made the same boomerang? Any tips?",1595676800.0,2020-07-25 07:33:20
168,What questions do you ask in the interview to get to know if the codebase you're going to work with is good or bad?,79,egrbfl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/egrbfl/what_questions_do_you_ask_in_the_interview_to_get/,40,Title says it,1577572060.0,2019-12-28 17:27:40
169,How do I train myself to stop making incredibly time consuming mistakes?,71,j3boml,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j3boml/how_do_i_train_myself_to_stop_making_incredibly/,24,"This just happened basically I need to inject a certain setting into a file based on database entry on remote server. Working with pre-existing code base.

Testing environment is terrible, the DB entry  is being retrieved through a pre-existing rest Call in Java code. Java code is horrible spaghetti untestable mess.

I end up spending prob 1.5-2 days writing/testing a java class to inject settings. It should have taken maybe a couple of hours if I had a reasonably good code base and testing environment. All the while going ""this would be great if I could just do it in a shell script, but I need the information from the rest call currently done in the java code.""

I finished testing everything works, then I took another look at the ""main"" bash script my App is be ran from.

There's a function giving me the information from DB entry I need right there. I've worked on this script before, just not on that section of the script. If I saw this at the beginning it would have taken me maybe 1-2 hrs to complete my task by avoid having to go through the terrible java code.

I feel like a huge idiot right now, what's more I don't know how to train myself to not get tunnel visioned and start look for obvious solutions such as this.

E:

Thanks for the great advice everyone.

To summarize, I think there's  3 big ones:

1) Just ask someobdy who knows the codebase better once you are stuck for a few hours

2) Understand and trace data flow through the system, use text finding tools such as grep to find where data ends up

3) Question what overall goal is, and whether what I am doing is even nessesary",1601597844.0,2020-10-01 20:17:24
170,Dealing with a boring job,78,irqbkx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/irqbkx/dealing_with_a_boring_job/,38,"I'm mid 30s and up until this point I've spent my career in fast pace dev environments building user facing applications. About a year ago my company began a transition into a high compliance industry and my entire team was assigned to build internal tooling to support this transition. 

The company is a great company that cares about its employees and pays them extremely well. I talked to other employers, trying to feel out the market, did some interviews and got 3 offers. To my surprise my salary is 40% above the local market. Which is great because I have a wife, kids, car loans and a mortgage. 

The problem is my job is just so fucking boring. We move slowly and we're building internal tools. All we hear is complaints when shit isn't right. No gratitude for our efforts. 

Given the salary gap I feel like I owe it to my family to try to stick it out. We've paid down a lot of our house and funded half our kids college funds. But damn, it's so boring there. 

Has anyone else gone through this? Would love to about hear your experience.",1599994101.0,2020-09-13 06:48:21
171,"I'm not writing enough code as a senior dev, is this a cause for concern?",75,i2wlfv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i2wlfv/im_not_writing_enough_code_as_a_senior_dev_is/,36,"So I have around ten years of development experience, I've worked on many teams and projects, had a recent stint as a team/technical lead but I'm ""just"" a senior dev again.

My problem is that I hate if inter team communication is bad or if things are unclear so at every job I take on non-technical responsibilities (syncing with other teams, breaking down larger initiatives, clarifying with stakeholders etc.) and this leaves me little time to write code. 

I feel like in the last 3 years I didn't work on a Big Feature™, the last big thing I remember doing was over 5 years ago.

My dilemma is that I don't actually want to become a manager, at least not for another 10 years. However, I feel like I'm not advancing on the technical side either, to be a principle/architect/whatever I still lack technical skills. 

Any advice?",1596488409.0,2020-08-03 17:00:09
172,Change of leadership that changed everything,76,h08z8i,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h08z8i/change_of_leadership_that_changed_everything/,24,"I was chatting with a completely different team member and she said that after she got a new development manager, she was totally different. She even said that the change has made her more interested with her work, and she was less exhausted!

I literally just went ... wow ...

I heard that the manager was able to ""empower"" their developers to do better; some just say he's just all around nice guy and not going to BS you. 

""Empower"" and ""nice person"" are two words I've not heard from a leader/ manager for a long time! Has anyone been through such situations? i.e. the change of leadership that really changed everything. What was the thing that really made the difference?",1591817130.0,2020-06-10 15:25:30
173,Let’s talk LOEs,75,gxsasl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gxsasl/lets_talk_loes/,43,"Level of effort. 

I’m a software engineer at a web/mobile agency, and many of our contracts are fixed price revolving around LOEs, for example “we estimate that the work is going to take us this much time and therefore it will cost _____”. The contracts will often have line items that break down the work such as “Login screen: 1 day”. 

Here’s my issue. I can build you a login screen in a day. I can also build you a shitty login screen in an hour. Or I could you build you the best fucking login screen you’ve ever used if you give me a couple weeks.

But that LOE of 1 day was decided before we’ve even designed the login screen. And when the designer is tasked with it, I’m pretty sure they aren’t being told to “design a ~1 day  engineering effort login screen”. That LOE of 1 day was before we dug in and realized we have to integrate with the client’s auth provider which is some disaster of legacy code.

I loathe being asked to come up LOEs for this reason, or being assigned a feature and told how long we expect it to take. But the profitability of this company depends on that being accurate. Is this seriously how things work or is my company just bad at this?",1591483713.0,2020-06-06 18:48:33
174,How do you find a fulfilling job as a developer?,71,jmuds6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jmuds6/how_do_you_find_a_fulfilling_job_as_a_developer/,30,"I realize the common answer to this type of question is that jobs are not about fulfillment, work is work, and you should find meaning in life outside of work.  I don't disagree with any of that, but I do know that people out there have varying levels of contentment and fulfillment in their jobs and I'd like to improve mine.

Currently I work for an e-commerce company.  It's a relatively small subsidiary of a giant Fortune 500 company (we were bought out a while back).  As far as e-commerce companies go, I think it's pretty good.  The tech is modern enough and the problems we solve aren't entirely boring.

That being said, I can't escape that feeling that somehow I'm wasting 40 hours of my week, every week, just to collect a paycheck.  I think I'm a solid dev and I know I do a good job.  I get raises, promotions, and responsibilities but I'm still just lacking... something.  Contentment.  Fulfillment.  Something.

I don't need to save the world or cure cancer or anything, but working on something that is either really interesting, cutting edge, or actually important would be a step up for me.  I would like to be able to talk about work with a passion and excitement which flows out of me rather than answering the ""how's work"" question with ""same old same.""  

Again, I know most work is work.  I know most jobs are boring.  I'm looking for the exceptions and how to find them.",1604374286.0,2020-11-02 22:31:26
175,"9 years of experience as a software engineer, contemplating on taking a break. Any advice?",71,jddi9m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jddi9m/9_years_of_experience_as_a_software_engineer/,35,"As the title says, I have 9 years of experience as a software engineer. I have never had a break, but in my current job (~10 months) I am starting to see that I need to learn a lot in terms of design and architecture stuff, including how to collaborate across different teams/stakeholders. 

My experience is as following:
1st job (6yrs) - 4 years in a shitty project with no minimal development, 2 years in another project doing backend dev  
2nd job (1 year)- backend dev
3rd job (1year) - backend dev
4th job (current, 10 months) - fullstack dev with a senior role, design and architecture decisions expected from me.

The thing is, I'm not a CS Major and I'm not good at CS fundamentals. But somehow all these years, I had become good enough with a few languages/frameworks to get things done efficiently.

Technically I feel like I'm a mid level dev with 4 years of actual coding experience but on paper I have almost 9 years of experience and my current org is expecting me to take on a more senior role with making high level tech decisions. I keep making blunders and it seems that I'm not improving in this so called senior role. 

I have savings that can last a couple of years atleast, so I'm seriously thinking of taking a break and working on fundamentals, design , architecture and staying up to date with market trends and then reapply for jobs in a year. I have no loans, mortgages, nothing. Family's not overtly dependent on me as well.

I'm interested in what your opinions are, if you ever have been in such a situation.

1. Would it be hard to get a senior role after a 1 year break? (I'm willing to give 6 months of interviews to get a decent role)
2. I would be spending most of the time in the break learning/ doing side projects. Should that be enough to tell the recruiters about the career gap?
3. Like I have mentioned, my 9 years exp is: 6,1,1,1. Would I be seen as a job hopper and get rejected because of that?

Thanks!",1603042738.0,2020-10-18 13:38:58
176,Seeking low-maintenance career alternatives to software development.,75,i7nu1o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i7nu1o/seeking_lowmaintenance_career_alternatives_to/,74,"Given the current economic situation as it is, and that I'm not currently employed and I don't qualify for unemployment, I am seeking any career options that are still tech-related but not as manic in upkeep as software development. 

After [reading most of the replies in this topic](https://old.reddit.com/r/ExperiencedDevs/comments/i4wnn3/how_many_of_you_still_practice_for_interviews/) I actually find my career more off-putting and discouraging. I don't know how I'd able to live with myself knowing that the practicing for interviews never ends in software development, and I don't want job searching to feel like another job anymore. I just want to work, that's it, and get jobs with the help of my past experiences only. What kind of jobs in IT would be most suitable for a mostly back-end developer like myself, especially ones where I don't have to practice out of work hours at a manic pace to move on to the next? Won't mind if the IT work is just a lateral move or even a downgrade in skill, because my financial stability needs upgrading the most.",1597162252.0,2020-08-11 12:10:52
177,Feeling that every other place might be worst than where I am right now.,75,i73fm3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i73fm3/feeling_that_every_other_place_might_be_worst/,41,"Have any of you gals (and guys) ever got into a job, and every other place seemed less interesting  /viable although you are demotivated about the place you work?

I currently want to change job (I work in Blockchain) into another area, feel burn out in this industry, and in all honestly stopped believing in it. Although everywhere else I look, I just feel I will not fit in, or will not have any possibilities of progression. I know it is all in my head, but wondering if anyone has felt like this. It is weird wanting to move, and seeing all the opportunities but not believing that any will be good enough.

Info:  
37 years old  
Software Engineer  
Startup company  
\+/- $120k (in Europe)",1597089323.0,2020-08-10 15:55:23
178,How to deal with managers who give you zero feedback?,76,e3odia,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e3odia/how_to_deal_with_managers_who_give_you_zero/,29,"Since I've started working, I have never had a single piece of negative feedback (across four jobs). I have been pushing quite hard to advance my career, however I find it hard to ""break the ceiling"" if people don't give me feedback to improve. 

I am in a consistent loop of getting a job, doing well, watching other people get promoted, being confused, becoming irritated, leaving with the manager trying to keep me.

How do you deal with managers who give you only positive feedback?

Edit: To be clear, I have received feedback but it was only positive (and sometimes very positive), accompanied by raises, choice on projects etc. but that doesn't help me much.",1575105119.0,2019-11-30 04:11:59
179,What's the Amazon work environment like for senior devs?,75,dv3x3y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dv3x3y/whats_the_amazon_work_environment_like_for_senior/,42,"Getting a lot of recruiter contacts for Amazon roles, but also hearing lots of reasons not to go there as an experienced SW  engineer. 

Would love to hear insight from anyone who's joined as a senior.",1573556822.0,2019-11-12 06:07:02
180,"How to get unblocked in an unresponsive, remote work environment",74,k5zopl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k5zopl/how_to_get_unblocked_in_an_unresponsive_remote/,51,"Hi all. Recently joined a very small remote team. The team has built and relied upon a lot of half-baked homegrown tools over the years and, unfortunately, this has resulted in my on-boarding being pretty challenging and frustrating.

Entirely all of these tools have incomplete and out-of-date documentation and tests and rarely have a development environment to work with. This has been a consistent blocker for me and while I have been able to get myself unblocked occasionally, I know my limits and sometimes I have to get the original authors involved.

This has been difficult to solve synchronously due to the whole remote thing, so I have spent a considerable amount of time opening GitHub issues to address these problems. I document  everything I have done and all output captured, including expected and actual behavior. Unfortunately these go unnoticed or are ignored. I should note that I do not just open these issues and wait, I actively ping the team to bring their attention to the issue.

I often find myself banging my head against a wall for hours and days at a time... to the point of not committing anything for an entire week. 

Beyond asking for synchronous help when possible and opening these GitHub issues, how can I take ownership of this? I should note that this is my first remote role so I'm new to the async style. I really appreciate your guys' help.",1607039380.0,2020-12-03 18:49:40
181,"Mentoring an uninterested, non-technical intern?",75,got1w1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/got1w1/mentoring_an_uninterested_nontechnical_intern/,41,"I'm an experienced developer currently mentoring an intern.

Though I had been excited, I'm really not enjoying the experience.

I didn't really care about the development experience of the intern - she's still at college, with no work experience. I was really excited to show her how to troubleshoot code, how to debug, how to approach and think about problems.

The reality is that she seems entirely non-technical. For the first few days, she would send cell phone photographs (with flash) when I asked to see terminal output; she claims that 'copy and paste doesn't work well on my laptop' so I have to spend a lot of time on screen-sharing apps while she slowly types each character. I have suggested many, many, many times that she use bash tab-complete yet she won't.

I told her that she could avoid a repeated request spamming her terminal by blacklisting it in her ad blocker. She asked how to do that, I explained that I meant only 'an ad blocker in the browser', then had to explain the concept of browser extensions. She made a typo (fair enough) on 'adblocker' in google and it lead her to the chrome store for 'advlocker' or something similar - an extension with 50 downloads/installs, and almost certainly malware. She tried to install it and got confused when it didn't work. I should now note that she was using firefox at the time.

Despite her 'experience with linux from college', I've had to explain basic features of 'ls', and the existence of 'pwd', 'cat' and 'man'.

I've helped her work through a few tickets this week. Whenever something tangential comes up, and I offer to explain it, she asks if it helps the ticket she's working on.

A lack of experience in development is no big deal; being entirely non-technical is annoying but not insurmountable; but I feel like a professor being asked 'is this on the midterm?'. If not, she has no interest in learning it.

**tl;dr**: How do I deal with mentoring an intern in software development who doesn't seem to be even remotely technical or interested?",1590214498.0,2020-05-23 02:14:58
182,How do you resolve the conflict between an perfectionist programmer and an efficient/fast programmer?,70,finvmn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/finvmn/how_do_you_resolve_the_conflict_between_an/,28,"Are they capable of working together in the same boundary if they are each stuck in their camps?

(sorry for the wrong grammar of ""an"" in front of ""perfectionist"")",1584242580.0,2020-03-14 23:23:00
183,"Ageism in the Industry, have you experienced it?",74,i0lyse,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i0lyse/ageism_in_the_industry_have_you_experienced_it/,100,,1596144227.0,2020-07-30 17:23:47
184,How Do I Go From Mid to Senior?,73,gkym6t,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gkym6t/how_do_i_go_from_mid_to_senior/,33,"Hi guys, I hope my 3 years in industry is enough to qualify to post here. I recently joined my third company, doing Python, Flask, AWS and some OpenBanking stuff.

Around 2 years into my career I wanted to find a company which appeals to me. I currently am in one. They have the right mission and helps average humans to take care of their finances better. They are making a large impact through their tech.

I joined as a mid-level but have ambitions to get my career moving faster. What would be some guidance people can supply to propel myself further? I have aspirations of being a good backend developer with some knowledge of front-end. I am not good in the latter at all and am doing Frontend Masters course on my own time. I am not supported in frontend aspect at current company because my role is not touching much of it at all. So am on my own with regards to this.

I am currently building an integration, solely owning the project and it is quite interesting but at the same time, due to remote work, I find it hard to reach people out and learn from them. So, I am wondering if experienced people would have advice how to go from average mid-level to a good one in a year or so. Maybe get to senior level in 2-3 years from now. What are the qualities of a senior dev?

Edit: I value most advice I was given. Looks like the most sensible thing to do is ... focus on passing my probation and then focus on promotion. Best way to achieve it is to deliver and after that, discuss with my manager.",1589679152.0,2020-05-16 21:32:32
185,How do you vet a team before joining?,73,g9sa4p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g9sa4p/how_do_you_vet_a_team_before_joining/,32,"What is the process of vetting a team before accepting a job offer? How do you determine if they have a good work culture? By good, for example, I mean the team believes in helping each other out, teaching each other, and is given the time to do so; vs a hunger game-like scenario.

How do you determine if the team has a work-life balance for the long-term, sustainable productivity of the team?",1588126205.0,2020-04-28 22:10:05
186,Does anyone here read books?,74,f8m07f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f8m07f/does_anyone_here_read_books/,40,"This question is a little off-topic, but please bear with me!

I want to get into reading and to fast track myself, I'm looking for experienced readers whom are also in places where I hope to be in life some day (e.g. experienced developer). 

If anyone has a goodreads profile, can you share your reading collection? Thanks!",1582548277.0,2020-02-24 07:44:37
187,Devs with unusual jobs - what do you do?,71,eshauq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eshauq/devs_with_unusual_jobs_what_do_you_do/,40,"I saw a job ad the other day for a software engineer position with an automated greenhouse company. It was a 'field developer' role, where you'd be placed in one of their greenhouses way out in the country as a developer slash onsite support. It got me curious - what are some unusual jobs that developers here have found themselves in? You know, stuff where you're not sitting at some kind of desk throwing code into a repo all day.",1579752251.0,2020-01-22 23:04:11
188,What are the benefits of getting a master's degree in CS as a mediocre junior-level engineer?,74,jqfl3f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jqfl3f/what_are_the_benefits_of_getting_a_masters_degree/,69,"And what should I expect when I return to college for CS? What should I start doing right now to make the most of my education?

I've been a mediocre developer, graduated some 10 years ago with an unrelated degree, but still stuck junior-level on all fronts. Plus I couldn't get a job this whole year.

I fear I'm missing out on many opportunities by not enrolling for a CS degree. Yeah, I know self taught is another way. But I started doing that years ago. It's a very isolating experience with a lack of urgency and direction.  It definitely is the hard route and that hasn't worked out so well for me. 

**To the mods:** The words ""junior-level"" from the title might throw you off, but that just means I'm junior with respect to skill. I've put in almost 10 years into this work so hopefully this is an appropriate place to post, too.",1604885303.0,2020-11-08 20:28:23
189,More than an employee?,71,j50c8a,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j50c8a/more_than_an_employee/,46,"I love my job, I really do. The work is challenging and fulfilling, and I like my teammates.

I've gotten a lot of varied experience. I've worked in applications programming, web development, and robotics. I've worked as developer, sysadmin, and manager for an academic robotics lab. I've lectured in university in sensor, actuators, and data acquisition. I've worked on small teams and been responsible for every step from customer requirements, design and development, QA, deployment and delivery.

I love my job, but I feel like I can be so much more than just an employee at a company. I feel like I've got the experience to create something new and exciting, but when inspiration hits me, I fizzle so quickly. I might put in two weeks of half-committed work into an idea before I lose faith and wait for the next bit of inspiration to hit.  


I've jumped from a multitude of game ideas, an IDE, an online learning platform, various ITIL ideas, and more. Nothing sticks.  


Does anyone else cycle through this like I do?",1601852633.0,2020-10-04 19:03:53
190,What do you do if you’re the most experienced on your team and need help?,74,j0lnht,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j0lnht/what_do_you_do_if_youre_the_most_experienced_on/,36,"So I’m on a small team (5 devs) and 3 of them have come out of boot camps and the other guy is self taught. Self taught guy and I definitely have the most experience at this point so we try to protect our teammates from going down rabbit holes on tasks we (hopefully correctly) assume will be too challenging for them.

Occasionally, for me personally, I’ll get stuck on a task and spend a ton of time on it and maybe or maybe not overcome the blockers. Sometimes I feel like because I know I have more experience, and I know so many other sites have the feature I’m working on, that I should be able to figure it out. But I end up wasting time and only sometimes does it end up being worth the time investment. (Specifically working on a WYSIWYG text field with a few extra plugins and I honestly do not understand why this has always been challenging for me regardless of the framework I adopt— presumably you shouldn’t have to reinvent the wheel here but is that what everyone does??? I digress)

This creates some imposter syndrome and I feel like it may look better to my peers in these situations if I admit I can’t figure it out early on rather than waste time (were a startup so sometimes knowing where to cut losses and renegotiate features is the best course of action). Though honestly I’m not even worried as much about self image / setting the “right” example for my peers as much as I’m concerned with knowing how/where to find help when I myself get stuck. I miss having go-to brilliant people to lean on and I mean, I can post on threads online and hope people respond when I have specific problems... but only sometimes does that work. Do we just need to hire more senior talent? Like is that the takeaway? What happens if/when they get stuck on something? Surely that happens to all of us.. right??",1601213783.0,2020-09-27 09:36:23
191,Is it easier to get promotions in smaller companies?,71,in2z3f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/in2z3f/is_it_easier_to_get_promotions_in_smaller/,38,"5 years experience. Finished my undergrad in computer science, and joined a huge bank right away. They offered me more money than other no name companies, so I took it. 

Recently I took notice of the fact that there are a lot of people that are coming into the bank from smaller companies as managers and team leads. They generally start as a developer in smaller companies. It's easier to get promoted there, so they get leadership and management experience there. Then they pivot into big companies, like the one I work for, as team leads and managers. My qualm is not that they are lacking on the technical side -- rather, it seems like they have taken a more efficient, easier path to leadership. I am here, trying to be very good technically before even considering leadership, and they sort of bypassed all of this.

So, to people that started in big tech companies right after graduating - what is the path to management? Internal promotions are super competitive in my company, and I feel like this is the case in every big company. I need to develop leadership and management abilities, but I don't know how, because big companies 'bin' you. 

Should I move to a smaller companies for career progression?",1599348358.0,2020-09-05 19:25:58
192,What kind of tools do you use for documentation ?,68,i7y15l,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i7y15l/what_kind_of_tools_do_you_use_for_documentation/,51,"I know documentation can be a contentious issue for people. One camp believes that code+tests is the all the documentation you need. On the opposite camp, I use it as a communication tool with stakeholders.

I have been using these for many years:

* https://github.com/umlet/umlet
* https://www.websequencediagrams.com/
* graphviz
* wiki

New addition to my toolbox:

* https://diagrams.mingrammer.com/

I need a refresh of my tools. What do you recommend ?",1597202044.0,2020-08-11 23:14:04
193,Adopting Movie Production Practices in Software Development?,71,huhvsj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/huhvsj/adopting_movie_production_practices_in_software/,54,"Hi all, not sure if this is the best place to ask (I feel it is the most fitting from the subs I subscribe to).

I just watched the 6-part documentary on the Frozen II, and I found it very illuminating. I probably could've watched much more.

**Managing a big scale movie**

But what struck me as amazing was: Here you have a huge, creative project, 4 years in the making, several hundred people were working on it (one animator was to have said, it's possible they work a full work week of animation for 3 seconds in the movie - many things are even cut, after 2 months of work). Plus you have these different stages (music, voices, storyboard, first sketches, animation, details, lighting, music scores, sounds, feedback sessions, audience preview and so much more), some were doable in parallel, but some of course can only be done after the other because they explicitly build on top of each other. And one of the producers said something in the tune of: ""We've never missed a release date and we're not gonna start now.""

And they released the highest grossing animated movie of all time. On time.

**Can Agile / Scrum adopt some things?**

I thought to myself: In Agile / Scrum, developers say we can't predict a year ahead that Project X will be done. But what am I missing? What are the so big differences, that software development can't do it like a movie production?

In Movies, the date is set, and also the scope (and usually also the quality of the movie).

* Is it because movies are better scalable? (E.g. get more animators to work on different scenes as opposed to ""The Mythical Man Month""?)
* Is it because requirements keep changing in software development? Maybe the movie release date was only set much later in the process?
* Is this just the exception because Disney can attract the best in the world? (Similar to Apple when they released the first iPhone or iPod - not trying to diss Apple ;-) but when they released those products, people were blown away and didn't expect it at all - at least that was my feeling. I mean even multi-touch was something people ""whoa""-ed at.)
* Was this the exception and all the other crappy movies are the ones you would compare to super-buggy software?
* Are movies less complex? (From what I saw in the documentary, it seemed VERY complex.)

&#x200B;

If maybe someone could bring some insight or has some experience in movie production that would be awesome.

Or perhaps even show we a movie production books / courses that talk about the management of a big-scale (or even small-scale) movie?",1595263540.0,2020-07-20 12:45:40
194,How many companies have you worked for? Average length of tenure?,70,hgoq1i,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hgoq1i/how_many_companies_have_you_worked_for_average/,79,"I've worked for 4 companies, average tenure 1.5/2 years, senior engineer for 4 years.",1593269296.0,2020-06-27 10:48:16
195,FAANG senior recruitment process,69,f56c9z,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f56c9z/faang_senior_recruitment_process/,72,"Hi!

I've interviewed at a FAANG company and got invited for an interview day in their offices and I have about three weeks to prepare.

Right now I'm grinding leetcode since that's what the internet tells me to do, but I can't stop wondering if an algo problem is really something they would make a senior dev with 10 years of experience do. It seems like something that you generally would know fresh out of uni but lose as you work on real problems like system design or thread synchronization. 

Should I focus more on designing elevators and parking lots on whiteboards, or general devops knowledge (I'm applying for a devops role).

Anyone with first hand experience that can help me out here?",1581960644.0,2020-02-17 12:30:44
196,"I joined a smaller company expecting it to grow, but it refuses to hire new engineers. Should I leave soon?",72,jb0c7x,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jb0c7x/i_joined_a_smaller_company_expecting_it_to_grow/,46,"So I know I know. It's stupid to have joined a company expecting what its future was like without fully understanding what its present is like. This year I joined a smaller company after working at 2 larger companies because I was sick of all the bureaucracy and feet dragging those bigger companies did. I also wanted to expand my tech stack and this was a chance for me to do it. Actually, in my interview I misinterpreted their ""X number of people"" to be ""X number of engineers"" when in reality there were X/4 engineers and X was not a large number to begin with.   


I made peace with that because the other engineers there were talented people that I could still learn a lot from and they had a lot of experience with this stack that I didn't. However, since I joined, they've mentioned repeatedly that they were looking to hire more engineers and for us to submit any references if we had any. Trouble is, I wouldn't recommend any of my friends or past coworkers to work here. They turned down a number of people due to a lack of experience or because that candidate asked for too high a salary. It seems like they want cheap skilled labor in their non-so attractive job posting. Hence, it's been months now, the pipeline is completely dried up and we're still at X/4 engineers. We're hearing about how many more users we are accumulating at every town hall and that we're financially sound, but at the same time, we have so much tech debt and features to implement but we have nowhere near enough engineers to accomplish it all.

I'm thinking of leaving by next June if by then we still don't hire more engineers. We're reaching a point now where if one of us leaves, there won't be enough engineers to have one per session of the interview process. I'm not trying to fix a sinking a ship. Am I crazy?",1602709735.0,2020-10-14 17:08:55
197,Obsolete and weak skill set; not sure if I'm screwed or just impatient,68,gwjegh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gwjegh/obsolete_and_weak_skill_set_not_sure_if_im/,76,"I'm about to turn 35, and have a MS in CS and 11 YOE. However, 8 of those were in aerospace megacorps, so slow process and no personal growth. The last 3 years I spent at a smaller firm, where I was recently fired for having low output and a high salary.

I'm kind of a crappy developer anyway- I never learned design patterns in school, and had no need to in a professional setting. I think system architecture designs look silly and suspect they're just smoke and mirrors to enhance engineers' job security. My ""passion"" for the field stops at ""knocking out easy and medium Leetcode problems when I'm bored is pretty okay"". Being tasked with fixing a bug or diving into other people's code at work feels overwhelming and makes me anxious, and always has.

On the plus side, I have an eye for detail, so me trying to comprehend someone else's code is like looking at it through a cardboard tube. I can see trees but have no idea that I'm in a forest. I'll catch stuff like typos in code doc and variable names but fail to see that it's a sorting algorithm. Makes it really hard to jump into anything and accomplish things in a reasonable amount of time.

The last time I had to look this hard for new jobs, the word ""stack"" referred to the host of Unsolved Mysteries. Job openings I've found are full of jargon and technologies that sound made-up. I've tried learning some of these web framework technologies but they seem so unnecessarily complicated and bloated that it turns me off from trying to teach myself. I keep having flashbacks to FizzBuzzEnterpriseEdition. Why do you need 30 boilerplate XML files to achieve ""Hello World""?

I'm tired of telling people I know Java and having them assume I automatically know web tech like React, Angular, AWS, whatever. No-- core Java, period. (And no, that doesn't mean JavaScript.) I'm also good with C++, and made the mistake of putting my brief experience with embedded tech on my resume, now I'm getting every defense contractor blowing up my inbox because they think I'm a whiz at comm protocols or something and want to move to BFE. Now after being let go, trying to put a positive spin on a pink slip to prospective employers is making my arms tired.

Anyway, salt and snark aside, I'm really desperate to find something. What do I do? This isn't me asking what tech I should learn since I don't really have the time or desire to pick up new skills; I gotta find something ASAP since I have almost no savings and need to support a disabled partner who can't work.

I've been applying and interviewing for 3+ months, and I can't tell if it's my lack of relevant skills holding me back, or the pandemic causing a job shortage? Is there an equivalent to an old-folks' home for crusty, lackluster coders like me? What about lateral career moves? I do enjoy math puzzles and the like; my YouTube feed is full of Numberphile and the like. Mostly just something that'll pay the bills and keep me off of Reddit :)

At the very least I appreciate you taking the time to read my ranting. Not sure if I've overshot the ""wry humor"" and landed in ""bad attitude"", but it felt great to type out nonetheless. If you've got any advice it'd be greatly appreciated, otherwise stay safe and have a good day!",1591312625.0,2020-06-04 19:17:05
198,Subtle ways to let your higher up know that your manager is not performing,71,gs4v3u,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gs4v3u/subtle_ways_to_let_your_higher_up_know_that_your/,36,"No, I don't want to leave the company; the people here are really great. But we have this new manager ... that is exhausting to deal with! What do I mean by exhausting? Example:

* Tries everything or anything until something sticks - she proposed some process but has no idea how to manage them - we're just left clueless what to do and to ""figure it out"". Even when the process is written on some page, it is as if it's written so vaguely, you'd wonder what the heck we should be doing
* Indecisive e.g. we need to do task A, but task A is not tracked nor logged - ""do it when you have time"" she told us - but a few weeks later or months ahead, asked us why task A which is not done has led to breaking/ failures/ issues, etc. Suddenly, staff B gets the blame
* Keeps on asking us for solutions when the problem actually came from her own directives - if it were so easy, we'd already have a solution and probably, ""lead"" the team! 
* When we want to get her to help us with some blocker, she becomes critical of the ""root cause"" e.g. making passive aggressive remarks after ""proposing the solution""

I don't want to go to the specifics, but I'd like to ask for some advice:

1. How do I bring this concern of my to the higher up without sounding I'm about to explode?
2. Should I be subtle about it or just be forward?

Thanks  guys.",1590695552.0,2020-05-28 15:52:32
199,Starting my first day as a Software Engineering Manager - super nervous!,71,du3ven,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/du3ven/starting_my_first_day_as_a_software_engineering/,16,"Hi Experienced Devs,

This next Tuesday will be my first day as a SWE manager at a fairly medium sized company.

I'm trying not to show it but I am nervous as hell!

My career has been 11 years of being in the weeds coding, fixing problems, and coming with designs for systems.

I've mentored and helped other engineers before but you know, haven't been in charge of anyone's job before!

My team will be 6 SWEs, 2 TPMs, 3 SDETs, and 2 SQAs.

I report directly to the org's VP and she's given me profile sheets of each of my employees and there's all sorts of information ranging from their annual reviews, personality assessments, team-member compatibility charts, salary history, to notes from previous managers and HR, etc.

I didn't even know companies kept so much information about employees!

I also got a massive binder of their projects and budgets sheets for each about a month ago which I've become familiar with.

Do you guys have any tips? Has anyone been in this situation?",1573372333.0,2019-11-10 02:52:13
200,System Design Interviews,68,k6pvqd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k6pvqd/system_design_interviews/,12,"I've got a system design interview coming up and I was hoping the more senior engineers could help with some questions that I have.  I believe that I know what my problem is when it comes to system design interviews.  I tend to just jump right into the solving the problem and never gather information about the system.

I've gone through a bunch of ""popular"" youtube videos to learn how to solve system design questions.   
 I've also spoken to friends about this problem and the general consensus has been to ask investigatory questions.  That is a bit open ended for me and left me with more questions than answers.  My question to the group is,

What sorts of investigatory/information gathering questions do you ask when initially approaching a system design interview?",1607133334.0,2020-12-04 20:55:34
201,Dealing with leadership who only respond to assertiveness?,69,hzedu2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hzedu2/dealing_with_leadership_who_only_respond_to/,35,"We have this development lead (working with the person  for 3-4 months now) who seemed to be super assertive i.e. decisive, blunt and can be somewhat intimidating (but not bullying kind of way). The person can be stubborn as well and talks fast. There is a hint of aggression (e.g. loud talker) but not bad that you need to talk to HR. 

Some of us figured out that one of the many ways to get through to the person is to be as assertive as well e.g. blunt, stand their ground, etc (without going into details e.g. code review issues, build issues, unit test failing and the reason behind it, etc.). It actually did work and the lead listened and took action where necessary.

But I'm not too sure if this is the way to deal with this type of leadership. Some of the team members are not so assertive and can be hard to bring that out from them. Some are very quiet and some may just quietly resent this sort of thing ...

We'd like to talk to our manager about it but have no clue how to talk to the manager on this particular lead's  style of leading the team.

Any advice from the experienced devs is highly appreciated.",1595970666.0,2020-07-28 17:11:06
202,How to address bouts of micro-procrastination ahead of daunting epics & tickets?,71,goonn6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/goonn6/how_to_address_bouts_of_microprocrastination/,29,"Hi all,

I currently work on a large team of full stack engineers and we work on a complex rules engine based semi-monolith. Each team at the company has their own service boundary, which might span a monolith, a micro service, or multiple of either or both. My team has one, and it integrates with other team’s services and they integrate with it.

The goal of the system is to optimize our users’ efficiency. This means either improve the performance or UX of the app, or build features requested by the customer that enable the customer’s faster workflow to occur. This results in many complex epics going on simultaneously and lots of cognitively demanding days. We still manage to work 40-50 hours a week, but during those hours, we really need to be efficient to keep it that way.

In regards to me, I am adapting just fine to this. It’s my 2nd real SWE job at 25 and I’ve come in with a solid level of experience (about 9 months prior, + various internships, but this job counts for way more). However, one thing I’ve always struggled with in school was procrastination. It’s not a major problem for me anymore, especially when my job is on the line. But I always get this temptation to procrastinate whenever I know I’ve committed to a particularly involved epic (not all of the tickets within it are just for me to work on, but I need to at least understand how the tickets fit together as a whole). When it’s time to start coding, sometimes I notice myself wasting time fearing the work, when i could have been reaching out to the team for assistance. This also occurs between demanding tasks. I might get through some demanding code, then need to transition into writing the tests, which is often equally or more demanding. Next thing I know, someone slaughters my PR and I need to rework it. Then understand or write failure modes / test plan. Manual test - data setup with or without the UI is insane. I suppose this is because the business logic and integrations become so overwhelming. And I don’t want to be caught not knowing something I should’ve known already, but did not retain because I procrastinated at some point in the past. I’m 9 months in this job and everyone on the team as well as leadership recognize that it’s very tough. We get a lot of slack cut out for us for when shit isn’t at 100%, thankful for that. This is probably the single thing keeping the team from burning out, along with actually unlimited PTO.

This problem hasn’t affected my job performance at all, likely because ramp up is understood to be a long time, but I feel it maybe starting to. How do I fix this bad habit? One thing I’ve noticed in the past few months is that the more cognitively hard things I do in/out of work in a day, the less this problem occurs. Probably because the more I practice choosing cognitive pain, the easier it gets to keep choosing it. And once I start, things snowball decently well. But it’s one of those things that never goes away and needs constant check ins with.

I guess another way to get at what I’m trying to understand: how do I go from relatively accidental and inconsistent emotional regulation to optimized, intentional, consistent emotional regulation with respect to dense SWE work? Aside from diet, exercise, etc. What I’m looking for are modalities for executing cognitively demanding work consistently.

Anybody else deal with this and do what I do? Any tips or advice?",1590200089.0,2020-05-22 22:14:49
203,"Working with Offshore Contractors, I can’t help but feel they are setting me up to fail. Am i being ridiculous?",67,fyiupp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fyiupp/working_with_offshore_contractors_i_cant_help_but/,25,"I’ve been in the SF startup scene for about 5 years, this is my third role and the second time i’ve had to work with Eastern European contractors.


I’ve been tasked with taking over a system built by one of these contractors and my manager suggested working with him to learn the system. So far it’s been like pulling teeth. questions that I message or email him get ignored, code reviews get ignored. I’m going to bring it up to my manager if it doesn’t change but this sucks.


In a previous role i worked on my company’s mobile app with two East European contractors, and it was basically the same story. They would ignore my questions and simply approve each other’s code review while putting mine off till the last second. When they would review my code it would generally be nitpick style comments littered throughout the PR, and what was commented on would be the same things they had ignored in each other’s PRs. In standup with the manager and pm they would blame me for any delays in delivery or any production bugs even if it’s unrelated to code i had pushed out and in fact found to be caused by their latest code merge. I had to leave because it was persistent and no one heard my concerns. It’s honestly exhausting.


My question is, am I overthinking things here? Or is this common among engineering contractors, this idea of protecting their knowledge and subsequently their job security? If so how do I best navigate this kind of situation?",1586564168.0,2020-04-10 20:16:08
204,Career progress of mediocre devs,66,jw98v0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jw98v0/career_progress_of_mediocre_devs/,72,"How (as a mediocre dev) did you progress in your career from a Sr Dev to Lead Engineer, Architect or a manager?

I am a mediocre developer (Sr. Software Engineer) - with not so sharp tech skills- honestly, all my team mates are smarted than me.",1605702824.0,2020-11-18 07:33:44
205,Note taking?,68,fsmgf8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fsmgf8/note_taking/,79,"I was curious how others feel about note-taking. I've gone back and forth, at this point I am at my most extreme. I use OneNote and keep a daily work log, as well as topical notes in various sections (what they call a tab in OneNote). Bugs I've been assigned and my personal thoughts on their priority and what to do about them, chunks of logs or debug output, I cut and paste parts of conversions in Slack. Implementation ideas, workarounds or tricks I've found, everything goes in here.

I find it makes my life so much easier to have a single place to look for things. Instead of trying to remember what Slack channel I had a conversation about a topic in (I find search in Slack to be too noisy to be much use - too many results), I have it right in the same notes I put in things I've talked about or notes from a meeting.  I know a lot of engineers use a paper notebook, but for me this being searchable is a major benefit.

Frankly I'm kicking myself I didn't do this at this level of detail in my past jobs. It really helps with knowing what I did day-by-day. Also, keeping track of what interruptions have come up that kept me from doing my planned work. It's a lot better to say at a meeting ""I didn't do X because Y came up with a higher priority"" than to try to remember two weeks ago on a particular afternoon what interrupted my work on X. And at review time it's great to skim day by day and month by month and remember exactly what I did when.

Does anyone else do this, or does \*everyone\* do it and I didn't notice? :)",1585721182.0,2020-04-01 02:06:22
206,Question about career goals: should I have them?,69,f7bels,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f7bels/question_about_career_goals_should_i_have_them/,55,"I haves bit of a non-technical question that’s been lingering in my mind for more than a week now. 

Last week, I was talking with my coworker / desk mate and we were on the subject of goal setting. 

I asked him about what his career goals were, and he laughed and told me that he has none. When pressed for more info, he said (paraphrasing) that he takes a lot of pride in his work and doing his job well, but that he has no desire to become manager / VP of whatever, or make X amount of dollars: he was just here to have fun and keep doing what he’s doing. If you just focus on doing your job, do it well, and continue to serve and build relationships with the people around you, then the rest doesn’t matter.

He is senior to me by a good 20 years. I’m 33, and I found this view of having no career goals to be utterly counter to everything that I understood about professional life. However, I can’t shake this feeling that this is actually a really healthy and enlightened point of view, and I hope one day to just be content with everything I have and do and not feel the need to be chasing title or money or whatever. I also strongly believe in this idea of if you focus on taking care of the things you are responsible for (your job), then good things tend to happen.

So what do you all think re: the idea of career goals? Do you have them, and if so what kind of goals are they?",1582322103.0,2020-02-21 16:55:03
207,What does mentoring looks like?,66,k82fkn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k82fkn/what_does_mentoring_looks_like/,9,"I’ve been in the field for 3,5 years, I still have no idea what mentoring looks like. What does mentoring looks like to you?",1607318714.0,2020-12-07 00:25:14
208,Should I quit my well paid job to work on my pet projects full time with a hope of them being financially successful?,71,iwdowh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iwdowh/should_i_quit_my_well_paid_job_to_work_on_my_pet/,94,"Hi!

I'm a 27 years old Android developer with a bit of backend+frontent development knowledge, have been working for about 8 years as a dev.

For the last 4 years I've been working at a company which is considered to by in the top-5 in my country by prestigiousness, wage and quality of work tasks. When I was starting as a dev, I considered working at such a company as an unreachable goal.

&#x200B;

But I'm getting more and more tired of it with each month.

There're many reasons, most of them could be generalized to next idea - I don't feel that the projects I work on belong to me, even partially.

There're lots of other developers around, which together bring life into the projects. And a lot of them spend more than 40 hours a week on the projects, which empowers them to develop cool subprojects, refactor entire subsystems, obtain ownership over them.

I, on the other hand, prefer to spend my spare time on my Android pet project, which is being developed entirely by me and I'm putting my soul into it.

&#x200B;

And here comes my dilemma - I really want to be interested in my job and want to feel like one of the work project owners, but to do that I'd have to spend a big chunk of my spare time on it, which I did during the first year in the company, but no longer want.

Since with each month my interest more and more departs from my job, I figured that it's the time to change something.

At first, I moved to another team with other stack of technologies (backend + frontend instead of Android), but it didn't help.

Now I'm thinking about quiting the job alltogether and instead of looking for a new one, I think about focusing on my petproject, working on it fulltime at home.

&#x200B;

But I'm not sure if that idea is actually good or terrible.

On one hand, I've saved up enough of money to live 6-12 month on it without a job. And I hope that if I would focus on my pet project, it would become financially successful at some point.

On the other hand, the probability of a success is not very high. I don't really have money to hire other people, not sure if I'd be able to afford broad advertising, don't have any experience in business, am able to continue working on the pet project during my spare time and I'm far from alone at being a well-paid developer who doesn't really like their job but work only for money.

&#x200B;

Have you ever been in a similar situation? What are some pitfalls I should know of and points I should consider before making the decision?  


EDIT: thank you everyone for your advice! Now I see how short sighted I am and which direction I should take if I want things to work out safely",1600636689.0,2020-09-20 17:18:09
209,Push for more responsibility vs. focus on family?,68,iikcjs,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iikcjs/push_for_more_responsibility_vs_focus_on_family/,51,"I’ve been at the same company as a senior software engineer for 10 years. I am a generalist dev and have been the same dev level at my company for the last 8 years or so. I’ve been trying to take on more responsibilities and take initiative on prototyping and new efforts at work, and it’s resulted in some interesting projects, but no new formal roles/responsibilities.

Lately several of my colleagues are leaving our team for new roles that give them more visibility or higher dev levels, and I feel left behind. We are going to have our yearly performance reviews soon and I want to make a case for more formal responsibilities. I want to lead a project or even move into management or tech lead roles.

My conflict is that my home life would suffer and I worry about taking time away from my family. I have two young kids (6 and 4), and they always want to play with me—I hide out in my home office, working all day and as soon as I step outside for any reason they’re all over me, wanting to play.

And the truth is I love my kids and my wife and love spending time with them. I don’t want to neglect them. My kids are always asking me questions about the world and what I do and constantly say they want to do what I do when they grow up (write C++ and fix bugs, lol). I’ve even been doing Swift playgrounds with my 6-year-old and he’s _getting it_. It’s exciting to see them learning and growing and I want to be there for it, especially before they discover Fortnite and Minecraft and want nothing to do with me :O

But if I push for more responsibility at work (and succeed), that means I’ll be working more and will spend less time with them. The truth is my wife already stresses with how little time I’m available. She says she supports my efforts to grow in my career but I get enough comments from her that she bears most of the brunt of the kids and household that I fear our relationship would suffer if I weren’t as available. As it is I work a basic 9-5 and in the middle of the pandemic it feels like she needs me to be more present than before the pandemic. I understand, it’s hard being with two hyper-energetic toddlers all day...

Has anyone been in this position before? What have you done? Is it about finding a balance between personal ambitions and devoting myself to my family? If you chose to focus on your career, what made it work? Thank you in advance!",1598695592.0,2020-08-29 06:06:32
210,4 years of experience and I still feel like a Junior developer...,66,ekenhi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ekenhi/4_years_of_experience_and_i_still_feel_like_a/,40,"I've been in a small company for 4 years without previous experience and without a mentor or Senior that guide me. We are 3 developer in the same situation as me. So we didn't learn good programming practices. 

We work with J2EE, JPA, EJB, Servlets, JavaScript, HTML, mercurial and MySQL, that's all. We don't even use tests, we never meet a deadline, we have a lot of bugs in production... But we still survive as a company. When I see another companies, they use TDD, Jenkins, Scrum, Sonar, Docker and many others modern technologies. 
I should have left this company 3 years ago and have went to another professional company where I would have learnt better programming practices...

Now I would want to change in order to be a good professional. What steps should I take to be a Senior by myself learning in home?

I'm afraid of doing job interviews because I feel I have very poor skills that make me be so nervous...

I'd like to see from the beginning to end a complete java project with the best practices and technologies and understand why the team have used a specific design pattern... But I don't know where to find that, I only find the typical small tutorials for a specific technology.",1578268282.0,2020-01-05 18:51:22
211,Observation:Local Salaries Have Cratered.,68,h888ov,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h888ov/observationlocal_salaries_have_cratered/,65,"I was researching local jobs and  salaries at the end of last year to both see what I should expect when they told me what my raise was going to be and to see what type of resume driven development I should be doing over the next year. 

I found then, for my local market - big east coast metropolitan area - that the salaries were:

Overpriced consultants - $180K-$210K

Principle Developers/Architects/Team Leads - ie “adult supervision” (standard enterprise development jobs) - $150K - $170K

Senior Developers - $130K - $155K 

Out of morbid curiosity, while I was waiting for an offer for a remote job, I was still looking at the local job market and responding to recruiters. I found:

Overpriced consultant roles - disappeared completely. 

“Adult Supervision Roles” - one recruiter reached out to me wanting a “senior full stack developer” who had at least 7 years of experience with .Net and knew AWS. They said the job paid $130K. I asked her was there any room for negotiation, she said no. 

Senior Developer roles - $110K - $120K. 


I didn’t see salaries crater like this between 2008-2011.  But, they were also a lot lower to start.",1592086236.0,2020-06-13 18:10:36
212,What does the average FAANG developer do next?,66,f1i60c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f1i60c/what_does_the_average_faang_developer_do_next/,52,"I had an experience of getting recruited to a midsize startup via a hiring platform. Like many companies, they mention ""smart coworkers, former Google/Facebook"" et al. On the platform I had selected that I was looking for opportunities >$200k; all in, including equity, the offer came in under $160k. I tried to negotiate as that's less than I was already making, and they mentioned they couldn't really do better since they don't want to upset the payscale.

Anyway, it was unpleasant experience as I wasted a bit of time, but I've started the hiring process at a couple FAANGs and I've been thinking more about it; a lot of these companies have a reputation for turnover and I was wondering what the typical experience is for FAANG employees who move? I imagine some stick around for a while, some move to other FAANGs or other companies that pay similarly, but a lot seem to go to startups. Do they just take a big step down in comp? What's the deal?",1581324023.0,2020-02-10 03:40:23
213,How do you handle finding a new job and maintaining relationships with your managers?,66,kchqj9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kchqj9/how_do_you_handle_finding_a_new_job_and/,32,"I've been working at my first job for about 4.5 years (Dev III in Eastern Canada) and changed managers a few times, recently I've started sending out my resume and booking interviews. (outside of work hours). I started sending them out because I was feeling a bit unsure about my performance and wanted an objective view on if I was good enough to be hired somewhere else, hopefully it would help my imposter syndrome a bit.

My manager confronted my over chat by asking me how my interviews were going while mentioning a time I'd been out of office the day before, I hadn't had any yet but they insisted they just wanted to be kept in the loop if I were looking elsewhere. Since I'd been at a dentist appointment at the time they were talking about, I forwarded them the insurance information with the date on it and they didn't mention it again. Since then I've felt kind of on edge about if I was doing this job thing correctly or if I'd made a major misstep in the way I'd went about it. I'm now looking for jobs and taking interviews with the intent of moving on, I'd like to make sure I am doing this respectfully.

Please let me know if there is another place where this post would fit better!

Edit: Thank you so much to anyone who has replied, I feel so much more confident in my decision. I've learned a lot too! This is a great community",1607919118.0,2020-12-13 23:11:58
214,"To full-time programmers who transitioned to the management ladder, how do you keep up for promotion?",65,j7bv55,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j7bv55/to_fulltime_programmers_who_transitioned_to_the/,30," I am working for 6 years already in the company I'm currently in. I got an offer in a managerial position in my 3rd year and grabbed it. Since then, my time for programming was lessened, until I felt like I have slow progress in the technical world. Now, I am holding 3 job titles. Software Developer II, Bugs Manager (same as Product Owner but focused on bugs management and prioritization), and Process Owner (leading a mini squad and focused on managing people). I just felt like promotion in managerial is quite slow compared to being in a technical position.",1602187714.0,2020-10-08 16:08:34
215,[meta] Should we have a resume review mega-thread for the experienced developers?,63,i076kk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i076kk/meta_should_we_have_a_resume_review_megathread/,28,"I tend to notice that more experienced people, especially those that lead others, focus well more on content than just presentation. They are usually less nit-picky of things that are less critical (such as the size of font that you use) and more about the big-picture view of your experience.

In this sub, you can get a higher proportion of experienced people evaluating your resume from what they know of other employees, rather than from a student seeing other student or intern resumes, or intern-to-intern/entry level standpoint. Would any people here find such a thread for resume reviews helpful if you're seeking jobs? 

Seeing how other experienced devs display their career can be helpful too, more relatable here than resumes that are mostly just student work and internships. I think the thread could be refreshed/replaced once a week at the most, or maybe every two weeks or every month depending on how much activity happens on the thread.",1596080501.0,2020-07-29 23:41:41
216,Weekly Reports which don't make you want to die,61,gdfi8z,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gdfi8z/weekly_reports_which_dont_make_you_want_to_die/,87,"TL;DR: Board want weekly reports from all devs. I have to make this happen. What is the least-worst way to do this?

So there's a trust issue at my current work, i.e. the board look at how much they pay for software development, and they want assurances that the dev team are not a bunch of useless cowboys. 

I'm the team manager and I've hired these guys and I am confident in their abilities. Not everyone on the team is a superstar, but they are all competent and I am reasonably sure that I have a handle on what the issues are.

However, as a result of these trust issues + some recent poor results, they want more and more reporting. They now want weekly reports from *every team member*, because they are under the impression that some people are slacking off (and clearly don't trust my assurances that they aren't. My predecessor had the same issue...). 

I am of the opinion that it's a waste of developer time - I know they're doing things because there's a *Jira board* with weighted issues which are assigned to people and I can at any time look and see what's being worked on. However, they weren't going to accept push back against this and they CBA using the Jira. 

So, what is the least-worst weekly report format you've done?

Alternatively, any good Jira Next Gen Software Project plugins you've used to do this automagically?",1588640831.0,2020-05-04 21:07:11
217,"Every programmer occasionally, [...] opens up a file on their computer [...] and weep at their beauty",65,g8t2e4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g8t2e4/every_programmer_occasionally_opens_up_a_file_on/,48,"A quote from stilldrinking.org  


>All code is bad  
>  
>Every programmer occasionally, when nobody’s home, turns off the lights, pours a glass of scotch, puts on some light German electronica, and opens up a file on their computer. It’s a different file for every programmer. Sometimes they wrote it, sometimes they found it and knew they had to save it. They read over the lines, and weep at their beauty, then the tears turn bitter as they remember the rest of the files and the inevitable collapse of all that is good and true in the world.

&#x200B;

Curious fellow seniors, what are some samples of code you marvel at?",1587988175.0,2020-04-27 07:49:35
218,How much job hopping can I get away with?,66,g8heeh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g8heeh/how_much_job_hopping_can_i_get_away_with/,42,"So, here's a brief overview of my resume  


18 months as a government contractor, I left that job for  
12 months at a start-up. I hated it there, it was poorly run, and I was constantly being blamed for everything (and received no onboarding). I was fired from that job, and immediately got a job at  
18 months at a big corporation. I really enjoyed the work there. I was challenged, but not overwhelmed, and I learned a lot. Unfortunately last November, they had massive layoffs, and I was one of them.  


In January, I started work at a non-profit (with very secure funding). I feel like I'm not being challenged as much as at my old job, and I'm not really being forced to push myself. I'm considering switching to a job more like my old one, but I'm worried that if that doesn't work out (like, I get laid off after another 18 months or so) then my resume will make me seem like a chronic job hopper.  


How much should I be worried about this? How much do people care about whether or not you're a job hopper, and how much leeway do you have to change jobs without being labeled?",1587947597.0,2020-04-26 20:33:17
219,"Name some ""Core"" skills you would expect...",67,ctporo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ctporo/name_some_core_skills_you_would_expect/,35,"Hypothetically, a dev with 5 or 6 years experience. What are some foundational or core skills you would have expected them to gain over those years?",1566462516.0,2019-08-22 04:28:36
220,Musings on the winds of change...,63,jmr745,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jmr745/musings_on_the_winds_of_change/,76,"Doing some reflection, it seems that it is really easy to lose track of just how rapidly things have evolved over the past six years in system development across the board.  As a developer I remember in 2014 working on the mobile systems space and pushing myself through learning objective C, followed by understanding android programming with eclipse.  Then things pushed forward rapidly into swift and android studio, rendering much of that knowledge redundant.

Moving into the microsoft space, I worked for a company that primarily was on .NET Framework MVC 4.5 and had to learn about gulp, razor syntax, jquery, and all sorts of old classics, only to have it all swept under the rug by .NET Core 2.x and eventually 3.x.  Combined with SPAs becoming much more common and front end frameworks like react / angular quickly taking up the presentation layer, it feels like that work done previously is already rendered moot.

Looking at even the last half a decade, it really makes you wonder if things will ever start to settle down and people coming out of college can actually get some more value out of the coursework they have.  The statement that ""the only thing we can do is teach you how to learn"", ended up being more true than I'd ever wished to believe, and to be frank I can see why sometimes that person from a code camp could genuinely compete with someone that has a 4 year degree.

Maybe all of this change is really just due to the shift to open source support.  Soon we will have .NET 5 and it really makes you wonder where we will be in 20 years from now.",1604364854.0,2020-11-02 19:54:14
221,How do y'all take care of your eyes?,66,hnblm6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hnblm6/how_do_yall_take_care_of_your_eyes/,59,"Recently I have noticed my eyes have become quite weak, there's still many decades for me to work in this field. Do you have any tips/advice or habits that you follow?",1594216562.0,2020-07-08 09:56:02
222,Pros: young dynamic team. To devs above 40 addressed.,69,hc1db1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hc1db1/pros_young_dynamic_team_to_devs_above_40_addressed/,40,"It's not the first time that I see either in a position description or a company review, exactly in the Pro's section, the following passage: 

*Pros/Perks: young dynamic team.* 

Is it a sort of a ""clandestine"" message to anyone who's not exactly young that they'd rather not apply in order not to spoil the idyll? Honestly I cannot imagine anything like these passages 20 years ago. What do you think about this? Are you seeing the same? Do I perhaps misread the message?",1592604683.0,2020-06-19 18:11:23
223,"In your experience, how are salaries negotiated for remote positions?",63,grka8c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/grka8c/in_your_experience_how_are_salaries_negotiated/,35,"I'm being considered for a senior role, to work remotely. I believe this company has a few hundred employees, and many are remote. The company is based in San Francisco. I am in another country with similar standard of living, but lower COL than SF. I am wondering whether I should target a salary according to the company's location, or my location.

Basically, in your experience, do companies pay according to the position (i.e. all employees of the same level are in the same pay band)? Or is the pay band affected by the particular market the candidate lives in?

I understand different companies may take different approaches, and even a hybrid approach is possible. I'd like to hear from anyone who has been through this process. Thank you!!",1590616941.0,2020-05-27 18:02:21
224,Company’s direction with offshore development,64,f4aoyw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f4aoyw/companys_direction_with_offshore_development/,46,"Hey all,

I’m currently working at a Fortune 500 for awhile and the direction of the company is that they will not be hiring developers in America and they will continue to expand our existing India office. They want technical leads and business analysts to be on shore to interact with the business while development will be done offshore.

Because of that, I’m already feeling the backlash  effect. For example my scrum calls with my offshore team is at 7 AM, project meetings are held early in the day between 8-10AM. And despite our office not doing direct hiring, we’re bringing contractors into our American office (i.e. bringing folks who worked on our system offshore and bringing them here on a temporary visa). 

My question is this sustainable and is this the norm with other companies as well?

Thanks all",1581808590.0,2020-02-15 18:16:30
225,Something I Haven't Seen Before,65,adr2n9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/adr2n9/something_i_havent_seen_before/,10,"I was browing newly listed jobs at Apple today, and saw that there were some listed as [""Return to Work"" positions](https://jobs.apple.com/en-us/search?search=return%20to%20work&sort=relevance). Essentially, the duration of an internship-ish (17 weeks). Here's the blurb from one of the descriptions:

> Returning to a career after extended time off? Welcome back — and welcome to Apple. Whether you took time off for your family, military service, education, health, or a personal passion project, we value your entire life experience. After all, Apple’s culture depends on a wide range of talent and perspectives. It’s our diverse collective of thinkers and doers that makes innovation possible. That’s why we created the Apple Return to Work program. It features full-time, paid 17-week returnships that provide mentorship, professional development, and networking opportunities, as well as employee benefits. Eligible applicants will have at least five years of relevant work experience and have taken a career break of two or more years.",1546954371.0,2019-01-08 08:32:51
226,What advice would you give to developers whose career isn't doing so well and they wish to start life again from college?,65,k3mwqo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k3mwqo/what_advice_would_you_give_to_developers_whose/,69,"I used to be making a livable income as a web developer (not even average, but okay-ish) but then I lost all that I've saved when I lost the ability to find more work. Now I just wish I had a better start. I didn't go to college for CS. Because of that, I did not intend to join a big corporation when I began my career, and all of my experience has been in small, financially uncertain places with incredibly outdated tech practices. Now I'm stuck spinning my wheels and looks like I caught myself in a vicious cycle where nobody gives a rats ass about ""potential"" or where you started from to reach out a hand and pull you up. It's completely brutal if you are a late bloomer. The pandemic was the final straw for me.

And yes, I know you can self-improve thru resources on the internet. But I'm gonna be blunt about that. 

**Self-taught improvement methods aren't for everyone.**

It only works if you know what you're doing. There are unknown unknowns for me. Personal projects burned me out, so did programing puzzles. Stakes are too low when you're not expected to pay for your food or home (like me).

Also it's lonely as hell. I made no friends in tech, and I miss real-time feedback and interactions with people.

To keep myself motivated, I signed up for a short prep course because it at least gives me an outside source of structure to keep me motivated to do something, and I didn't have to pay anything up front. But I wish to take it further by enrolling in college again. My goal is to be as marketable for jobs as the students that went to a target school and got multiple offers at big companies.

I don't need a CS degree to study fundamentals topics and get better at them. But I want to study for that degree because I want the quintessential ""model CS student"" experience and have serious FOMO about it, because you don't know when your life going to end. Might as well start working towards your goals and find a group that supports them all the way.

I feel it's easier to walk through the doors of a major company as a student with good grades and recommendations from professors, than mindlessly spamming resumes away from my bedroom as a developer with no good contacts and a resume of low-skilled jobs.

Did you go back to college to ""do-over"", or someone that you know?

I hope this is still really possible for me. To just flush everything and start with a clean slate. Empty LinkedIn, empty resume (relatively speaking, I will fashion my resume like a student pursing internships). Start a brand new life in college again.

Anyone feel me on this? How should I prepare for my big ""life reset""?",1606732063.0,2020-11-30 05:27:43
227,I feel incompetent. How can I change this?,63,jyb2px,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jyb2px/i_feel_incompetent_how_can_i_change_this/,24,"I have been a Python developer for the last 3 years or so. I have been at 3 different companies with varying successes. Most of the time I got burned out or bored and tried to find a different opportunity. I was never in a company long enough and/or prominent enough to get promoted.

Recently, at my current company we had a couple more senior people leaving who will be replaced by other developers at some point, possibly January. However, I can feel the pressure building up from the leadership to be the guy who will onboard new ones and also show some leadership qualities. But I do not want to. I feel like amount of responsibility and pressure is enough as is because we have a complicated system that integrates with various customers. Timelines can be tight and I found myself going towards exhaustion sometimes. In addition, the issue I got is that having joined 5 months ago, I still do not know the platform that well. So I kept asking questions more senior people to confirm that I do things correctly. Now that they are gone, I am on my own and that tears me apart.

I am ok developing software but am not above average technically. And not sure if I want to get much better and sacrifice lots of my life outside work. I also have burned out before and can sense it is coming without new tasks.

I decided to start looking for a new job just in case I get fired for revealing my incompetence. Is it paranoid or sounds sensible to you? I feel strong fear of getting let go and finally confirming it is not imposter syndrome but real thing - I am indeed incompetent.",1605995574.0,2020-11-21 16:52:54
228,What is the interview process like for well known candidates that are obviously qualified.,65,j9zxxx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j9zxxx/what_is_the_interview_process_like_for_well_known/,60,"So my experience is in Android dev and there are some developers I can think of that are well known in the community for being great. /u/jakewharton is an example. I'm sure they exist in all kinds of fields. 

&#x200B;

I'm sure the interview is mostly to see if it's a good fit but do they have to go through the leetcode and system design questions? Obviously they know how to design systems since they've done it in big products before.",1602566674.0,2020-10-13 01:24:34
229,Emotional Resilience in Leadership 2020 Report,65,imnf98,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/imnf98/emotional_resilience_in_leadership_2020_report/,7,"Found this posted on a Slack I'm part of. Some really interesting information for those in any kind of leadership function or are just straight up feeling burned out.

* [Slide deck (easier to digest)](https://drive.google.com/file/d/1KaPv-yVxjLb8b4WlF0nsAA5b6ftAsYw3/view?ts=5f3f066d)
* [Actual report](https://docs.google.com/document/d/12KezyYwED9Jtgv1I4qwZ6R1sG1E7S6fWXYgRQ8XpbNw/edit#heading=h.1viqdljiayy6)",1599279377.0,2020-09-05 00:16:17
230,Thinking on leaving a fast-paced environment I can't really adapt to.,66,imfuo6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/imfuo6/thinking_on_leaving_a_fastpaced_environment_i/,47,"I'll try to keep this simple, feel free to ask further questions if I haven't explained enough:

I've been for almost a year in this company. Since then, I've been feeling more and more frustrated with the flow of work, as everything is done on the go with almost no regards to code quality or even architecture constraints in a quick and dirty way that relays on some coworkers remembering where and why they did this or that. Business is happy, there's some few coworkers that are handling most of the design (on the go), and everything seems to be great for most of us save me and some other coworkers I've talked to.

Most of the issues I've brought up to my Team Leader were initially seen with good eyes, but nowadays are just being deflected: Is either a popularity contest (convince a team that is working blindly and amassing a huge pile of technical debt to do things in a more solid way) or just a simple ""is your problem"" (take on types of tasks that you should not be taking on because business don't care), all wrapped in too short sprints that give us no time for even a basic cleanup.

And honestly, I'm fed up with all of this. There's people who is fine in this environment, but I'm not. I'm already in a somewhat anxious state thanks to the covid and how that has fucked up my social life, but this race of continuous quick fixes and having to remember everything on the spot because WE ARE DESIGNING ALREADY is driving me nuts.

So, I'm actually asking here two questions:

* With all I've written, there is something I can realistically do to thrive in this environment? The biggest doubt I have here is if I'm so incompatible or is just me not being flexible enough after several years working on a way more slow paced environment. Honestly, here I feel like a foreigner when I try to convince people to think a bit before ""fixing"" a bug or use some tools to help with code quality.

* What should I look for in a new company to avoid this kind of environments? Everyone and their mother are doing agile, and I have the fear that almost everywhere else things are going to be similar. I do enjoy tech, writing code and all that crap, but for what I've seen, is either tortoise pace with people who don't care about the craft, or this. Honestly, I'm clueless on how to face an interview to find out on which side they are.",1599254630.0,2020-09-04 17:23:50
231,Transitioning out of development?,64,ih704u,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ih704u/transitioning_out_of_development/,73,"Hi all,

I have noticed myself getting more and more fed up with dev work as the years have gone on. I'm only 5 years into my career and I already know I'm not going to want to program for the rest of my life. I enjoyed it at first when that feeling of excitement and challenge still existed. Now everything just feels tedious and uninteresting. If I'm being honest, I was mostly here for the money anyways, which was more than enough to carry me through the day. As I'm getting older I've realized I don't really care about making an extra 40k a year and I'd probably be a lot happier in a different kind of role. 

I'm considering going back to school for a Masters to allow me to transition to something else. I was considering going for an MBA and looking into becoming the dreaded middle manager. I honestly think I'd be happier sitting in meetings all day keeping track of projects and talking to people than being on the constant dev knowledge treadmill. Does anyone have any suggestions or experience transitioning out of dev work? I'm not even sure what related fields I should be looking into short of a complete 180 like going into to marketing or something.",1598503338.0,2020-08-27 00:42:18
232,What's the opinion on leaving in the middle of a project that's doomed to fail?,67,hwuyjw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hwuyjw/whats_the_opinion_on_leaving_in_the_middle_of_a/,32,"Been at a position for about 2 years now, and currently working as the primary developer on a project to replace a 3rd party application that the Business relies heavily on that has a ridiculous deadline, no where near enough developers to meet said deadline, and very spotty requirements to where even if we get it done on time I'm not 100% sure it's going to fill the hole left by abandoning that 3rd party app


I've been workin 10-12 hours a day just to keep up and I feel like I'm starting to crack a bit


Should I feel guilty about finding a new position and walking away in the middle of this? Whats the general consensus?",1595592545.0,2020-07-24 08:09:05
233,Has anyone failed an interview due to tiredness and stress?,64,hpzs3u,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hpzs3u/has_anyone_failed_an_interview_due_to_tiredness/,68,"Hey all,

I had a virtual interview last week.

I had been preparing this interview for a long time. One day before this interview, I was dragged into an emergent issue in my current company and we were done around 2 am.

My interview was early in the morning so I had to get up early.

After the interviewer gave me the question, I could tell I knew how to do this problem since I've done so many exercises but my brain was not functioning. It was a weird feeling to describe. I would say my thought was stuck somewhere and I could not pull myself out of it. Not surprisingly, I did not pass this interview. I have been dwelling on this for the past week and I feel pretty bad about myself since I truly knew how to do it... I am also worried about how the interviews would view me since the question was super easy.

Any critical thoughts and opinions? Anyone else has been through the same thing?

&#x200B;

&#x200B;

Update July 14, 2020:

Thanks for everyone's input here. It does make me feel that I am not alone.

I will make sure for my next upcoming interview in August, I will eat well, rest well, and relax well before the interview. Best of luck!",1594608984.0,2020-07-12 22:56:24
234,Has your team been successful at tackling technical debt?,64,hmtigg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hmtigg/has_your_team_been_successful_at_tackling/,30,"   So you rush through everything to make sure things are delivered.   Product team has said that they're willing to make compromise to get the software out of the door.  But now after taking a lot of short cuts, you've decided to start planning for the future by creating technical debt for your team.  Now you're ready to start refactoring code, ready to start digging into some optimizations, ready to clean up the repo, and repair the busted CI/CD system.  However, guess what?  New priorities come up, and now you don't have any time to address the technical debt.

&#x200B;

I'm not going to lie to you.  I have yet, in my near 20 year career, ever seen a software team adequately attack technical debt.  The only time we ever address it is when the shit hits the fan, and you have no other choice but to address it.  This basically materializes itself in production, when that bug we talked about just surfaces.  Or when we need to be security compliant, and we finally have to start adding better security into our software.   So the technical debt now becomes part of the quarterly goals, taking away from actual feature development.

&#x200B;

So I have a few questions:

&#x200B;

1.  Has your team been able to tackle your issues with technical debt?  If so how?
2. If technical debt is addressed, is it addressed proactively or reactively?  Meaning does it get addressed before the shit hits the fan?  Or do you stop problems before they start?
3. If you successfully dealt with technical debt.  Was it through buy-in from senior management, product management, project management?  Or was your team able to address it internally?
4. Has technical debt bitten your?  Have issues arose that you were not able to address in time?  Such as security compliance dates, etc?
5. Have you gone to your boss or leadership about technical debt?  What has been their response?  Positive or negative?

&#x200B;

I would hope to hear so good stories about technical debt.  I find it's a huge problem for dev teams.  And as a dev myself, I'm always trying to think of creative ways of tackling it.",1594153253.0,2020-07-07 16:20:53
235,Looking for summer mentors to help students who lost internships due to COVID-19!,65,gotxap,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gotxap/looking_for_summer_mentors_to_help_students_who/,3,"Hello, /r/ExperiencedDevs!

I'm a volunteer with an initiative called **Summer of Shipping**! It's a program started by an Uber alum for tech students that had their internship cancelled due to the COVID-19 pandemic (myself being one of them). We are currently looking for experienced, quality mentors from this community to join us in helping guide & motivate our student builders! If you've been wanting to mentor student developers and have \~2 hours/week to dedicate, this is for you!

Our ultimate goal is simply to help our participants deliver great projects that will improve their resume and make them competitive as they begin to look for jobs. Despite the disappointment and uncertainty during these times, it's very encouraging to see that so many students are responding by building up both themselves and their portfolio with awesome projects. Having good quality mentors is *crucial* in achieving our objective, as they are the guiding lights that can provide invaluable insights.

For the past few weeks we have been meeting at 5 PM PST on Thursdays for presentations and demos. We just wrapped up **Week 3**, where students learned about scope and project management (check it out [here!](https://youtu.be/VMGIVJVysGk)) Several students and mentors also demoed their projects toward the end of the session. We have also committed resources to work on accommodating those in Europe/Africa/Asia by setting up a Friday meeting time!

In addition to improving resumes, we want to make sure our students and mentors stay connected professionally for the long haul. To that end, we are establishing our LinkedIn presence. We're consistently improving and intend for this program to become a great place to make connections in the industry.

If you'd like to help out by mentoring, you can sign up [here](https://forms.gle/ybJ7pdF5Q3axZbrbA)! Also check out our [website](https://summerofshipping.com/) and [Twitter](https://twitter.com/summer_of_ship)!

**Acknowledgements:** There have been other initiatives similar to this one looking to help students out. Shout-outs go to COVIDterns, Projects for Programmers, and Hack Your Own!",1590217538.0,2020-05-23 03:05:38
236,How do you evaluate candidate devs for their ability to learn?,62,gnkv3z,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gnkv3z/how_do_you_evaluate_candidate_devs_for_their/,62,"If I were to hire a new developer, I don't want it to be filtered by what HR sees in stack names or technology names. I don't want to run a trial of some coding challenge and algorithms. This is coming from my own experience here. I tend to just break my job down to good old problem solving, the ability to think on my feet and learn new things.

Unfortunately many companies disagree with this kind of evaluation and would rather care how well you know SQL or that you can invert a tree quickly. I have friction with these kinds of interviews and I would only qualify for a particular set of companies. I excel when I do things more ad-hoc than in a prepared manner.

I'm interested in seeing how test candidates for fast learning ability for this reason, because I don't see it being done enough. I'm looking for ""sleeper hits"" that look underwhelming and unassuming, not rock stars. Anyone have experience with this, and what have you tried that works?",1590043367.0,2020-05-21 02:42:47
237,Never Ending Chase for Better Opportunities vs Settling Down,65,gnc176,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gnc176/never_ending_chase_for_better_opportunities_vs/,42,"TLDR: Interesting Work + Good but not Great Compensation + Positive Work environment + Flexible Work Life Balance + Strong Job Security = Complacency?

&#x200B;

I'm trying to gain new perspectives on how I should view a career in the long run and consider your viewpoints on this matter.

I graduated college 2 years ago and currently, work in defense, luckily in an AI/ML research team. With clearance and overall job security (position is deemed ""essential"" + company is always hiring even during COVID), I would believe that I am not in any risk of losing my job and if so, would not have any issues finding a new one. The problems that I work on are certainly interesting/challenging, contrary to popular belief for working in defense and I enjoy working with my colleagues. Work-life balance is also very pleasing as I never feel pressured by deadlines, have the ability to work from home at times, and can take vacation almost anytime. Finally, initial compensation when I started was similar to those of my friends who went to FAANG (more if you consider CoL) since I had other competing offers at the time. I am able to save \~50% of my income while maxing out retirement accounts each year.

Recently, I was job searching out of curiosity and had received many interview requests from recruiters including some from FAANG companies. As usual, if I accept a position at a new company, the total compensation will be higher on paper, newer technologies, new connections, etc. However, I also know that uninteresting work, different colleagues and limited work-life balance may not be in my favor. I'm not against leaving my current job for a new and exciting opportunity but I am also very happy with where I am right now and feel no need to pack the bags and move.

&#x200B;

Ultimately, at what point is chasing compensation and company prestige irrelevant? I'd like to hear more insight from those who have job hopped maximizing their TC as well as those who have just stayed at companies for many years knowing that there were better financial opportunities elsewhere.",1590012687.0,2020-05-20 18:11:27
238,Burnout and lack of purpose,61,jvwpah,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jvwpah/burnout_and_lack_of_purpose/,32,"UK (not London) | 10 years experience | 36, single parent

I'm not sure if it's just 2020 being 2020, the effects of getting back to work with long Covid and 2 kids, working on a huge sprawling legacy Java codebase or if I'm just hitting the burnout stage but I'm just feeling completely exhausted and disillusioned with it all and in need of a change of some sort. 

I'm getting very frustrated with feeling like what I do has no purpose and it is something I think I am seeking. I've worked for financial software companies for most of my career (I have a heavy maths background in addition to BSc/MSc in CS) and it's hard to shake the feeling that literally nothing you do makes a difference. 

I have to change something... But what?",1605661459.0,2020-11-17 20:04:19
239,Is there a glass ceiling for non-FAANG engineers?,62,igmb21,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/igmb21/is_there_a_glass_ceiling_for_nonfaang_engineers/,120,"I have 6 years of experience and have worked at decent companies - a decently known non-tech corporation, various startups including in leadership roles - but never a top tier tech company. I never cared until now because I'd always been more interested in startups and webdev anyways and made what I thought was good money (eg. currently \~$200k/yr as a remote contractor, though more on that below), but now as I hit 30 years of age I'm wondering if this lack of a top tier name is a serious glass ceiling on my career/earnings potential.

I'm noticing that even startups tend to prioritize engineers from brand name backgrounds (at another startup I'm currently consulting for part-time, all the managers are ex-FAANG), and although I don't have data to confirm this, I'd imagine they're getting offered higher compensation packages than I am. At the end of the day VC's and non-technical executives are writing the checks, and the brand name seems to pull a lot of weight to them.

~~For example - I've been contracting for an early stage VC-funded startup where I basically built the product from scratch, but then 6 months later the (non-technical) CEO hired a ""Founding Engineer"" with equity who it seems will end up replacing me when my contract expires. I was always highly regarded by the CEO/team and praised for my work, but when I recently directly told the CEO I'd prefer to work full-time with equity, the CEO told me they'd get back to me about it but never actually followed up on it. My ""replacement"" has some better brand names on their resume, and a part of me wonders if I would've been taken more seriously if I had a FAANG on my resume~~

Ultimately I just want to put myself in a position where long-term I can make the most money with the least amount of bs and headache. If there's actually a glass ceiling on my earnings potential and career advancement due to the lack of a top-tier tech company on my resume, then it would seem like the smartest thing for me to do right now would be to drop everything I'm doing, go hard on Leetcode for a month or two, and attempt to land a job at a top tech company.

Would love to hear your thoughts on this. Is this all in my head, or is the reality that the market puts FAANG engineers in a class of their own, where they get to command higher salaries, more equity, better titles, and ""manage"" the rest of us measly non-FAANG engineers who are seen as relatively disposable?

**EDIT: I will pursue employment at a top tier tech company and grind out the Leetcode as I feel it will benefit my career more long-term than playing the startup lottery -thanks for the responses guys.**",1598422254.0,2020-08-26 02:10:54
240,Working with a constant fear of getting PIPed,63,htj235,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/htj235/working_with_a_constant_fear_of_getting_piped/,74,"Hi Everyone, I am a software developer with nearly 2.5 years of experience in a medium-sized company. I was initially interested in coding and was very enthusiastic before getting into the job.  I thought things are different, but the constant fear of getting PIPed is impacting my life, I am always scared and have lost interest in programming feeling kind of a burdened with work every day. Need some help from the senior devs.",1595117244.0,2020-07-18 20:07:24
241,What languages have you most enjoyed/least enjoyed working with professionally,62,gtejxl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gtejxl/what_languages_have_you_most_enjoyedleast_enjoyed/,111,"

I've been in tech 18 years,  13 or 14 years have been as a developer.  I had always been a hobbyist experimenting with languages in my spare time.  Here are the languages I've enjoyed working with professionally and the ones I've least enjoyed.


 Java:
 
I started my career in Java.  I started with Java and Weblogic running on Solaris with Oracle databases.  I guess you would called that the ""Oracle monolith stack"" lol.
 
One thing I hated about Java was the JVM.  It felt it was so hard to get JVM settings right.  JVM startup time has always been an annoyance.

And the Java ecosystem such as setting classpath.  While other languages have similar things.  I always felt it was way more complex in Java.

 And one thing I hated the most was reliance on IDEs.  I remember when starting new jobs I could spend the first 2 days setting up IDEs.  Because coding Java without an IDE are for masochists.

I did actually like Java in terms of community.    Architecting systems around Java was such a science that there were endless books and articles about the topic.  And the JVM is very flexible


Go:

I actually love working with Go.  And work with it now.  I hope to do it for the remainder of my career.    It's a pleasure to work with it.  And I love how doing things the Go way is completely different than doing it the Java way.  Things are meant to be pretty simple


While I do use IDEs in Go, its just to be more productive.  It's not like a crutch like it is in Java.  Like if I can't autocomplete or if I were locked into vi, I'd still be ok.

 One thing i don't like about Go at times is the lack of good libraries at times.  Also the lack of any real architectural standards with Go.  It sounds strange to say this, but it to Java which has volumes of literature written about design.

Granted Go is a much simpler language.   But I see a trend of GoJava and GoPython code bases springing up (no pun intended).

Also GC optimizations definitely leave a lot to he desired.  The inability to directly tune it is kind of a let down.  I do get that the language authors don't want to turn it into another Java.  But I still think that's a huge advantage Java has over Go.

And while Go is fast out of the box, it does have performance issues.  And while you do have tools like tracer, there arent a ton of other options.


I've also used Python but without Django.  So that meant my Python career was too short to comment on.  What have been your experiences?",1590875261.0,2020-05-30 17:47:41
242,Defining Rules for this Subreddit,61,fd6w1p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fd6w1p/defining_rules_for_this_subreddit/,71,"Hi All,

This subreddit has grown to 12k+ subscribers over 2 years. There are more and more people joining every month.

We greatly appreciate everyone's contributions and activity on this subreddit and want to continue to be a medium that fosters the extremely healthy and on-topic discussions that have been going on in this sub. 

However, spinning off of the meta post made [here](https://www.reddit.com/r/ExperiencedDevs/comments/f6a7t5/meta_time_to_crack_down_in_questions_from/) by u/nutrecht, he proposed to define:

> Clear rules on the type of content that is allowed and disallowed

additionally he proposed to:

> Close / lock topics from inexperienced developers, point them towards the rules and /r/cscareerquestions in a friendly manner.

It looked like the community generally was open to discussing these points in the proposal and so, let's collaborate and semi-formally define items in respect to the type of content on this subreddit as well as some working definitions of this subreddit:

1. What rules do we all want?
 - What type of posts should be allowed?
 - What type of posts should not be allowed?
2. How do we define what constitutes an ""experienced"" developer?
3. How do we define what constitutes an ""inexperienced"" developer?

We will keep this thread open for a week. After that, the moderation team will draft up minutes regarding items discussed and compile that into a list of provisional rules for this subreddit.

Then, the community will work together to short-list that ruleset and we will try out those rules for a probationary period of 3 months to see how things play out. If we need, we will repeat this exercise until we have best defined the rules that work for us.

Pinging u/nutrecht to hopefully lead the charge by providing some examples and suggestions of rules. 

Thank you all!",1583321360.0,2020-03-04 06:29:20
243,How many of you guys don't work with modern tech? And are you okay with that?,63,ergw7x,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ergw7x/how_many_of_you_guys_dont_work_with_modern_tech/,74,"Or are you afraid it'll hurt your prospects in the future? 

I just got a new job, and I don't work with React, or any modern JS framework for that matter. I basically update an already built CMS, sometimes code out landing pages and design e-news letters. 

Part of me is happy because it's the most I've ever been paid, it's close to home, has great benefits and everyone's been here for 30 years. It's easy. There's never a rush, I can work at my own pace. I have a five month old at home, I'm married and have a house. It's an established company that makes tons of money. 

Part of me worries though, because I wonder what my future holds, since I don't use any modern JS framework here. It's more of a half design, half coding position that focuses on marketing. 

I've never had the opportunity or pleasure to work with React or Vue full time out of seven years doing this. However my portfolio is filled with side react projects and side client react projects, because that's the type of work that helps me be employable, apparently. 

For guys in my position, do you ever wonder the same? Or does it even matter? 

Would love some discussion on this. Thanks in advance.",1579572167.0,2020-01-20 21:02:47
244,"Need Advice on moving on, growing, overcoming the fear and getting better compensated.",60,jz73g1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jz73g1/need_advice_on_moving_on_growing_overcoming_the/,50,"Hello Everyone. I am a full stack web dev (Microsoft stack) at a smaller company with just about seven years of experience and a senior title. The Work life balance/time off is superb, Boss/team mates are great, low stress, and benefits pretty good. However the pay is not as Steller and no where near where I thought id be at this point in my career (about 70k). I do enjoy what I do however work is work and salary is important to me and go hand in hand with my goals. I also feel that while I am proficient at my current job, being in a smaller environment with a more easy going dev culture I don't feel I am up to par on my skill level that I should be after seven years even with a senior title. 

So I am the point that I think I am ready to move on but have a few obstacles to overcome:

* I have gotten extremely comfortable and fear moving on because of the great benefits and culture and it makes me extremely hesitant to move on. I am not looking to be overworked or extremely stressed. I'm scared I might end up being miserable. 
* I fear I may not be good enough and or know enough that represents my level. I don't think I will do well in interviews. While I have a senior title, I think it will be hard to sell myself on what I have done as a Senior. I only got the title because I recently had asked for a promotion and that was the title given. I may be in for a big reality check when push comes to shove on my next endeavor. 
* While I am proficient at my job I have to be honest with myself. I don't spend as much time as I should learning new things or improving my skills. I did when I started but it goes back to being comfortable. I Just mostly do my job and keep up with what is required with some off learning here and there but never a real deep dive.
* I am not 100% sure where I want to go or what expectations I have for my next position. it May have to be one of those try it first things.


My Goals:

* Find a position that will help me grow skill wise that represents a more senior role and also so I can be more marketable for future positions and continue to grow from there.
* Make over six figures in the next few years (125-150k end goal).
* Become more invested in the work I do. 

My plans to achieve this:

* Start learning the skills I feel I lack or employers are looking for a few hours a week through reading or side projects.
* Spruce up on basic soft and tech skills.
* Prepare for interviews.
* Improve my confidence so that I can sell my worth.
* Make sure I have a goal in mind in terms of compensation and what exact type of work/position I'm looking for.
* Just do it, learn, and continue to pursue.
* Possibly do some leet code problems? Not sure if this is required. 

I like the people I work with and enjoy the work I do. I know some people would probably be completely happy with the job I have but I am ready for more. I think ultimately its going to take a behavior change in my self to put in the work and to improve. I want the big bucks but I have not done anything outside of what is required to make it happen. I have not really put myself out there yet but am starting to prepare. Any advice or feedback is appreciated. Give it to me straight. Will be happy to answer follow up questions.

TLDR: Work at a great company, but feel lacking in skills and salary for my title and years of experience. Want to move on to improve and get a better salary and continue to grow but feel I lack the skills to do so currently. Any advice or feedback is appreciated.

Thank you!",1606120171.0,2020-11-23 03:29:31
245,Boiler plate rejections,60,jcipsw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jcipsw/boiler_plate_rejections/,40,"Recently I interviewed for a position that included a take home coding assignment, then a quick call with hiring manager to see if my skills and expectations align with that of his team's. Later I was scheduled for a day long virtual interview which included 5 interviews in total. I felt I did fairly good in all except one. In fact, one of the sessions went so well we went over the time limit by 15 mins. I enjoyed that round and felt there were signs that the interviewer enjoyed that as well.

Result was a rejection which was not that hard to handle but what bothered me more was the lack of feedback. It was easily around 10 hours of my efforts including the take home test (which I enjoyed). The final feedback was that they're looking for someone more experienced and senior; which makes no sense to me at all because 1. I've more than 7 years of relevant experience and about 10 years in total 2. I made sure that the hiring manager knew everything about my current work and experience before we moved on. 3. I gave as accurate a resume as I can.

I've had around 3 different interviews out of which 2 were rejections for similar reason which looks like a boiler plate rejection. Only one company took the time to explain to me why the hiring manager didn't find me as a good fit. Is this how my time is valued? FML.",1602912884.0,2020-10-17 01:34:44
246,"Is ""code monkey"" work considered to be a career track separate from software engineering? How much of an overlap should I look for between the two things?",61,hdywul,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hdywul/is_code_monkey_work_considered_to_be_a_career/,49,"Many years ago when I was still a junior looking for another developer job, I encountered various types of companies for web dev work. They were all pretty similar though. First, they were all local- I had no intention of going to silicon valley or other hot spot for tech. Second they all are business-to-business endeavors that serve to consult on web-based solutions when these businesses lack the resources to do their own tech work, via third party CMS or other third party tools. Scalability was mostly a non-issue, and ""serverless"" meant pay another company to do the data center work and hosting. For a long time, I considered this to be the nexus of web development.

All in all the companies generally treated me well, even if I was rather underpaid. No surprise overtime work, no excruciating deadlines or ""impossible"" tasks, and co-workers were pretty reasonable and chill. But I don't know if I was really growing a lot technically since I was still a junior and didn't know any better. My only point of reference was a senior dev that lives in another country so he's hard to get a hold of, and a more experienced person that just does what I do but faster.

But now looking back as I apply for newer jobs I've been told my work background is very much of code monkey stuff. I have agency experience, but seemingly that doesn't make me marketable for anything other than more agency work. Sounds like a pigeonhole. Is this then, considered its own career track? Should I be looking for more overlap with software engineering, or is it respectable to continue doing this career track for most of my life?",1592882643.0,2020-06-22 23:24:03
247,Have you been in a situation where your years of experience became more of a liability than an asset?,58,jnit28,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jnit28/have_you_been_in_a_situation_where_your_years_of/,66,"And if so, what caused it and how did you resolve it? I can think of a scenario as simple as, you simply applied to a job you were overqualified for (non-junior who somehow applied to a junior level job) or something more complex, like being set against a higher standard just because you had some number of years of experience, and that ended up working against you. Has this happened to you at some point in your career, and how have you overcome it?",1604466261.0,2020-11-04 00:04:21
248,What should be handled in an API vs the Front End,62,hqe1fv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hqe1fv/what_should_be_handled_in_an_api_vs_the_front_end/,32,"I work in a split Backend and Frontend team - Front End being made in React, Backend in Java if that matters.

I’m of the opinion that the API should pass the data to the Front End in an already formatted state to consume. Some of our Backend guys say that we should be handling some of that stuff on the Front End.

For example, we used a D3 graph library that needed data to be in an array format. The data that the backend ended up returning was just one single hash object meaning I had to loop over the hash values and create a mapped array in the front end for the graph to consume.

Another issue is that if there is already an endpoint returning some specific data then they will make us make another call in the front end to get it, rather than providing the data we need in the new endpoint they are making in that sprint.

Example - we have a Cars bar chart, and the new endpoint returns the car id, type/model and quantity, which I then have to map so I can put it into my d3 graph lib.  I also need the car brand however, and they have said I can just get the brand from an existing endpoint which lets you get the brand by car id, once I get the id from the new endpoint.  I’ve done plenty Backend work before so I know it’s not tough to just add in the brand to the endpoint too, rather than make me have to loop over the data and make some new calls to a second endpoint and then map that data yet again.

I’m still fairly new with 2 years exp whilst these guys have 5+ so I don’t really feel like arguing it out with them - but am I wrong here or not?

I thought the Backend was supposed to do most of the heavy lifting and logic so that the front end can focus on just presentation.",1594670626.0,2020-07-13 16:03:46
249,How do you handle constant requests for status updates?,60,e8vhrb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e8vhrb/how_do_you_handle_constant_requests_for_status/,52,"Some common advice I hear is that it's important to communicate the status of projects you're working on. I understand that it's ineffective to hide out only to pop up every couple of weeks to declare ""It's done!""   

But I'm being overwhelmed by constant requests for status updates. For a while could get literally 20 requests a day asking for status updates from coworkers, managers, project managers, and other departments. 

For example, for a feature estimated to take 20 hours, I could be giving status updates every 1/2.  The person asking almost never has the technical background to understand the incremental progress made in a couple of hours, so my answer was always boiled down to ""it's not done yet."" and I would be reminded this feature was important and the client wanted it finished ASAP. 

My original coping mechanism was to limit responding to email to a couple times a day. Unfortunately I ended up with more people dropping by my desk.   

Next I stopped responding to requests that didn't come from my manager, reasoning it was my responsibility to report to him, and his responsibility to communicate with other teams and the client. This resulted in him stopping by my desk and reading me emails. Again, any response I gave was boiled down to ""It's not done yet"" and I would be reminded this feature was important and the client wanted it finished ASAP.  

**Edit:**
The ""root cause"" of the problem is this project is an order of magnitude more complex than anything the companies done before and everybody's (including mine) existing workflows are being stretched to the point of breaking. But there is nothing I can do about how others deal with the stress. I need to figure out how to keep getting things done in the current environment.",1576035545.0,2019-12-10 22:39:05
250,"As a senior developer, what are the key things you are looking at when choosing a company to work for?",57,dsyqu1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dsyqu1/as_a_senior_developer_what_are_the_key_things_you/,44,"As you know, there is a huge shortage of senior developers in the world. So, what are the things that you find attractive in a company (besides the salary, of course)?",1573166965.0,2019-11-07 17:49:25
251,How Kevin Scott Motivates Engineers at Microsoft,62,jd3zhc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jd3zhc/how_kevin_scott_motivates_engineers_at_microsoft/,23,"Lex Friedman asked Microsoft CTO, Kevin Scott, what it takes to run a company of 30,000 engineers.

Ambitious, smart engineers can go anywhere. How do you motivate them? How do you make them stay?

Kevin responded that it had to do with storytelling.

Not money. Not prestige. But with the right story.

And it’s always been like this. Not just for engineers, but for humans in general.

Stories make us come together.

Numbers can help paint a picture. Revenue up. Costs down.

But at the end of the day it’s the *words* that stick.

**Sapiens**

In his book Sapiens, Yuval Harari explains that humans are special because they inhabit a world created from their own ideas in addition to their objective reality.

He calls this our *fictional reality.* Things like money, nations, corporations - these are all things that we *invented*.

Take something like gold, for example. You can’t eat gold. You can’t even make weapons out of gold because it’s too soft.

So as humans, we take something with no inherent value like gold and we tell a story around it. We construct the narrative.

Think about the stories you tell yourself everyday. How much of them are based on your objective reality?

Instead it’s probably the case that your mind is preoccupied by what Harari refers to as fictional reality.

Stories are central to our evolution as a species. And it just so happens that this also holds true for companies.

**Apple**

Steve Jobs was a great storyteller because he focused on the *why* over the *what*.

In other words: he focused on fictional reality over objective reality.

Take[ this commercial](https://www.youtube.com/watch?v=VtvjbmoDx-I) for the 1984 Macintosh. Not until the last few seconds is there even a mention of what’s being advertised.

What often goes unnoticed is that these same principles are used to attract the best people at Apple.

The best people, Jobs states, need a common vision.

“*And that’s what leadership is. Leadership is having a vision, being able to articulate that so the people around you can understand it, and getting a consensus on a common vision.”*

And that vision needs to be reiterated. Constantly.

I’ve [written about this](https://www.careerfair.io/reviews/redesigning-apple-music-after-rejection) before, but one of the ways Jobs would do this is by creating a Reality Distortion Field.

The reality distortion field was a mix of Jobs’ charisma, his strong will to succeed, and an eagerness to bend any fact to fit the purpose at hand.

It’s how he got his team to meet crazy deadlines and how he convinced the best to work with him.

**Keep it simple**

Ask most people to pitch you their idea and it’ll probably sound really complicated.

The magic lies in making it sound simple. Compelling. Inevitable, almost.

Read most corporate mission statements. You’ll probably come away thinking “So what?”.

The details are important. The technology is important. The numbers matter.

But when it comes to leading a team, both those factors pale in comparison to having a clear vision and being able to tell a story.

And that’s how Kevin Scott motivates his 30,000 engineers to get out of bed everyday.

\----

Full article with illustrations [here](https://www.careerfair.io/reviews/eric-yuan-effect)",1603000417.0,2020-10-18 01:53:37
252,Promoted to Senior after < 2 years.,63,j1svnp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j1svnp/promoted_to_senior_after_2_years/,46,"I’ve been a software dev for under 2 years at a mid-sized (or small+??) company in North Carolina. I was promoted to Senior 2 weeks ago but, as the title states, I’ve only been a dev for almost 2 years. I feel I’m a decent leader and I’m very knowledgeable so I can understand the promotion.

The problem is my knowledge mostly pertains to the company software and not necessarily computer science.

Does anyone have recommended books / videos / areas I should study to help with this? I feel like I’m very weak with everything besides writing code and understanding what it does at a high level. I’d like to learn what it does at a lower level and learn more about architecture.

Thanks.",1601384801.0,2020-09-29 09:06:41
253,Team Can Only Agree to Disagree,61,ie5war,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ie5war/team_can_only_agree_to_disagree/,37,"I'm a senior developer on a small team of senior developers in a mega large company. On paper, we do not have a lead and roll up under a director who has several similarly structured teams. Our team is currently primarily in charge of managing a database and writing Java ETL processes that populate the database.

We were doing a high level review of our current project and it's a bit of a mess from an architectural view. We've currently got three disparate ETL templates/ways of writing ETL processes. In the event someone is on PTO, the team is too small/compartmentalized to even fix absent developer's code. quickly. We discussed merging all of the ETLs into one template, but no one could agree on the template. We couldn't even agree on an ETL scheduler - half the team wanted to use the clunky enterprise standard, while the other half wanted to create our own custom scheduler.

Any ideas on how we can get on the same page? If we try to go to the manager with this, she would bring in her top architect on her teams. I should add that this 'architect' level developer on my manager's team is seen widely within the organization as being a guy who gets it done with minimal direction... but the result is using technology and processes that are a decade or two old. The team mostly agreed that we would not want to bring him in to settle architectural issues.",1598074643.0,2020-08-22 01:37:23
254,How do you deal with company mandate to ask Leetcode-style questions when performing interviewers?,57,hy9ype,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hy9ype/how_do_you_deal_with_company_mandate_to_ask/,114,"*interviews

I'm sure most people here are generally against LC questions during the interview process. My (very large, tech) company requires these sorts of questions. There's a little bit of fudging what you *look* for in the problem, but at its core it's a totally unrelated interview to the job itself. I find myself struggling to evaluate the true skillset that the interviewee needs to have. Does anyone else have a similar experience, and what do you do to get the data you need, not just what the company wants? How do you frame that data as more important than just if the candidate figured out the algorithm or not in the interview debrief?",1595810200.0,2020-07-26 20:36:40
255,Do you track your performance to get promoted?,59,hwc0y4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hwc0y4/do_you_track_your_performance_to_get_promoted/,34,"Do you actively track your performance goals, focus on them, and discuss them with your manager and expect to get promoted? 

Or do your promotions come surprisingly or naturally with your talent/skill/achievements?   


I'm wondering if I should make it clear that I want to get promoted or just do my best and hope that I do.",1595521621.0,2020-07-23 12:27:01
256,"Working on a ""successful"" project that was actually disastrous internally?",59,hjwgwd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hjwgwd/working_on_a_successful_project_that_was_actually/,34,"There is this dev manager that got some praised from upper management for being able to implement X process or deliver X system. It was great and all, but the developers and testers that worked on X hated the manager and the whole thing, and they said it was a MESS.

The developers and testers said they:

* Worked late till midnights 
* Devs and testers got the blame when tasks were added mid way in the Sprint, and bugs started to creep in
* Process were added or modified verbally and communication (e.g. for A item) was everywhere e.g. one from Skype, one from email, one on Jira, etc.
* Added more responsibilities when tasks A, B and C weren't completed
* The list goes on

My questions are:

1. Has anyone here worked for a project that was praised to be ""successful"", but internally was a mess and disastrous? Who was accountable for this?
2. Were you burnt out? How did you recover? 
3. How to avoid in future?",1593723238.0,2020-07-02 16:53:58
257,Managing hardworking but overloaded staff member,59,hflijm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hflijm/managing_hardworking_but_overloaded_staff_member/,78,"I've this problem where this hardworking and often helpful tester is often overloaded with work, especially in the last week of a 2-week sprint. We are now in the 24th sprint so the team has been working together closely.

Most recently, whilst the tester is still struggling to finish 3-4 tickets that were just sent to the tester, and only having 2-3 days left to complete everything, one of the developers in the team sneak in a next sprint ticket and said it could also be done within the current sprint (this is a ticket that this developer just finished developing since he's free at the time). To the developer's logic, ""it's small and related to the current sprint, so it can be done as well now"".

To our surprise, the often bubbly and helpful tester flat-out said, **""No. I won't test that""**. The developer tried to convince the tester, but again, to our surprise, gave a one or two words like **""No""**. We can hear from the voice, this tester is either exhausted or just over it. We also noticed this tester has been working late nights. To be fair, the developer was probably trying his luck, but just got dismissed. 

I think this sort of thing can happen to any staff members that are often hardworking and helpful, and seem to get the attention of a lot of the other staff members. But how to avoid burning out the staff member? I can see this tester is probably one step away from leaving the door, and I don't think we need this now : /

We can't add resources. There's absolutely no way changing the 2-week sprint model. Asking the developer sending their codes to test in the first week is close to impossible. 

Any advice is appreciated.",1593118185.0,2020-06-25 16:49:45
258,How to handle a teammate who seem to see me as a threat and distrusts me?,61,gpwebs,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gpwebs/how_to_handle_a_teammate_who_seem_to_see_me_as_a/,26,"I'm a relatively new engineer manager in a team with a company I joined slightly more than a year ago. I have a team of a few engineers working on a project.

In my team, I have a senior engineer who reports to me but doesn't seem to be too happy about me being his manager or just finds that I'm a ""threat"" to him. Despite that we laugh and talk face to face like we are on friendly terms and we have never mentioned anything about being unhappy with each other, my instinct tells me that he thinks he deserves more than me to take over the manager role after the previous manager has left. Perhaps, he thinks he has been with the company the longest and knows the system more than I do.

There are simply too many signs that are starting to reveal to me that something is not right about this person. For example, when I ask him about certain information about the project, I can sense how he would obfuscate things in his explanations and usually only one part of the whole story was told. But he has no problem explaining them clearly to our product managers and directors, especially to my manager. In another example, we had to manually enter our manager’s name into a system for a HR peer review exercise because the system wasn’t linked up to the employees list yet. Everyone on the team entered my name as their manager except for him. I still have no idea who he had put in that mandatory field and we don’t talk about it pretending that it has never happened. I suspect he could have put my manager as his manager instead. He seems hideous and has many hidden agendas. I won't know what is on his mind. 

Assigning tasks to him is also a pain. He gives me vague updates like “still good”, “in progress” and other empty answers. When I press him for more updates, he would often say he would tell me more in the following week or some other excuses. It becomes very difficult for me to report to my managers and makes my job harder, which might be what he hopes for. When he updates my manager and other senior managers, he becomes much more detailed. There are many more examples, so many that as I start reading into his acts, the more I feel awkward with this person. Nonetheless, we still appear as friendly as ever like there is nothing between us. How crazy can this even be?

He is very savvy at socialising and I am aware of his social capital within the company and how well liked he is by most people. Most people who liked him either aren’t affected by this hideous person or are just poor at reading his intentions. He kept his acts so well and I don’t think I have enough credibility to seek grievance or help through my manager. Nobody would believe me. I might risk even be judged as being overly sensitive or childish. I don’t blame anyone though because they aren’t in my shoes to experience it first hand.

My guess is that he sees me as a threat to whatever status he perceives he was having before I joined the company. Perhaps, the only way for this person to feel justified is for me to report to him instead. As for myself, I enjoy the technology stack I get to work on in the team but have no interest in whatever silly office politics. Yet, I feel sick and stressed to know that I have to work with, and worse, manage someone like this in my team. You can imagine how our one-on-ones are like. [I think this comic illustrates my situation best.](https://historyrevision.files.wordpress.com/2012/03/nazi-soviet-pact-cartoon.jpg)

Have you had experiences like this before? How did you handle it? Should I start looking for another job?",1590379645.0,2020-05-25 00:07:25
259,Daily routine for learning?,57,gc6rhi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gc6rhi/daily_routine_for_learning/,34,What are your routines to support consistently and continuously growing new skills?,1588456144.0,2020-05-02 17:49:04
260,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,61,frmufl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/frmufl/ask_experienced_devs_weekly_thread_a_weekly/,107,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1585584817.0,2020-03-30 12:13:37
261,How much time do you spend outside of work to develop your skills?,58,d7doqh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d7doqh/how_much_time_do_you_spend_outside_of_work_to/,33,"As a software engineer my life is pretty hectic, I am working almost 12 hours a day. I know some of my colleagues clock more hours than I do. I don't have to work on the weekends, but I don't spend much time during the weekend on anything tech related. 

I was wondering how do you manage learning or working on non-work related projects/skills?  And when do you do this? This also goes for interview prep. What I do at work and the questions I am asked in the interviews are completely different. Do you also keep upto date on your LeetCode skills even if you are not looking for a job?",1569116829.0,2019-09-21 21:47:09
262,Is it common for the tech lead to be the sole code reviewer?,58,kgldpb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kgldpb/is_it_common_for_the_tech_lead_to_be_the_sole/,30,I have about 4.5 yoe but only at one job. Our code reviews have always included peers. Is it common for just the tech lead to review PRs? I spoke with a team recently that does this. The reasoning was that the team was too small and devs needed to focus on their own task.,1608458739.0,2020-12-20 05:05:39
263,Information sanitization issue,59,k1dpqc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k1dpqc/information_sanitization_issue/,43,"Hi,

Throughout the years I've noticed that the vast number of the articles in popular dev communities are simply not worth reading. Many of them (even those reaching to the top) are misguided, wildly inaccurate, demonstrably wrong or even sometimes subtle marketing schemes. I have a few questions regarding your process to filtering information in this industry:

1. What is your overall process to approaching online information regarded to the industry and is it even worth for you to read online articles?
2. What alternative authoritative sources do you use to update your knowledge? (do you prefer books or scientific articles?)
3. Any advice to a person that would like to sanitize information before consuming it?

Unfortunately sometimes I feel like bad information can even be harmful to your way of thinking. I think is becoming a big issue for me personally.

Regards!",1606419155.0,2020-11-26 14:32:35
264,"Interested in learning new stuff to cover some technical gaps. For approaches that are more ""academic"" in nature, what have you seen works for you?",61,jurz17,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jurz17/interested_in_learning_new_stuff_to_cover_some/,29,"Most of my experience is in web development, although a lot of my knowledge is pretty shallow in nature and it's holding me back at job interviews. I'm more interested in the following topics:

* Cloud services (mostly AWS and possibly Azure).  I'm starting almost from zero here.

* General SDLC like testing, deployment, containers, etc. Same experience as with the cloud.

* Various DS&A topics (just in case for tech interviews). I'm familiar with some of the basics here.

While many sources to learn exist, I want something that I can follow in a more regimented pace, as if I'm back in school. Just want something with more structure. That led me to EdX and Coursera courses. 

I don't work so I have a lot more spare time. Are there timetables I can follow so it can force me to set a schedule for myself? Any others besides the two I mentioned that I should look at? How great is CS50 for DS&A? Tuition reimbursement is not possible for me, so I prefer free or at least deferred pay. There's so many choices out there now.",1605498137.0,2020-11-15 22:42:17
265,How many years in do you see devs entering non-dev/managerial type assignments?,55,j6wcck,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j6wcck/how_many_years_in_do_you_see_devs_entering/,46,"I’m referring to tech jobs like project/program/product management, architects, sales, development managers, etc, not completely outside the industry like real estate. 

For me I’ve seen people early as 5 years when they make the transition. But on average usually 10 years.",1602124006.0,2020-10-07 22:26:46
266,How do I know when I’m ready for a “senior” role?,57,ihw0fb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ihw0fb/how_do_i_know_when_im_ready_for_a_senior_role/,36,"I’m a self-taught dev, been programming full time for around 3.5 years now. Stronger in front end although work as a full stack dev at a start up in a small team of 5.

I’m overall quite happy with my current role. It’s good pay, for a good employer, with a good work-life balance, good colleagues, WFH. The works. That being said, I feel like I’ve hit a glass ceiling.

Most front end tasks that come my way aren’t challenging anymore, and it sucks because I don’t feel like I’m developing my skills in this area. 

Our CTO is a backend dev at his core, and doesn’t have much of a passion for front end development. Because of this, front end tasks and projects as a whole are always treated as “less important” than our backend projects, and that bothers me greatly.

It also leaves me in an awkward position where I don’t have a “skill benchmark” to put myself against. I’m the strongest front end developer on our team (including our CTO) and pretty much head up front end development at our company, though it’s not something I’m recognised for.

So my question is, how do I know if I’m ready to take the next step into a more senior role? I feel like I’ve got so much more to give, but can’t do it at my current company because there isn’t a requirement for it...

... or perhaps there is? Is it possible to grow my role and responsibilities somehow?

This issue aside, I do genuinely enjoy working for my current employer. Curious to find out what other people’s “cut off” point is for getting a new role vs staying in a position where you can float comfortably.

Any general thoughts or advice would be much appreciated.",1598599479.0,2020-08-28 03:24:39
267,What benefits would getting a CS degree later in one's career have for a developer that's already been working without one?,59,hqo54w,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hqo54w/what_benefits_would_getting_a_cs_degree_later_in/,82,"Say you're self-taught and already have a few developer jobs below your belt, and now you have time for more choices: Going back to school, more self-learning, or moonlighting contract work. What would be some reasons
for taking school over the others? 

Many people like to say that experience beats degrees, but have you found that this may not always be the case?

Maybe a systems engineer with a EE degree will have no problem getting hired for research-heavy tech companies, but a web developer with a psychology degree is not on the same playing field as him.

Another question applies to your case (for those without a CS degree): Do you believe getting the degree will benefit *you* personally, why or why not?",1594704251.0,2020-07-14 01:24:11
268,A jumble of concerns about jumping ship in a suddenly-saturated market - am I actually a qualified senior dev?,57,gib57h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gib57h/a_jumble_of_concerns_about_jumping_ship_in_a/,28,"Hey, guys. I'm a full-time Python developer (Django webapps) and I've been doing this kind of work since my college intern days, about eight years now (holy crap).

**tl;dr: I am ready to move on from my job, but I'm afraid that I have junior skills with a senior job title. And now the market is saturated. How can I make myself competitive?**

For the last five of those years, I've been working at a stable, slow-paced workplace. I graduated early and entered the workforce young and had a lot of growing up to do outside of my career, so the low stress and relaxed schedule helped me do that. I also struggled with mental health in my early 20s; this was a stable platform to figure my shit out, essentially. I don't regret taking this job, but I have definitely stagnated over the last couple of years.

I've been in a ""lead"" role for the past two years, but all senior developers left early on, so I've had to self-mentor.  It's just me calling the shots for three other people (well, two now, as one person left and won't be replaced). I successfully shepherded us through a major project from scratch. But I still don't feel like a proper senior developer. I don't think that I could land a senior job. I've been flying by the seat of my pants. 

Technology-wise, I'm behind. We haven't upgraded to Python 3 yet, I have only tinkered with JavaScript frameworks like react, my only front-end skill is to throw Bootstrap at everything, and I'm literally just now setting up continuous integration and unit testing for our projects. No Docker, no AWS. I can write Python blindfolded, but is it quality Python? I don't know. And 90% of it is in the context of Django. 

With a bit of studying up and grinding Leetcode, I think I could handle a whiteboard-style interview, but I haven't built up a portfoilo or anything. No personal projects.

So, should I put together a side project to put up on Github that showcases best practices for a Django application, since I'm theoretically an authority on that? Or, should I dive into an open source project and get some commits in?

Or is this all just impostor syndrome? I can't tell anymore!",1589318659.0,2020-05-12 17:24:19
269,You ever get a spec that you needed clarification on and the response has nothing to do with what you asked about?,60,g9am7x,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g9am7x/you_ever_get_a_spec_that_you_needed_clarification/,35,"I know it happens often from clients in some form or another but I'm looking for those cases where it's totally unrelated. Like the person you asked for clarification from never even read what you sent them. 

I've experienced this more often now that I'm getting back in to direct product development and it's driving me nuts. So I'm hoping to laugh along with the rest of you about how absurd it is. Please share your stories!

A recent example of mine is asking whether we need to dynamically define/guess the proper folder structure for saving various documents. The response, naturally, was that the user should be able to access the documents. Like yes, obviously, how else would this work? Now please answer my question.",1588054117.0,2020-04-28 02:08:37
270,"How to plan out product timeline, team and methodology",61,kc7qhq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kc7qhq/how_to_plan_out_product_timeline_team_and/,16,"Hi folks,

I'm the first tech guy in a Series-A funded startup, currently acting as Engineering Lead. We have an acting CTO (co-founder) who is a  non-tech guy so I look after all things product. The founders want me to move in to the CTO role sometime next year.

In the past couple of months, I built a MVP product along with a developer. I collected the requirements, planned out implementations, did development and testing and deployment and all things in the app lifecycle.

On the business side, the product is way beyond the MVP phase now, received funding, growing customer base and catching attention of the stakeholders and users.

On the technical end, it's a mess. Zero documentation (of any kind), lots of issues in basic functionality (as we devs aren't from the insurance domain) and multiple new enhancements/bugs being reported every day.

Therefore I decided to take a step back and setup a smooth functioning system for tech team.

* Plan out next 6-10 months of work
* Chalk out the key tech/design/infra requirements
* Design the team structure, hierarchy and # of people required
* Do a cost analysis of investment vs outcome

I have ~2 years of experience as a fullstack dev in an enterprise project that was using agile methodology. And I feel a modified version of the same can work out for our case as well.

Since the founders don't want to have a senior person over me, I have the freedom to onboard experienced folks who can help out in the project (since my experience is little).

So how do I start with all this? I haven't done this kind of planning etc ever but I feel with the right resources and support from the community, it shouldn't be that difficult. Keeping in mind the product is already live so don't have much time to do this process over weeks/months.

Thanks!",1607880190.0,2020-12-13 12:23:10
271,The bottlenecks you've encountered with existing systems...,55,jkatsf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jkatsf/the_bottlenecks_youve_encountered_with_existing/,52,"Curious to see what everyone else has ran into that really bottlenecked a system they have worked on.  These are the three that really seem to be problems with existing systems I've encountered in the past couple of years.

1. Too much Javascript on the frontend (trying to process, sort, make a lot of decisions, etc).
2. API calls sending too much data in the response or request.  Tested this with a government API that has an obnoxious number of fields per json entry.  10 entries averaged 2650 MS and the results don't change too much going up to 25 entries, but the second you spread out to something like 79+ entries you really start to feel it.  79 entries were averaging 4290 MS in terms of response time.  This is all with JSON data but I doubt XML would make it better.
3. Relational Databases and how they are structured / Accessed.  Not talking something like remembering your indexes, but rather how a badly designed ORM can cause major latency in getting data.  For example, having a stored proc call a function to perform mathematics on a set of numbers that must first be converted to real numbers (integers / decimals) from strings, per each line, may not be noticeable to someone implementing it on a small scale, but oh boy does it go south with 100+ entries.

What made #2 kind of nasty is that having a single digit change in the parameter sent ends up skyrocketing results to 1316 entries, which averages a whopping 45203 MS response time.  Setting a proper limit on those sensitive values are pretty critical, and for some reason people don't want to set up both client and server validation on these sensitive variables.

\#3 is painful because it really is multiple problems folded into one.  Why isn't the data being stored as a double, int, or decimal?  Why does the value need to be calculated after the fact instead of just storing the calculated value?  As it turns out, the reason data was being stored uncalculated as strings was because the data was coming from a set of numeric text fields and no server side validation was being used to check if the value was actually a number.",1604009819.0,2020-10-29 18:16:59
272,any strategies for answering compensation expectations/requirement question during early interview phases gracefully?,55,ik1h4i,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ik1h4i/any_strategies_for_answering_compensation/,49,"Hello, 

&#x200B;

Interviewing in the 150k+ range what are some strategies for answering HR reps and others asking about salary ranges/expectations. I do believe the old adage of ""whoever talks numbers first usually looses"" but I'm not sure how to answer with an HR rep in a professional manner. Usually if I say something like ""My compensation is based on how well I'm able to fufill your needs and the expectations of the role"" they usually push with something like ""can you give me a range so we know we are on the same page"". 

&#x200B;

How do you guys navigate this gracefully?",1598920933.0,2020-08-31 20:42:13
273,"Devs who also manage other devs, what does a typical development plan look like for your direct reports?",55,ibiu1w,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ibiu1w/devs_who_also_manage_other_devs_what_does_a/,32,,1597714873.0,2020-08-17 21:41:13
274,Lowball rates for remote work?,54,i3553o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i3553o/lowball_rates_for_remote_work/,36,"I have over 20 years experience with C and C++ and also many years with sound programming, OpenGL, embedded, and a range of languages.  I've had a steady stream of multi-month contracts for which I was billing $100/hr.  I thought my rate was maybe a little low being in Los Angeles where some of my friends are billing $150-$200/hr, but I was doing relatively fun work and mostly working remote.

At the start of Covid all my contracts dried up and I started actively looking for work on Linkedin etc., but I keep getting (what seem like) lowball offers from recruiters, and companies are balking at $100/hr contract and balking at asking $150k for a full-time W2.  Recruiters are frequently coming to me offering $60-75/hr for both contracts and full time W2 jobs that  have pretty heavy requirements like 6+ years of C or C++ and low level OpenGL knowledge and ability to write drivers.  Low rates are a little more expected with gaming jobs, but many of these are not gaming related, and I am taking COL of the job location into account to some degree.

Does anybody have any insight?  Am I being unrealistic about my rates for remote work?",1596516115.0,2020-08-04 00:41:55
275,Rules Feedback and Update,54,gg2k7u,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gg2k7u/rules_feedback_and_update/,34,"So, it's been a bit more than a month since the new rules were rolled out. 
I've been holding pretty strictly to the rules, but of course there are things 
that weren't covered and things that were that probably shouldn't have been. 

I wanted to get everyone's feedback on how they feel about the rules. But first,
let me report on the sub and the effects the rules have had on the sub:

The sub seemingly hasn't been affected by COVID-19. We have about the same number 
of pageviews, unique views, etc as we did a few months ago 
(there was a huge jump at the new year, I think we were linked in /r/cscareerquestions).

The rules have had a greater effect. 

Since the new rules were implemented:

* 54 posts have been removed
* 34 comments 
* 43 people have had their flair updated
* 22 reports were ignored
* 1 user was banned

The rules have made moderating much easier. It gives structure to what the community wants, rather
than what I or any of the other mods think needs to be done. In fact, I try to make very few judgement calls,
and lean on the rules pretty heavily. 

So that's why I'm back! I'd like some more input on what everyone thinks of the rules and what we can do about
some of the more … unusual … posts that get reported. 

I'd also like to request that people report things more. I think we've got maybe one or two people that report stuff that
breaks the rules, and I would like to see the posts that are blatantly doing so have more like 10-20 reports. 

Having said all that, let's talk about more rules!

Some of the things that weren't covered in the rules very well were things like:

* questions asking about design of software that has recently made the news
* specific architecture questions, questions about structuring code and operations tools
* recruiter and hiring posts

One of the things that I think are covered a bit _too_ harshly in the rules, is the `No ""What tech should I learn""` Rule. 

I'd like to hear others opinions on it. [Here is an example of the kind of post that toes the line](https://www.reddit.com/r/ExperiencedDevs/comments/g2hyi8/anyone_else_here_tried_out_using_rider_ide_from/)
Several others that were removed were around career advancement, but aimed at what things they should learn, including tools. 


Anyway, this is kind of a ramble, let's make it more of a discussion!",1589003626.0,2020-05-09 01:53:46
276,"What is the ""on call"" experience like for your team/company?",56,fekqkl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fekqkl/what_is_the_on_call_experience_like_for_your/,39,"A few years ago, ""on call"" for my team meant you were making sure services didn't go down but now it's morphed into an ambiguous support engineer role... where you are responding to customer issues, writing documentation, getting called every few hours, dealing with breaking builds, and just generally doing w/e odd job team members don't want to do (for example, deploying services to annoying regions like Germany/China).

It's bad enough that I never want to work on a team with on call again. Experienced devs, what's your experience?",1583559609.0,2020-03-07 00:40:09
277,"As I am growing in my career, I am expected to create software from scratch, and it gives me nightmares. Please help me improve.",61,ew5oxz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ew5oxz/as_i_am_growing_in_my_career_i_am_expected_to/,44,"So far in my career I was given clear goals, like small part of the system and I just need to figure out inputs/outputs and go ahead and code it.

Now I have been told to upgrade my skills for more architect kind of roles. Even I think that is the right direction (sure I can stay developer but that is not the point)

So I am given some vague requirements (like this huge project which is legacy and I need to migrate it to new framework). I need to analyse and come up with a plan. And then take resources (people) and guide them to complete this project.

This is giving me sleepless nights. 

I am generally methodical in my approach. Whether it is Java or JavaScript, I go deep into the technology and understand how it works and then apply that knowledge to write good code. 

However to analyse something completely new and break it down to executable goals (especially large goals), is not something I have ever done and it is freaking me out.

So I am requesting if you can provide some guidance and resources to overcome this fear and learn this in methodical way. I am willing to pay if someone can teach me how to look at real world problem and step by step evolve it in to a good software. 

Any inputs will be appreciated. 

Thanks!",1580420900.0,2020-01-30 16:48:20
278,Is Leetcode Premium worth it?,59,kgw3wf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kgw3wf/is_leetcode_premium_worth_it/,193,"I've a dev with over 20 years experience looking to move roles in the New Year and started dipping my toe in the water with interviews. 

Managed to get one interview quickly and needless to say it did not go as well as expected. Fell down badly on the coding test.

Would it be worth splashing out on a months premium Leetcode ton get up to speed?",1608507780.0,2020-12-20 18:43:00
279,How do I stop selling myself short while remaining humble with my career?,56,k7jznq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k7jznq/how_do_i_stop_selling_myself_short_while/,11,"This is something I've been told several times: Don't sell yourself short, if you're looking to find a better job, promotion, etc.

Here's the short of my expereince. I started working as a web dev making small websites for local business and gov't offices. I did this at three agencies, and then worked for some other business where I maintained their website (high stress, only developer), then off to a startup with fewer than 10 people which didn't pan out.

Through it all, I've always been underpaid. At first, because I didn't know any better. But now it's because even when I try to push my salary to reasonable levels, I never get offers. I do get offers from part-time temp work but those do not pay well.

I've gotten feedback about my job experience and resume, saying that it indicates very slow progress and complacency (and that's just the general idea). I must remain humble about my expectations.

Despite all this feedback, though, I'm also being told not to sell myself short because I'm making very little money. If your feedback gives you a harsh reality check, how do you ""sell up"" when people tell you that your experience needs improvement?",1607246219.0,2020-12-06 04:16:59
280,How have you handled switching into a different software domain?,58,jsob25,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jsob25/how_have_you_handled_switching_into_a_different/,28,"I've been working professionally as a software developer for 4 years now, and I just recently started a role as a senior software dev at a company, mostly as a backend web dev.  The issue I'm running into is that all 4 years of my experience has been more systems programming, desktop application dev, some report generation and so on.  Bottom line is...my background is not in web dev, and I took this role to be challenged and grow as a developer.  But I'm in a weird spot in that I'm in a senior role, but in some aspects I have the knowledge of a junior...For instance (up until the other day I didn't know much about chrome dev tools).  How have any of you handled switching into a domain you're less experienced (or no experience) in?  I feel like I should read up on a book that covers a little bit of everything in web dev (wide breadth but no depth) but I'm not sure if such a book exists.",1605184728.0,2020-11-12 07:38:48
281,How Important Is Seeing Eye to Eye with Management to You?,53,ijgwr5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ijgwr5/how_important_is_seeing_eye_to_eye_with/,16,"How important to you is it to see eye to eye with your chain of management at work? I think there are several dimensions which may be relevant:

* **Attitudes, beliefs, and principles:** In my opinion, these low-level values and instinctual emotional reactions are the foundation the rest of the manager's leadership style is based on. Many of these would be things inherent to a manager's overall personality and character and likely to inform their behavior outside the workplace as well as in. A company's formal policy and management training/coaching may or may not modify these things.
* **Tactics:** What is in their management repertoire when a project needs to be completed? Do they lean heavily on the carrot and/or the stick to motivate employees? Do they shield the team from unreasonable demands and pressure, or do they push it downward?
* **Strategy:** Do they solicit feedback from and collaborate with employees to develop strategy, or do they expect obedience? Is their tolerance for risk similar to yours? Is the pace of work set sustainable to you? Do they push blame for their strategic mistakes onto their reports or other teams?
* **First-hand experience:** Did they spend significant time working in the trenches? Do they actually understand what the job is like from the employee's point of view? More broadly, do they have some empathy, or do they see employees as ""resources"" to control?
* **Overall ""vibe"":** When interacting with them, do you leave feeling energized, drained, or neutral? Do you find them friendly and approachable or cold and arrogant? Do you respect them? Do you feel they respect you?",1598838300.0,2020-08-30 21:45:00
282,"What companies are ""recession-proof""?",60,fuvr9l,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fuvr9l/what_companies_are_recessionproof/,99,"I'm considering looking for a new job because I got furloughed. How would you recommend evaluating companies on how they'll survive not only the current COVID-19 problems but the potential longer-term recession?

The classic FAANG type companies will always be ok (probably with reduced hiring), but what types of smaller companies will be the most successful in this time?",1586043617.0,2020-04-04 19:40:17
283,Rant about keeping up my skillset,56,fj4n2y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fj4n2y/rant_about_keeping_up_my_skillset/,57,"It feels difficult to ""Keep up with the Joneses"" in terms of continuing to qualify as a software engineer.

It is insufficient to have critical thinking skills and programming knowledge. These days, most jobs require knowledge of several different *frameworks*. The number of frameworks keeps growing. And unless you have a lot of free time at home, the main way to get experience with these frameworks is to work in a job that uses them.

I end up applying for jobs with requirements that go beyond what I know, hoping that no one else applying is more knowledgeable than me. Frequently I get the job, and I work there for a good year or so, learning all of their custom frameworks.

The problem is that during that time, several new alternative frameworks have been invented and used. Within a year of me learning the custom frameworks of one job, I missed out working on some other frameworks at another job.

So, even if I've got a great job, I am incentivized to keep switching jobs. Else, I would get pigeonholed into working with only some very few specific frameworks. 

And once you get pigeonholed, it's hard to get out. Companies that need your exact skillset will pay you highly as a qualified senior software engineer. Companies that don't need your exact skillset, will be less likely to hire you at all. Acquire some golden handcuffs, becoming very comfortable with your highly paid position, up until your skillset is no longer necessary in the industry.

And so, after 10 years of working at around 5 different jobs, I keep wondering if the rest of my working life will continue to be like this, or if I should switch professions to something a bit more stable.",1584321104.0,2020-03-15 21:11:44
284,Is it normal in the US for devs to be forced to be on-call?,54,f2xd66,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f2xd66/is_it_normal_in_the_us_for_devs_to_be_forced_to/,48,"Yep, [the story about my workplace](https://www.reddit.com/r/ExperiencedDevs/comments/ezf257/is_it_commonacceptable_in_the_us_for_devs_to_be/) continues.

This Monday, we had a meeting with our dev team to introduce new on-call procedures due to production incidents that have happened. The thing is that all team members are **required** to be in the on-call rotation. We were asked to install an incident management app on our phones. The app will page the on-call persons based on alerts in our cloud environment (e.g. when a container runs out of memory or runs out of CPU)

Most of our team members don't have production access (apart from logs), so how are they supposed to act on any alerts? - ""Just inform other people if needed"" said my manager. *What's the whole point of having people on-call without prod access* I thought.

Also, most of the alerts are about random container restarts, which we apparently aren't even ""supposed"" to do anything about.

My manager also said that we shouldn't worry about not being able to resolve any alerts immediately, as long as we acknowledge them. ""Don't worry if you can't get to your laptop until one hour later""

Later that day, we had a meeting about the on-call process with the whole engineering department, including the VP of engineering. Even my boss seems like a lax guy compared to the VP.

Everyone in the room was basically forced to install the paging app on their phone and making sure that the notifications will sound even with Do Not Disturb turned on. ""So you'll surely wake up at night"", said the VP. ""If you don't respond, you are not doing your job"" he also said.

He didn't leave any room for questions even though he had mentioned it in the meeting invitation.

What are your thoughts about this? Is it common in the US to have this little respect for employees' free time?

In contrast, here's how on-call was introduced at my previous (Finnish) company:

* The on-call process was informed to the employees about a month beforehand.
* It is completely voluntary to join the on-call list.
* In case of an incident, top management must approve the call to happen.
* Even if you are called, you are free to decline solving the issue.
* If you accept to solve the issue, you will be compensated hourly.",1581567570.0,2020-02-12 23:19:30
285,What office politics do you see happening and how do you deal with it?,56,eankz8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eankz8/what_office_politics_do_you_see_happening_and_how/,40,"I'm at an awkward point in my career where I can confidently say I am over some naive ""newly grad"" ideas. One of which is that software development is completely meritocratic industry where you can choose not to be involved in office politics.

After becoming good at my tech stack and surrounding tech and managing some projects, watching office politics happen.

I feel like it can take me a good 10+ years to fully master such politics.

So my question is, what type of office politics do you see and how do you deal with them?

Here are some queues from my experience to get the juices following:

* **Finger pointer**: Every time something goes wrong, it is always because of a third party, external team, or other developer. When probed about what the technical core issue is, they skirt around it. Might not be entirely his fault, but he will make sure it is 100% always someone else's fault.
* **Reject & Suggest:** Rejects technical suggestions using poorly-researched arguments. Presents them as his own ideas in 6 months time.
* **""Hello World"" Developer**: Performs a simple ""Hello World"" off a tutorial on google and goes around the office suggesting a complete change in methodologies, masquerading as some enlightened person. When confronted that they are jumping the gun, they hold a grudge. Typically also aims to fix what is not broken, in an attempt to gain political leverage.
* **Old-timer Dev:** The other extreme of the ""Hello World""-er - old-timer who rejects clearly documented industry standard practices because that's the way ""we've always done it"".
* **Foot Dragging:** This guy has some grievance. He doesn't like his project, or has an issue with something which happened 6 months ago. He might be right, but he is always dragging his feet to prove a point.
* **Information Hog**: Create information dependence by not documenting anything.
* **Project Weasel**: This guy finds a way to weasel out of his project which is not going so well due to lack of performance. Also attempts to weasel into projects just before completion for obvious reasons.

I've realized that at some point, everyone will end up falling into these traps. It's part of the learning process. But it seems that some people consistently opt for these approaches, and are sometimes rewarded for them.",1576378224.0,2019-12-14 21:50:24
286,"""System generated report too quickly, it must be ignoring some data""",58,iyx7dl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iyx7dl/system_generated_report_too_quickly_it_must_be/,25,"The title is a literal quote taken from a user experience survey for a system refresh we're testing.  I was talking to a coworker and lamenting that younger me would have thought that statement was facetious.

Take a classic ASP website that was written 12 years ago and remake it with .Net CORE and React, move it off old hardware into a scaling cloud, and add marvelous new technologies like caching and prefetching... and you get users who still complain about it.

What are some gems you've seen in user experience surveys or customer wish lists or other solicited feedback forms?  Stuff that you wouldn't have really believed would be said when you were a less experienced developer.  How many times have you had people ask you to build Clippy (up to three serious requests for me, including one from a Program Manager).",1600982713.0,2020-09-24 17:25:13
287,How do you not miss a deadline when building a new system on a team?,52,gyxsk3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gyxsk3/how_do_you_not_miss_a_deadline_when_building_a/,64,"This has been on my mind for quite some time...

Working for a large company, we just started a project this February that had a deadline at the end of May (we're building a new system from scratch in AWS).

Here are some conditions:

* The system we're building is quite large.
* The team is mostly experienced java developers with one or two people in the know about AWS there are 8 of us in total.
* We're starting from scratch in Node.js/Javascript (No prior experience from either of us)
* Along with the actual code itself there are unit and mutation test that must be completed
* COVID19 was unpredictable with all of us working remote
* There are unknown unknowns as usual
* We have a list of task to complete every two weeks
* There have been outside forces pulling other team members away from work

Needless to say the team missed the deadline and management is barking at us to ""step up the pace"", but no one is clear on what to do other than the stories on the board and new things come out in order to get the system up and running.

9 times out of 10 I'm in my own lane focusing on my work and lending a helping hand to those who need it. Everyone is struggling on their work and still climbing the learning curve.

I have been in this situation more times than I care to remember but I still haven't found a proper solution to avoid missing a deadline, only thing I do is break down work into manageable chunks.

&#x200B;

What is the best way I as an IC can help contribute to help move the team in the right direction at a faster pace?",1591645435.0,2020-06-08 15:43:55
288,How can I be a more effective leader?,53,gqm1bv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gqm1bv/how_can_i_be_a_more_effective_leader/,38,"I've been a ""manager"" in a number of contexts by now. That has all gone well. 

However all of those contexts involved, well, literally managing. As in I learned new technologies then got fellow devs up to speed and implemented a process or 3 in the process. 

Now I'm being shifted to more of a leader position (by request, I love training people). In that I'm training and somewhat responsible for new hires. I really love getting to do this but I'm very worried about properly mentoring the new grads. 

The experienced hires are fine. A quick point to documentation with a note they can ping me: done. (okay not that easy, you have a call or two but really they're good to go and just need a few links and some quick calls)

I'm nervous about the new hires. The guys and gals coming straight out of school. I want to do well at helping them come in to the industry. To be clear I have my own plans and it seems to be working so far. I'm not detailing that because I'd rather have unfiltered advice from anyone else who has experience acting as a mentor for new grads.",1590479232.0,2020-05-26 03:47:12
289,what does your CTO do well?,54,fgithe,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fgithe/what_does_your_cto_do_well/,28,"Curious what your CTO does and how he/she helps developers, especially for growing startups with about 15-20 developers. How do they work with different developer teams, the engineering department as a whole, and also product managers. What do they do well and what do you wish they did better?",1583895059.0,2020-03-10 22:50:59
290,"Incompetent Senior Engineer, what to do?",59,fdhf5t,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fdhf5t/incompetent_senior_engineer_what_to_do/,36,"Hi seniors, we have the only senior swe to our team. He always want to take first bite in our system related work. However, he really sucks at system design, especially when coming up with DB schema (wrongly named bunch of columns, trying to optimize where its uncalled for, etc).
So, since he is our only SSWE, no one know what to do with him, and just painfully code on top of his pile of breaking system. 
What should we do?",1583375621.0,2020-03-04 21:33:41
291,Senior engineers at my workplace do written communication like little kids - Is this acceptable/common in the US?,56,edn8mp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/edn8mp/senior_engineers_at_my_workplace_do_written/,56,"I recently moved from Finland to California to work for a tech startup in the Bay Area. Since culture is different and all, I'm asking if this is a common communication style among software engineers at US companies, or if this is bad company culture.

A few senior developers on my team, including my manager, don't bother to write proper English. Their messages on slack are akin to ""hey bro can u plz review my pr"". They almost never write full sentences, so I almost always have to ask clarifying questions to get what they actually mean. Face to face communication goes a bit better though.

Would this fly at your company, or am I just experiencing a culture shock?",1576943598.0,2019-12-21 10:53:18
292,How much does company prestige influence future career prospects?,53,jjoos3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jjoos3/how_much_does_company_prestige_influence_future/,80,"How much do you think a prestigious company on your resume affects future career prospects? 

For a bit of background I’m currently working in the banking sector. The pay is generous but the work is very mundane and after a year with the company I’m already one of the most senior engineers and have been considering a move for more of a challenge.

I’m currently interviewing with a FAANG company, and although the salary bracket isn’t really any better than my current role I’m wondering how much this will affect my career going forward should I accept an offer from them. 

Any thoughts on if having worked for a FAANG that you think it’s really helped your career or if as a hiring manager someone who’s an ex-FAANG employee would stand out?",1603923889.0,2020-10-28 18:24:49
293,Tips on working with an arrogant interviewer?,50,jardyp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jardyp/tips_on_working_with_an_arrogant_interviewer/,35,"I've been interviewing at different companies of different sizes. 
It's common to come across interviewers who are arrogant in our field. 

What's some approach that works for you to effectively demonstrate your ability to them at least until the end of the interview?

* how do I define arrogance? It's sometime a gut feeling of course. Some signs for me are: doing something else during the interview, flat out tell you you are wrong (even though lots of things are up for debate, esp in system design), interrupting, tone. In my experience, i was explaining to a tech leader what I worked on in a different company. He'd just say oh i know, I've done that. 🥱

** if i had to work with this person, I'd reject the company before they reject me 😂. In midsize or large companies, i might not work with them. I just want the job.",1602668866.0,2020-10-14 05:47:46
294,At what stage of your career should you move to smaller companies with larger responsibilites,55,ifh1hw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ifh1hw/at_what_stage_of_your_career_should_you_move_to/,39,"I'm a mid level engineer (\~5 YOE) at a large company in a high growth mode - doubling every year, expanding into new market, and generally doing very well. However, I start to have problem with my career growth here:  
\- The company is under intense competition pressure, therefore sacrifices code quality for delivery speed becomes common practice. Code reviews are basically rubber stamps.  
\- Because of the high growth, hiring becomes difficult to catch up with demand. This results in manager hiring a bunch of subpar developers from their own ethnicity, further dragged down the code quality. The consequence is things constantly breaking in production, making on call a nightmare (or rather not enough sleep for any kind of dreams)   
\- As the team become more ethnically slanted, I found myself to be more excluded from technical discussions, decision making and roadmap planning. My responsibilities seem to have regressed from a year earlier.   
\- Although my performance reviews have been great, only people from the said ethnicity are promoted, often to positions I feel they are not qualified for.   


Although this jobs pays relatively well and looks pretty good on the resume, I'm starting to think that on balance, this is not good for my long term career growth. I've looked around for a while, and the only companies seem to be hiring are smaller companies in the same general domain. I've gotten a couple of offers at hand, and they share the following similarities:  
\- 20% more pay, but not enough to make a significant difference to my lifestyle  
\- At an much earlier stage in terms of technical maturity, often practically blank slate   
\- Promise me significant more responsibilities and input into hiring, technical decisions and tooling, and often with a rather meaningless title bump (Senior, Lead, etc)   


I'm rather confused at the moment. In theory this should be a no brainer, but I hesitate to change jobs under this economy. Just want some second opinions from people who made similar decisions, or have faced the decision but opted to stay in large companies.",1598266718.0,2020-08-24 06:58:38
295,Why do developers continue to write bad code?,55,hjiqlj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hjiqlj/why_do_developers_continue_to_write_bad_code/,109,"

 I've been in the tech industry since 2001.  Pretty much my entire adult life.  I started out as a sys admin, and some of the first code I've had to look at were horrid bash and perl scripts.  I was assured by people back then ,that if I were a developer, code quality would get much better.  They were wrong.  In many ways it's worse.


   I'm not going to pretend I'm the smartest guy in the room. On the contrary.  I'm not.  That is why I like to write code that's easy to understand.    That way it's easy to navigate, and my small brain can follow the logic.  Like I try not to make sure that someone can grab my code and understand it fairly easily.  I dont always achieve this goal, but it's what I I target.

  Which is why after all my years, I cannot understand why people continue to produce shitty code.  Logic all over the place, full if trick and magic all over the place.  Everything is nearly impossible to follow.  Variables disappear only to magically reappear all over the place.

  Don't get me started on concurrent code.  All bets are off.  Its 2020 and people still keep trying to hand code counters and retry logic.  And it's always buggy, without fail. 

  Some of the smartest people I know produce some of the shittiest code.  Is it really that had to take the time to clean up your code?  I mean it really only take a couple of extra hours.   If you have layers of nested for loops with branches in its chances are it's too complex.

   I see very senior guys who are very talented and very very intelligent produce some of the worst code.  Maybe I'm missing something.  Any insight?",1593665288.0,2020-07-02 00:48:08
296,"Recruiter at a company I aspire to be at reached out for a senior eng to lead teams, but I feel I'm still not there. What should I do?",53,gfcoq8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gfcoq8/recruiter_at_a_company_i_aspire_to_be_at_reached/,19,"I'm a backend engineer with 5.5 yoe. I recently finished my Masters and joined the industry again so feel I'm still not up for a lead role but want to re-learn things first as a dev. A recruiter reached out with a mail that they are looking for folks to lead teams/projects. I've an introductory call next week. How should I approach this? Shall I tell them I want a dev role first and will see things as they come? I know if I interview for a senior role I'll likely not do well.

[Edit: thank you to everyone who replied, I'm super pumped to say that I landed the job. It was a lengthy process due to the pandemic, and I realized that the behavioral rounds were the differentiators. Some of the ideas and recommendations mentioned here helped me get into the right mindset and absolutely nail it! Thanks again!]",1588906489.0,2020-05-07 22:54:49
297,I am getting very tired of being an EM,52,fra8gm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fra8gm/i_am_getting_very_tired_of_being_an_em/,35,"I've been with my current workplace for close to a year now but I've been asking myself whether this is a good place for me as I'm starting to feel tired with all the things I’m involved in.

I joined my current workplace as an engineer in hope that it would be a place where I can learn and live a normal life. However, things took a turn after my first month with the company as I was unexpectedly made the engineering manager of the team when the previous EM left the company.

Since then, I've been taking on a lot of responsibilities and decision making. Although the team is small, I find myself often bombarded with both technical and non-technical questions by the team and have to spend much time finding answers for them. Not to mention, I also have more meetings to attend and to dedicate time to have one on one meetings with them. On top of all, I'm also expected to work on the tasks in every sprint and improve on the technical stack.

My time is so stretched that I am doing all the administrative work and meetings in the office in the day and continue coding my technical tasks when I return home in the evening and sometimes even over the weekends! Nobody is asking me to work in my own time but, if I don't, I will never have time for them. And if the objectives for the quarter weren’t met, I’m still the one who has to answer for it and it doesn’t look good on me too.

Despite this, my major complaint, however, is the people on the team. The team consists of 1 senior engineer (SE) and 1 mid engineer (ME) and 4 junior engineers (JE).

The SE on the team is really only a mid engineer. I have no idea how he was made a senior but he is full of smoke and mirrors most of the time and he has much ego that I have to deal with as diplomatically as I can. He churns out code fast but of substandard and doesn't help the juniors on the team to learn much.

The ME surprisingly is technically stronger than the SE. He writes better code and has better technical knowledge than the rest on the team. However, he is not interested in the ""boring"" tasks that are sometimes required by the business. He is only interested in tasks that let him try out and learn the next new technology and then writing about his experience with them in his personal tech blog. He only wants to learn new stuff but not so much with helping others, and he prefers working on his own.

The other JE are all very junior. They write their code just to get the required features to appear working and they think their job is done. They talk much about writing good codes and ask everyone on the team to write good codes, but when you look at the code they've committed, you would sigh so hard. I often ended up refactoring much of their code for them. Two of the JE are so fresh that I have to help them to research their tasks and volunteer to pair up with them several times. And the other JE has a massive ego that he thinks his code is great. Giving him feedback in code review would often mean wasting my next few hours convincing him of the problem with his code and to make the change.

It seems like everyone is quite self centered too. For example, everyone demands for their PR to be reviewed thoroughly so that they can improve but nobody seriously puts in effort at reviewing each other’s PR. One of the JE even thinks that it’s the team’s job to review for him. There was once when this JE had a commit that broke the system and he said “haven’t you guys reviewed and passed my PR?”

It also appears that everyone is expecting some kind of tutelage under me when I’m not even getting any of that myself. When they face a problem, instead of googling and figuring it out themselves first, they take the shortcut by just asking me for help. They effectively save their time when they either get to know the answer immediately from me or outsource their effort on researching the problem to me because I will usually then have to figure out the problem and explain to them.

Despite my efforts to do as much as I can to meet their expectations of me, like helping them to know their problems in code reviews and conducting workshops to help them learn new things, a handful of them rated in a HR survey about their manager that I’m not helping them to advance their career. They probably expected more from me, I don’t know but it surely feels terrible being unappreciated. But they all appeared happy about everything when in front of me.

For myself, I would say that I’m quite inexperienced as an EM and certainly not expecting to inherit this. I’m not a superb engineer myself too and there is a lot more that I have to learn to become better. As much as I can, I wish that I can be working in a team with skilful and talented people whom I can learn from and be inspired by, rather than spending time being a nanny for a group of people who just expects more from me. The codebase is also messy and the whole system is fragile as fuck and I’m not gaining much value from maintaining it.

Lately, I’m questioning myself whether this is all worth it. I mean, I could easily be just another engineer on the team or with another company and live a better life with lesser responsibilities and have more personal time for myself. It’s also not as though I’m earning a much higher wage than our fellow SE that justifies the number of hours I put into work. I’m only earning $2400 annually more than an SE. That extra $200 a month is seriously not going to improve my life by a whole lot. I often wondered if the previous EM left the company shortly after he was promoted to become one because he was feeling the same way. I’m just starting to feel so tired!

I’m really curious whether what I’m going through is normal for an EM. I think I may just not be ready or lack the aptitude to be an EM to handle a team like this. I want to know if I’m doing something wrong about it or is it really better for me to move on.

As an EM, is it alright for me to think that I want to work with people better than myself who I can learn from? Or I should be more noble and think that I should sacrifice a little and be helping people to grow even if they are not as good?

I’m sorry for the rant and thanks for reading my post.",1585534046.0,2020-03-29 22:07:26
298,Any natural pair programmers/extroverts out there hating this wfh? Got any advice?,56,fpmqxs,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fpmqxs/any_natural_pair_programmersextroverts_out_there/,39,"Like, I never thought I would ever say this, but meetings are like the best thing ever now....It sounds so fucking stupid, but holy shit... Like the title says I normally work on medium sized interdisciplinary (HW/SW and simulation) based teams where I know a decent amount of embedded software, I took a lot of HW in grad school, and while I would never want to design HW unsupervised, I can at least work well with them, and help them problem solve a lot of stuff, and was learning more and more about simulink (and all its stupidity grumble) every day. Whenever I would hate my current task, and just need to step away from the code, or was waiting on a fellow dev to play 'spot the obvious bug ive been staring at for an hour', I would just go help other task members, or absorb more of whatever they were doing...I get none of that now....it sucks",1585296298.0,2020-03-27 04:04:58
299,What's your long-term plan?,52,cwaeph,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cwaeph/whats_your_longterm_plan/,31,"I've seen a lot of more experienced (37 year old +) devs go into management, tech architect roles or take up contracting roles. What is your long-term plan?  Here in the UK they are pushing the pension age back so retiring early becomes more and more difficult. How are you going to do what you're doing into your 50/60/(70s?).

I have been reading [https://www.amazon.co.uk/John-Sonmez/e/B00RPMRT5U](https://www.amazon.co.uk/John-Sonmez/e/B00RPMRT5U) lately and he seems to be the FIRE type who got high-paid dev jobs and lived very frugally, investing everything over a certain percentage. It's a bit late for me to do that now at my age although I'm saving a lot of what I earn.

I would like a low-stress job with high job security that I can just do comfortably for the next 10-20 years at least. I am currently 37. I would prefer a non-people-skills focused job as people stress me out - that is why I became a developer in the first place. What I don't want to do is keep racheting up my stress levels by climbing the ladder until I burn out. I'm a Senior Software Engineer specialising in automation now at a tech company and it's stressful as the company seems to prefer younger folks for the level I'm at and I'm slowly but surely getting pushed out.

I want to remain in a technical role as an individual contributor. Do you? What are your plans?",1566968042.0,2019-08-28 00:54:02
300,Has anyone come back from a Performance Improvement Plan?,56,jymj8e,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jymj8e/has_anyone_come_back_from_a_performance/,100,"Fortunately I'm not on one, but I'm curious about people's experiences.

In case this language isn't standard, a Performance Improvement Plan (PIP) is when you're performing poorly enough at your job that your manager/HR essentially put you formally on notice that if your performance doesn't improve, you face termination.",1606035821.0,2020-11-22 04:03:41
301,"How to keep motivated after joining a ""bad"" company?",51,jo1cnq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jo1cnq/how_to_keep_motivated_after_joining_a_bad_company/,41,"At the beginning of the year, I had a stable and low stress government job. Unfortunately, it also paid poorly and came with a very bad manager. The type who would text you if you hadn't responded to his non-important e-mail within 30 minutes. 

I left for a company that creates products I'm actually interested in, with a niche technology that I know and enjoy, and on top of that, they were willing to pay me an additional $22K/year and let me work from home. I thought I had found the perfect job for me.

The day I joined I was placed on a project that was already behind on time. The attitude was very much, ""this project must be completed by X date"". Because we're salaried employees, I was shocked to see all of my teammates were willing to give up their own personal time to complete the project. Because it was my first project there, I didn't want to disappoint and I worked longer as well. I had many days where I worked from 8AM to 9PM, but the project got done on time.

Now, I've been assigned to a second project, and I haven't received any real on-boarding onto it. I have no idea how it works, and many of the people I reach out to can't really answer my questions, as it seems they don't know or don't have the time to share intricate details. The timeline for this project is also awful, and again I am seeing my teammates work extra hours for no extra pay. I've brought up these concerns a few times but they generally don't get anything more than a ""yeah, we goofed up with client expectations"" type answer, and I feel like they'll soon start to think of me negatively for being ""that guy who doesn't want to work 24/7"". 

Considering that COVID-19 might make it harder to get another job, and that it will be obvious to any recruiter that I'm having a hard time with this place (as my resume will show I've been here for only 3 months or so), what tips can you guys offer to stay motivated on a job where you feel burnt out and just generally ""over it""?

Thank you.",1604541228.0,2020-11-04 20:53:48
302,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,50,jiaq5u,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jiaq5u/ask_experienced_devs_weekly_thread_a_weekly/,137,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1603728747.0,2020-10-26 12:12:27
303,"Getting lots of rejections, not sure if I'm doing something wrong",54,jcqqfj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jcqqfj/getting_lots_of_rejections_not_sure_if_im_doing/,43,"My company got hit hard by covid, and it included pay cuts. I've liked working there, and I've been there 7 years. But I'm feeling I need to move on.

I've done maybe a 5-10 interviews over the last few months, but not gotten a single offer. I feel like I've done really well at some interviews, not so great at others.

The last time I really interviewed was as a junior developer just out of college. I got a bunch of offers back then, even with minimal experience and only a CS minor.

I can't tell if companies are just way way more picky for senior positions, or if I'm screwing up somehow. Obviously most companies don't really give feedback on how you did in an interview, so I feel like I'm flying blind.",1602947604.0,2020-10-17 11:13:24
304,Is creative programming an option in our profession?,56,iqnyrh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iqnyrh/is_creative_programming_an_option_in_our/,36,"I'm on my fourth year of experience after uni, and I have yet to do anything creative.

I havn't struggled with a problem, havn't had to sit down and work something out, haven't had a single day where I've done something interesting.

Don't get me wrong, I adore coding, but at work all I'm doing is setting things up, implementing X API or Y database or Z service. I'm not being creative just implementing the same thing over and over with slightly different names and structures.

I used to love coding because it was creative, I got to think of the best solution to problems, but impementing the same thing over and over isn't exactly challenging anymore. I've tried applying for different more senior jobs, but it seems to just be the same thing but larger scale.

The truth is... I'm bored out my mind.

-----

I work in java (kotlin now) if this changes anything.",1599849010.0,2020-09-11 14:30:10
305,Will becoming a manager make it harder to get dev roles later?,55,hj7gz3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hj7gz3/will_becoming_a_manager_make_it_harder_to_get_dev/,20,"I work the US R&D center for an oversees company. I've been here for 3 years and it's my second job post PhD. Yoe is 4. We work on a project that spans several teams. The manager of one of the teams, is officially the manager of all employees working on the project, but in practice each of the teams is managed by a tech lead. I am one of those tech leads.

I've been told that I can officially become a manager if I want (title only, won't affect pay). I can't decide whether or not it's a good career move for me. I don't plan on staying here more than another year or so and I will be targetting large tech companies that have projects related to my area of expertese, and I would be looking for dev roles. Would being a manager looking for a dev role look bad or hurt my chances? Would people assume I've not been doing much hands on work as a manager?",1593626958.0,2020-07-01 14:09:18
306,Anyone having a day to day hard time focusing and getting stuff done..,57,gi39kd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gi39kd/anyone_having_a_day_to_day_hard_time_focusing_and/,42,"I am finding it hard to focus with all the day to day covid stuff. Between family losing jobs, struggling, myself/family with kids at home and dealing with that, while trying to work/focus.. it's unreal how hard it is to focus. I am finding I am jumping all over the place and can't focus continually on the job.

My concern though, is that many of my colleagues are either single or young with no kids, etc.. and this SIP and such is no big deal.. they are churning out code, getting things done. 

I am unsure what to do. I feel like my job could be in jeopardy. I am fortunate to be working still, don't want to lose my job, but at the same time, I think it is difficult at best with everything going on to be expected to put out the same amount of work as before covid.. and/or as those colleagues that are either single or dont have kids and just get to sit and do work and no other worries. 

Anyone else going through this?",1589283326.0,2020-05-12 07:35:26
307,Anyone else here worried their startup isn't going to make it and want to commiserate?,51,fibt1n,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fibt1n/anyone_else_here_worried_their_startup_isnt_going/,30,"My company was already going through a rough patch before everyone started taking the corona virus seriously (in the US). Thinking about being unemployed and having to look for a job during this time is... terrifying. (I was laid off 3 years ago. Was unemployed for about 3 months, which isn't too terrible. Pretty sure if I get let go now it will be much longer than 3 months this time around.)

Anyone else in the same boat? How are you coping? Have you started looking/applying yet?",1584183026.0,2020-03-14 06:50:26
308,Does it make sense to go back to school after a decade of professional work?,49,fgx6w8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fgx6w8/does_it_make_sense_to_go_back_to_school_after_a/,47,"I keep seeing these posts:

* [Your experience makes you dumb](https://www.reddit.com/r/ExperiencedDevs/comments/cb2exk/your_experience_makes_you_dumb/)
* [Senior candidates can't answer algorithm questions](https://www.reddit.com/r/ExperiencedDevs/comments/diu8ec/senior_candidates_cant_answer_algorithm_questions/)

And it keeps making me think, did I become too senior?

In every company, you learn new things, but to be honest there is very little I learned from a technical standpoint.

Most of what I learned had to do with public speaking, team management, office politics, etc. Oh yeah, and frameworks. Tons and tons of different variations of frameworks, and various hacks to get around various bugs of frameworks.

But it has been extremely rare for me to actually build some algorithm from scratch.

I feel like I've reached a limit to what I learn at a new job, and I wonder if things would be better if I go back to school, and get a masters degree.

..or should I just stick to coding challenges?

..or switch professions entirely?",1583962301.0,2020-03-11 17:31:41
309,"I am looking to improve my soft skills as a developer. Experienced devs, would you be able to recommend some resources or share insight?",53,jjvoru,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jjvoru/i_am_looking_to_improve_my_soft_skills_as_a/,40,"As the title suggests I am looking to improve my soft skills as a developer.  
I believe I am at a point in my career where this is becoming something I need to learn and understand in order to move forward, provide more value for my team and peers.  


If you could recommend any resources that helped you in that journey, I would be very grateful.",1603945723.0,2020-10-29 00:28:43
310,What was your most challenging position/most capable team?,51,jedb0p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jedb0p/what_was_your_most_challenging_positionmost/,42,"Developers who have worked at multiple companies - do you notice a large difference between the technical ability of the teams you have been on? For example, has anyone switched to a prestigious tech company and noticed that the quality of engineer surrounding them was at a much higher level and they had to step their game up to keep up? Or on the other hand, maybe you didn't notice a big difference. Some might think the answer to this is obvious but I am interested in hearing everyone's experiences.",1603178011.0,2020-10-20 03:13:31
311,I'm a contractor developer who doesn't know what I'm doing with my career. Considering moving somewhat farther away from software engineering,51,jdmihf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jdmihf/im_a_contractor_developer_who_doesnt_know_what_im/,58,"I'm a contractor software engineer and one that's also been stuck with low income and 1099's forever. People often make the following misconceptions about me when I tell them my work as a contractor:

* That, when I am working, I was getting paid well, or at least on average rates

* That I have a network of people I can just call any given day to give me a referral

* That I am interviewing mainly with companies that ask algorithmic questions

I can tell you none of the above are remotely true about me. I'm always underpaid and under-networked and I don't care about working for the large tech companies.

I'm not looking for guides on working for ""the best"" companies, but I don't know why there aren't so many study guides for ""the rest"" that don't give out algorithmic questions. So it's no wonder I feel lost with their advice. I know a lot about what needs to be done in general, but not on how to tailor it to my own unique situation.

And right now I don't know where I'd see myself in 2 or 5 years because all my past experience feels the same to me.

As a contractor I have no exposure to promotions, stocks, or benefits plans. Never sat on the other side of the table to interview job applicants. Never been a senior or a manager. Being a contractor is stagnant and often, thankless work. 

But I don't know how it is that I'm supposed to win over companies for a full-time offer. All I can muster up are more shitty contract-to-hire jobs that don't become full-time because CTH jobs are just scammy low paying jobs from my experience.

Given that I've attempted to interview so many times, could it be that I have reached my own peak as a software engineer? Would you recommend I take up some different job that has interviews that are not as broken as SWE interviews? I was considering becoming a project manager or product manager if their interviews are less broken. Or at least some other change of scenery with work to get out of the rat race. What type of work would you recommend?

Edit: people were curious about my technical background. And though I mentioned it in comments I'll say here that how I spent my programming time and experience is approximately 60% in PHP, 25% Ruby, and 15% JavaScript. I want to move further away from PHP and I ignore recruiter emails talking about Magento jobs or other PHP jobs.",1603078055.0,2020-10-18 23:27:35
312,How do you decide on your software complexity?,50,j7kgak,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j7kgak/how_do_you_decide_on_your_software_complexity/,44,"I revisited the website for a good company I worked for a couple of years ago.  They've re-written the quick-and-dirty web tool that I had made, and it looks fantastic!  Easily two or three times more functional than the ugly stuff I put together before the deadline, and far better designed to boot.

I looked at the code, and it's structured, rigorous, and pretty solid.  And absolutely *enormous*.  What was one repo is now eight.  Fifteen times more components.  Dozens of imports per component.  Multiple abstraction layers.  I kept wondering, how did they even type all of this?  I was exhausted just looking at it.

I could never have produced this.  Should I be able to?  How do you gauge the level of complexity you need in your projects?

*edit: the ~~a~~",1602216487.0,2020-10-09 00:08:07
313,Interview technical challenges that are small apps,53,ixx0o3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ixx0o3/interview_technical_challenges_that_are_small_apps/,45,"I've been doing interviews and many companies are doing a take home challenge where you need to create a small app from scratch with given requirements or being able to deploy a small app (for some devops positions). 

Just wondering people's opinions on these? Because often I find that while they say it should only take a few hours, it takes me way longer than that. 

It's hard to keep doing these types of challenges especially when you might be interviewing with multiple companies that do this at the same time.",1600839809.0,2020-09-23 01:43:29
314,Loose project deadlines are driving my anxiety to the wall,49,ide5go,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ide5go/loose_project_deadlines_are_driving_my_anxiety_to/,30,"I work in a DevOps consulting firm. I am a part of a team that is working with a client that is startup riddled with financial problems because of lack of funding since past \~6 months. I have had some form of anxiety since I was a child and I have come to realize it even strongly since I have been working in this field for a past couple of years, mostly with startups. Every week, my manager has a meeting with the CTO of the startup and comes up with these deadlines without consulting me first. We then have discussion around the deadlines. Which goes something like this

Scenario A: When the deadlines are super tight for me, like I will most likely have to work the weekend type, he will message on our internal slack channel tagging the CEO of our company and asking us to work because of reasons like, hey guys this is really important for them, their business is dependent on us etc.,

Scenario B: When I think the deadlines come out of nowhere as in I know just as little about this as the manager. This is a new thing for everyone. He then comes up with this random deadline that sounds quite tight after discussion with the CTO and discusses this with us. He first tries to convince us as to how this isn't as difficult as it looks with factual information and then closes it with something like this ""I think this is totally doable"".

Scenario C: When there are no deadlines so to speak and everything is chill. He won't bother us.",1597971622.0,2020-08-20 21:00:22
315,What has been your process for transitioning tech stacks throughout your career?,55,f7p5a1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f7p5a1/what_has_been_your_process_for_transitioning_tech/,25,"I'm your run of the mill java dev working with spring boot, but I'm trying to pick up ruby and rails because I see a lot of remote job openings that are specifically looking for rails devs. I'm planning on spinning up some personal projects using rails to learn the language and the stack, but what I'm wondering other people do to become idiomatic in new tech stacks over time. 

I've read some java design patterns don't carry over to ruby and rails - dependency injection isn't nearly as important in rails, for example. I've dabbled in other languages before, but going from being able to use a new language to becoming idiomatic in that language is as far a gulf as making a toy project and getting professional work experience in that language and stack. What do you guys do to bridge the gap? Personally, I feel like personal projects are better than nothing, but ultimately your ability to absorb the language will plateau, since you're basically just working with yourself - working with other people who are familiar with the language and the stack seems crucial to picking things up, unless you're capable of picking up everything independently.

It especially seems like a hard sell to hire someone for X role when you know they have several years experience in a different language set and are essentially entry level in terms of their knowledge in your tech stack and your domain, but are probably still expecting salary commensurate with their total years of software development. Might as well go with someone who has the same amount of years of experience in your tech stack.

The question got kind of muddled, but to sum a two part question:
What do you guys typically do to become professional level with a new stack, and how do you land a job in that new language when you have no professional experience in that language? As a mid-level developer, you seem to have basically priced yourself out by starting over from scratch.",1582383855.0,2020-02-22 10:04:15
316,What’s your story where a new colleague completely wreaked havoc in your department/company?,53,ejxh8c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ejxh8c/whats_your_story_where_a_new_colleague_completely/,12,"I've had one where she convinced my manager I was a bad apple and had me removed from the project.  The project has since stalled from overengineering and misplaced focus and there is nothing to show even for initial testing.  The sad thing is the manager was also convinced by her that all of a sudden it will ""magically work"".  The project should have been in final testing by now.",1578178171.0,2020-01-04 17:49:31
317,Painfully average developer dreaming of getting into big tech. How do I make it come true?,54,e9xdof,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e9xdof/painfully_average_developer_dreaming_of_getting/,33,"I have a little less than a year to prepare for my next switch, and I’m thinking of giving the big tech firms a serious try this time. I’d like to ask for people’s insights on how I can possibly improve my chances.

Before I continue, a bit of a background. I have about 11 years of experience as a (mostly backend) software developer. I currently work with a senior title role, although I keep second guessing myself because the bar doesn’t seem set too high in my current place of work, and I still mostly work as an individual contributor. Of the 11 years of working, I’ve only been with 3 companies, with some part-time roles on the side (mostly development, with some trainer positions as well). I’ve mostly worked on green field projects, which I think is overall good in terms of the amount of stress at work, but as a consequence, I don’t have much experience doing actual life-or-death sorts of firefighting in production (not sure how valuable this sort of experience is as a backend developer) although I also do a bit of ops stuff as well. I really don’t know where I place in the grand software developer spectrum but I feel like “painfully average” suits me currently. To be honest, I don’t know exactly why anyone would be pick me over the next experienced developer (aside from I’m not too picky in terms of compensation), and I think this is something I want to pin down as part of this new phase of job hunting.

Ultimately, I guess I’m looking for an organisation that value quality and technical excellence, a place where I can further hone my technical and product development skills by working alongside the so-called industry leaders. I have a crazy idea in my head that big tech firms are like that, although I’ve read a few anecdotes to the contrary. Still, in general, I think it’s safe to assume that companies of such caliber would have mature engineering practices and culture that I’m looking for. I want to understand how the “best of the best” do it, and I want to be a direct contributor to that. I also have this impression that a lot of interesting problems are being worked on in big tech firms. Take for example projects like Kafka, Kubernetes, etc. that started out as internal tools for solving specific, internal problems, but are now used almost everywhere.

I do however recognise, that the FAANGs of the world aren’t the only places I could possibly find what I’m looking for, so while I set my eyes on these big firms, I keep myself open to other opportunities. I’d be very happy if at the course of my next job hunting I ended up in a much smaller, relatively unknown place that still has solid culture around best practices and technical excellence.

What can I do this early to prepare? How do I start making connections to discover new interesting opportunities, especially as an introvert? To be honest, this one of the most uncomfortable parts of job hunting for me because I prefer relationships with other people to develop organically instead of forcing connections for ultimately personal gains, but this seems to be a necessary “evil”. How do I put myself out there in a relatively short period of time (I feel like 1 year isn’t too much time)? I do understand that even before I could even consider acing any of the dreaded whiteboard interviews, the first crucial step is to get one foot in the door. 

I’ve moved to Europe (UK in particular) not very long ago; I was flown here for my current position, but I applied while I was still living somewhere else, so I don’t really know what’s it like looking for jobs in the region. Also how do I find lesser known “second tier” companies that while aren’t as big as the FAANGs still have solid portfolio, and great culture?

I get invitations from different recruiters from time to time although so far I’ve only received about one or two messages from FAANG recruiters and they didn’t seem to be that much interested in me anyway. Majority of the others I’ve received are generic recruiter invitations saying they have a role that I might be interested in. When should I consider sending out applications? On job searching sites, when’s the best time to set my status to actively looking?

I know this is a rather long post, so thank you very much for reaching this far.",1576231276.0,2019-12-13 05:01:16
318,"Do you think you're subjected to ""resume driven development""?",52,dugh1p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dugh1p/do_you_think_youre_subjected_to_resume_driven/,25,"I just read this phrase a short while ago and found it interesting. It refers to using technologies for no big practical reason for the company to do so, other than to put on your resume. And some do learn these things, because they need to know them to do their job, but they are mainly driven by hype. And so people just try to drop themselves into work or force the use of a different tech for the sake of embellishing their resume and look good to other companies.",1573444779.0,2019-11-10 22:59:39
319,Broke and demotivated job seeker who is also living too comfortably. How do can I light a fire under my ass?,55,j878p8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j878p8/broke_and_demotivated_job_seeker_who_is_also/,49,"For the first few years of my developer career I went from contract to contract, until they dried up and couldn't find work for a year. I no longer was able to support myself and moved in with one of my parents. Meanwhile I continue to search for jobs including full-time ones.

I'm now in a somewhat odd predicament with motivation here. I am stuck in a job search ""trance"". Even though I barely have enough money for myself (and ineligible for unemployment), I am living comfortably with my family. I have no obligation to pay rent because the place is so cheap. Any jobs I get now are just short term contracts that pay worse than I had when I was living on my own.

My parents don't come from money- far from it. I grew up in a low income household paid my way through college with loans and Pell grants. (The loans were not big and were since paid off)  My parents just managed to do a good job saving enough for retirement after their steady careers.

So that's the situation I'm dealing with. I've been doing personal self-learning and more job seeking and mock interviews but I'm not pushing myself enough. It took me a long time to realize that getting supported by my parents and my crappy job opportunities go hand in hand. My warm, comfortable safety net is holding me back. And people that pay their own way know what it takes to light a fire under their ass. So how can I do that for myself? Should I go homeless and live on the street/my car? That sounds like it will make things *too* much worse so I am looking for other ideas on how to drive motivation to find work when living conditions mean you can basically live for free.",1602305968.0,2020-10-10 00:59:28
320,Being reimbursed for crunch time,53,j4rrzx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j4rrzx/being_reimbursed_for_crunch_time/,61,"I have a project that was supposed to be due mid-October and the client pushed the deadline up to this Monday last week.

I've been working crunch pretty heavily since.

&#x200B;

**Extra Hours**:

* Sunday - 2pm to 8pm (6 hours)
* Monday - 5pm to 6pm, 7pm to 9:30pm, 10pm to 2am (7.5 hours)
* Tuesday - 5pm to 6pm,  7pm to 10pm, 11pm to 3am (8 hours)
* Wednesday - 5pm to 6pm, 10:30pm to 2am (4.5 hours)
* Thursday - 5pm to 7pm, 8pm to 3am (9 hours)
* Friday - 5pm to 6:30pm, 9pm to 4am (8.5 hours)
* Saturday - Plan to work 10pm to 2am (4 hours)
* Sunday - 6-8 hours

&#x200B;

My boss just emailed me saying that he would bonus me for any hours I spend working on the project this weekend.

I'm not sure if I should even mention the hours worked throughout the week and leave it up to him if he wants to comp me for them. The idea of not mentioning the hours is upsetting because that's 35 hours of work that I did this week that I wasn't comped for. I'm just not sure if it'll come off badly.

&#x200B;

I thought about saying something like:

>Hey bossman,  
>  
>Thanks for offering to bonus me for the hours I worked on Project X this weekend. I wanted to be entirely transparent and mention that I've worked until 2am or 3am every day this past week. Between last Sunday and Thursday, I've put 35 hours more than my 40 hours into this project. I also put 20 hours into the project this weekend.  
>  
>Let me know if you want to speak about this more.  
>  
>Thanks,  
>  
>Vlad

&#x200B;

Thoughts?",1601808465.0,2020-10-04 06:47:45
321,What's the conversion rate from FTE salary to contractor hourly rate?,54,iou98b,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iou98b/whats_the_conversion_rate_from_fte_salary_to/,63,"Take a hypothetical position that would be worth 150k + options + benefits as a full-time role, but for simplicity's sake lets value the total package at 200k. Let's say for some reason it needs to be done as a contract role for the time being (with no options or benefits). What would be a reasonable way to calculate the fair hourly rate?

Edit: Is there a rule of thumb that the hourly rate is close to annual salary / 1000?

Edit2: I dont intend to be a long term contractor moving from client to client. This is meant to be a permanent role but we just need me to work as a contractor for the time being before transitioning to full time employment. The transition is not expected to come with a role change.",1599603096.0,2020-09-08 18:11:36
322,"Have you ever started prototyping something on your own, gotten attention and approval to build a real feature/product from management, but another dev is chosen to lead it?",53,hvvd5b,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hvvd5b/have_you_ever_started_prototyping_something_on/,18,Is it hard to stay on as a supporting role when you wanted to lead it or did you accept it and were happy with the arrangement?,1595459077.0,2020-07-22 19:04:37
323,Reading Technical Books,50,gy1d14,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gy1d14/reading_technical_books/,34,"At this point in my career I’m in a “senior” role but find myself in a position of not having read very many technical books. I know they’d be great for professional development and general proficiency, but I just can’t bring myself to read them in my off time. 

I’m generally interested in software engineering and programming, and I like solving problems and learning new things. I occasionally enjoy reading technical blogs. But in general, I learn as I need to and absorb “book knowledge” in a secondhand way, mostly by listening to (and participating in) discussions with other more senior engineers, which I’m fortunate to have many in the large company by which I’m employed. 

This has worked fine so far, but I think I need to step it up to continue progressing.

There’s a part of me that also feels bad that I’m not interested in reading technical books. The feeling is that I’ve chosen the wrong industry. I’m envious of coworkers who are seemingly all-consumed by the technical and have little interest in anything else. I mean yes, interest in other areas like cooking, art, etc, all are good in their own right, but I can’t really put those to use in benefiting society and/or making money. 

I’m curious about how many others have bumped up against this, and to hear what you did or didn’t do about it.",1591514856.0,2020-06-07 03:27:36
324,On the importance of physical activity and exercising.,51,gjxvxv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gjxvxv/on_the_importance_of_physical_activity_and/,27,"Hey, I have been working as a remote developer for a year (first job) and I have had almost zero physical activity since I started. The thing is that sometimes I feel heavy, and without energy since I woke up. I am quite sure that it has come corelation to my lack of movement.

I would like to know what you have discovered through out your career about the effects of physical inactivity and I would love to know if you have any advice on it.",1589528264.0,2020-05-15 03:37:44
325,"How closely do you track the deadlines for your different projects? Do you keep a close eye on them, or just ""go with the flow""?",48,g21gt7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g21gt7/how_closely_do_you_track_the_deadlines_for_your/,24,"I've been at my current job about 2 years. When I first started I spent quite a bit of time and energy tracking the progress of my work. I was able to give management and other departments pretty good info on the status of each project. 

However, as I realized that my input to deadlines was mostly ignored, I've been slipping in my diligence. Now I just pick what seems like the highest priority and work on it until it's done. It's a lot less stressful, but also less professional. 

Let me give a quick example. While implementing a new feature for line of business (LoB) A, I was told to stop working on LoB A and instead add the feature to LoB B first. Then I was told the deadline for LoB A was extended for a week. Then just today I was told the deadline for LoB A was being reduced by a week (back to the original day) and asked if that would be a problem. 

If I'd said there would be a problem, there would be some extra emails between project managers and the client, and there's a good chance I would be asked to attend extra meetings. But I can guarantee that in the end the deadline would not be changed. 

I can tell that my lack of information on project status is annoying some of the people I work with, and that could ripple up to my management. But it's also reduced my stress at work by at least 15%. 

Am I being efficient, or lazy?

Or maybe I need to learn a better organization system? Are there good resources for a ""individual contributor"" to learn their project management skills?",1587015851.0,2020-04-16 01:44:11
326,What did you learn from your first job that you still apply today at your current one?,49,dvvx03,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dvvx03/what_did_you_learn_from_your_first_job_that_you/,42,"Just found my second SWE job with a relatively small startup. In my last job I was a new grad and it was information overload as I figured out the basics. I made a lot of mistakes, but I learned a lot too.

I'm in the process of putting those learnings into practice for the second time around. Some of those things:

- Keep a daily log of work done (hard to remember what you did 8 months ago)
- Keep working on self-improvement (technical and non-technical) through conferences, online courses, and blogs.
- Optimize scheduling for coding vs meetings (code morning and nights, meetings around meals and afternoon)

Would love to hear how other experienced devs approach a new role and what they brought with them from past jobs.",1573698507.0,2019-11-13 21:28:27
327,Just started at 3rd company - Salary breakdown and application response rate.,54,aih41v,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/aih41v/just_started_at_3rd_company_salary_breakdown_and/,3,"Hello all,

Company # | Area | Comp | Years
---|---|---|----
1 | DoD | 55-62k + ~2% + 2wks | 4
2 | eLearning | 80-86k + 15% + 3wks | 3
3 | DoD (remote) | 105 + 0% + 3wks | 0.25

I've been on a quest to make average pay. I am in the greater NYC area, so average pay for my years is about $110-120k. I graduated in 2012 and took the first offer I got, which luckily was only after a couple months. I did not negotiate. Most projects here were prototypes and were not used. Great team and great experience though. I left because of the low salary.

It took < 6 months to find another job. I found it via a 3rd party recruiter. I did not negotiate. I started as a mid-level dev on a team of about 6 on a new project and ended up becoming effectively the sole *person* on the project (they removed all QA resources, other devs, and put the PM on ""50%""). Anyway it was too much responsibility and they denied me a raise so, later alligator.

For the current role, I started looking casually for about 6 months, then after the lead of my project left I ramped up more applications. I applied almost exclusively to remote roles (like 3 non-remote in my area that looked cool).

I sent out 65 applications over the course of 11 months. Here's some crude stats of ""rounds"" I made it to and responses (where R0 is responding to the application at all, by a human, to schedule a screen):


 | R0 | R1 | R2 | R3 | R4
---|---|---|----|----|----
Responded | 29 | 12 | 5 | 2 | 2
Responded % of Total | 44% | 18% | 8% | 3% | 3%
Positive | 15 | 6 | 1 | 1 | 1 
Positive % of R | 52% | 50% | 20% | 50% | 50%
Positive % of Total | 23% | 9% | 1.5% | 1.5% | 1.5%

Keep in mind not all companies would necessarily go to R3, much less R4.

I received 2 offers. One after R4, and one after R2. I ended up renegging the first offer after receiving the second out of the blue (maybe someone else renegged?). I did negotiate as my current total comp was higher than their offer. The salary seems to be in the high range according to glassdoor so I am content.

And it's govt contracting so there's no sales team putting a fire under my ass. No production site to be on-call for anymore, and generally just more laid-back. I've been here 3 months and so far so good.

Anyway, that's it. I made this damned excel sheet so I figured I should post about it and not let it rot.",1548146250.0,2019-01-22 03:37:30
328,"Being too standoff-ish in my career? Is it reasonable to not ""boost"" your former colleagues or is that a bad look on me?",52,k44ovx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k44ovx/being_too_standoffish_in_my_career_is_it/,11,"An important part of networking is, you scratch someone's back and they scratch yours. I might have a problem then, if I had worked for roughly 10 years and there's very few people I know that I would go to bat for. I rarely have these ""give and take"" moments. I cannot remember the last time I did something for a colleague to help them on their career. Mostly it's just me attempting to make small talk on LinkedIn to see how they're doing at their new job and most of them are not interested in having a longer chat. 

IRL I don't find people at work to be very interesting. However, all places I worked for have very few employees (and sometimes I was the only developer) so I made contact with very few people. I guess that might have something to do with it? Usually I would have only 3 to 5 people to talk to so I don't have much of a choice and if I don't find them very interesting, well too bad for me, I'm stuck with them until someone else gets hired or you find a new job.

I sometimes feel like an asshole though for not showing interest in helping out my real-life colleagues in their career problems, being career ""matchmaker"", finding jobs, etc. Am I right to think so?  I just like keeping my head down and following tasks at work. At the moment I'm unemployed, so to go to bat for someone right now, I'd have to be a third party connect to a different employer.",1606797603.0,2020-11-30 23:40:03
329,Experienced devs who made the switch to Product Management and then back to engineering: why?,47,gof8jq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gof8jq/experienced_devs_who_made_the_switch_to_product/,7,"Hey everyone, I'm in the early to mid point of my career (5YOE) and I'm at an interesting point in my career where I am considering getting into product management. 

Over the years, I've greatly enjoyed making product decisions and having a voice when it comes to building -- the main principle I emphasize on is *products, not specs*. 

It's for this reason that I'm interested in exploring what it would be like if I were to become a PM. My company recently laid me off due to COVID reasons and prior to that I had been in conversations about choosing between going for a Senior/L5 promotion versus attending PM training. 

I understand that whatever decision I make will be at least 1-2 years in the making as I will need to rebuild some political capital to attempt the transition in the next role. What I'd like to learn is:

**What made you make the switch to PM**

**What you enjoyed about being one**

**What you hated about it**

**What brought you back to engineering**",1590163704.0,2020-05-22 12:08:24
330,Emotion in the workplace,50,fedurq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fedurq/emotion_in_the_workplace/,23,"Apologies if this is the wrong place. 

I've been a developer for 12 years, 9 of which was in a small consultancy and rest in a corporate. 

Recently I was in a multi day meeting which, for the first few days, was going terribly. We were paralyzed by indecision with people going back and forth constantly, people rambling on, etc. After a while people started getting visibly irritated through outbursts and swearing, it was around then we started making progress and came out of the session with some good decisions.

This got me thinking about emotion as a developer. I got my consultancy gig as a graduate 22 year old; it was extremely high pressure environment which seemed to ramp up continuously over the years. If I managed to work something out, or anything good really, I never got much of a reaction and was met with blank expressions the majority of the time. This, in combination with working on customer sites often, I think led me to subconsciously train myself to not show emotion but instead a calm indifference. 

Now I am in a good, friendly team and do interesting work. When I let people know about my achievements, they're really pleased for me but often comment that I deliver the news as if someone had just died. When working through tough issues collaboratively, like that multi-day meeting, I do it calmly but I'm concerned now that I've been emitting an air of detachment or aloofness which people mistake for not caring. I see people react the way they do and it strikes me as unprofessional, but they seem to get on better with the rest of the team and get more results.

Like anything I expect I just need to find a balance. I'm interested in people's experiences on this, have you consciously changed the way you express yourself as a developer to improve?",1583532052.0,2020-03-06 17:00:52
331,How do you deal with undisciplined developers?,54,ewbvz0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ewbvz0/how_do_you_deal_with_undisciplined_developers/,42,"I work in a team of developers, and things generally seem to be a free-for-all in the projects. There are standards and linters, but most developers just ignore them, don't really flag problems up in code reviews, and often commit with no verify to bypass the linters. The team also doesn't really follow agile, they kind of just make it up as they go along. Which appears to be causing lots of problems with delivery and estimating.

Has anyone dealt with projects like this before? How do you encourage developers to adopt better practices and lead by a good example?",1580445652.0,2020-01-30 23:40:52
332,"Best career tracks for ""slow"" people? I'm over 10 years in and don't feel like my career has taken off the ground",47,eascrj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eascrj/best_career_tracks_for_slow_people_im_over_10/,24,"US citizen, graduated in the last decade and got my first software job then. So it's been over 10 years now and it still feels like my career never left the ground. No momentum felt. Or maybe stuck in low orbit or something. However I never worked anywhere close to a big name company, nor for any pay resembling average pay in the US. all my energy has spent grinding in low-paying small companies. 

For the last 6 years or so I have gone back and forth between working for below average pay, and being out of work and exhausting my savings. 

Every month I work on a contract I worry about the next time I won't have a job and having to pay the bills.

I must be an idiot when it comes to street-smarts, for not being able to get financial stability, not even average paying jobs, in a burning hot industry that is software development. 

I'm past 35 and I wonder if there's some ageism playing into things. 

Am I very inefficient in how I used my energy? 

Or maybe I'm autistic and just don't know it? (I'm not into self-diagnosing unlike many people out there self-diagnosing mental illnesses) 

The only conclusion I can make is that I am, for the lack of a better word, ""slow"". Either slow in the head or too naive to understand this world. What's a better career gonna have to be like for that type of person?",1576401333.0,2019-12-15 04:15:33
333,Backend engineer needs frontend advice,45,jvslur,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jvslur/backend_engineer_needs_frontend_advice/,25,"TL;DR: I am a backend engineer who now needs to develop frontend and supervise frontend engineers. Is there anything I need to know that I don't already

Hey there!

My company is slowly porting our frontend which is built on a proprietary GUI builder to React. As the only developer on our team with frontend experience, it is my role to supervise this transition. I have significantly more professional experience in backend engineering such as building APIs and constructing databases, and my frontend experience is entirely personal projects.

My frontend experience is once making a simple app on React Native (which was never released) and then a more advanced React app with more complex logic and a more complicated display.

&#x200B;

So, a few questions:

1. Are there any major trip-ups which are much more important in frontend which i will have never seen?

2. Is there any canonical book for advanced frontend engineering concepts (ideally in react, but perhaps the actual language doesnt matter)? I'm thinking of ""Designing Data-Intensive Applications"" or ""Clean Code"" but specifically about frontend.

3. Is there a good resource going over the major security pitfalls which can happen when creating a frontend?

4. Is it too early to use CSS-grid in a customer facing web application?

5. Are there any very good open source react codebases which I can study to understand good frontend code?

&#x200B;

Any help would be greatly appreciated.

&#x200B;

Thanks!",1605646983.0,2020-11-17 16:03:03
334,"Is normal for a boss trying to ""force"" you to do public speaking?",48,jkk8ok,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jkk8ok/is_normal_for_a_boss_trying_to_force_you_to_do/,50,"EDIT: I'm seeing most of you are engaging more with the ""talk in public"" part than with the ""how my boss behaved"" part. There's a further explanation [here](https://www.reddit.com/r/ExperiencedDevs/comments/jkk8ok/is_normal_for_a_boss_trying_to_force_you_to_do/ganhla5/) on this. tl;dr the project is a hot mess, the way we've been handling our tasks has left me clueless on most of its innards and I don't feel comfortable presenting it for these reasons. And I'm more interested in the reaction of my boss and how to solve this situation. Thanks.

Terrible title, sorry, couldn't think on anything better for this shitstorm.

Joined this big company almost a year ago. I've been working in the same team since and the project I'm working on has been running for over 4 months.

At the end of each sprint, there's a small demo of the stuff we've been doing to our business partner (Someone in a different country that does not talks our language) and our TL had the idea that each sprint one of us would make the demo. 

This started as something voluntary, evolved to our TL slightly pushing people, then resorting to finger pointing by the other team members to push people into doing it.

I talked with my TL about how this stuff made me completely uncomfortable in a 1:1. I did not got into too much detail, but basically the situation (presenting something to someone else in a different language in front of everyone, not about voicing my concerns on a meeting, or giving my opinion on something) makes me feel incredibly anxious and didn't really felt comfortable doing this kind of presentations. He didn't addressed my concerns, but tried to twist the whys and hows to sell me the idea of making the demo.

And today we've been getting ready for the next demo, and basically (in front of everyone on the team) it went like ""Do it."" ""I don't feel comfortable."" ""Come on, do it."" ""Nah."" ""Come on."" ""Ok, if you want, I'll do it, but I don't like it.""

He ended up doing part of the demo (my part included), I'm on the verge of putting my two weeks (was already looking for job due other technical-oriented issues) and we haven't talked about the incident since. 

And I don't really know if I'm overreacting and chose a petty Alamo to die on (in almost 10 years working, I've never been forced to do something like that) or if my boss is just an inconsiderate asshole who just resorted to shaming me in front of the team after I told him about this on the 1:1. I don't understand how he's so hell bent on making us do the presentation to the point of getting to this situation. 

Am I overreacting? Is his fault? What am I missing here?",1604038992.0,2020-10-30 02:23:12
335,Is there such a thing as an ethical company/industry that actively contributes to the reduction of suffering or propagation of truth?,51,jk1ra8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jk1ra8/is_there_such_a_thing_as_an_ethical/,86,I work for a car company. The fuck bro I literally hate every waking moment because i'm not dismantling authoritarianism,1603966800.0,2020-10-29 06:20:00
336,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,50,fvuuq1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fvuuq1/ask_experienced_devs_weekly_thread_a_weekly/,61,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1586189570.0,2020-04-06 12:12:50
337,"Moving to a tech hub much later in your career, how is it different (for better or worse) than when you are in your 20's and less experienced?",51,e2onnw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e2onnw/moving_to_a_tech_hub_much_later_in_your_career/,33,"I've never in 10 years of career work done a Leetcode style interview at a company, with the exception of Amazon. The Amazon interview was 4 years ago but I got butterflies in my stomach about moving so far away from my birth town and got to cancelled the on-site. I interviewed with them a year later but didn't get as far with the interviews that time.

However later down the road in my career is the extra money still worth the more expensive cost of living? Is it unusual for an older adult to move to Seattle or Bay Area for the first time? Despite my age I am not a parent. I'm still as single as I was when I graduated at 24.

It might be my perception of the startups there, but the Bay Area seems to skew young in the workforce pool. Also, most people seem to recommend making as much money as you can *earlier* but I went and took the low paying jobs when I was little and right now I still earn a bit less than an entry level at a FAANG so maybe the extra money (plus RSUs, we can't forget stocks!) seems to still make it worthwhile at any age, would you agree?",1574925181.0,2019-11-28 02:13:01
338,Why is searching for a Senior Software Engineer position such a clusterf*&%!?,50,ahmrfx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ahmrfx/why_is_searching_for_a_senior_software_engineer/,25,"Hi everyone. I'm in Seattle and I am in the middle of round two of a job search. Rounds 1 and 2 both have been an overwhelmingly crap experience, with really unprofessional and frankly unbelievable behavior.

I have collected more rejections in this search than in four prior job searches combined (I have about ten YOE and have worked at four places in that time).

The rejections are often for reasons I can see coming 100 miles away like recruiter mistakes, wrong job descriptions, or just plain (malicious?) misrepresentation.

The people involved, from recruiters to coordinators to the hiring managers and devs themselves, invest almost no time in the process and aren't interested in their own failures or improving. I was cheered recently to read an article titled, [Trouble hiring senior software engineers? It's probably you](https://hiringengineersbook.com/post/trouble-hiring/) \-- which probably says what I'm about to outline much better than I can.

The below is ***entirely optional*** reading, but is a summary of my experiences so far:

So, to give more context, I covered [round 1](https://old.reddit.com/r/cscareerquestions/comments/a17v77/failure_story_no_offers_and_taking_a_break/) in /r/cscareerquestions post awhile back, but it was swarmed by a lot of salty new grads upset that I was getting so many callbacks, so I thought I'd post this follow up here on /r/ExperiencedDevs instead so there's no confusion.

To summarize that post about round 1: I was rejected by 7 companies (four after onsites) and therefore failed *to receive any offers,* and I was 100% sure it was me. I gave up for a couple months and spent November and December having a happy holiday. Then I started up again recently.

As I was thinking back on how things actually unfolded last time, and having some of the same experiences again, and then reading that article I linked above, I realized how shitty companies' recruiting processes are. Here are some actual experiences:

* A big social media company schedules an onsite for me. The Friday beforehand, they reschedule the interview. The Monday beforehand, a different recruiter I've *never* talked to (at this point had invested probably 6 hours on the phone with two other recruiters and a dev for a phone screen) calls me out of the blue and tells me that they decided they want me to come in and interview for **an entirely different position** that I'm not qualified for, and have no related experience. Then, the day before, they cancel it altogether, saying ""something's come up.""
* I do a phone screen at a company that's not really a tech company, but it is a big website that gets 200 million unique visitors per month. They have the phone screen through Karat. The Karat interview feedback comes in with all positive things to say about me including I'm a great communicator, I scored almost all points on the knowledge section, and I solved one problem with an optimal solution and almost solved a second problem with an optimal solution. All within an hour. Result? Rejected because (I had no idea) they need two problems solved optimally within 40 minutes. I'm not even sure that we had 40 minutes for the coding piece in that hour.
* I go through a big (and old) software company's process to get to an onsite for a Sr. Software Engineer position. When the coordinator sends the schedule two days before the onsite, though, it shows ""Software Engineer"" title on it, with a link to **a different job description**. I called them out on it. I said I hope this gets sorted. No response at all. After I went through the onsite, they call me to discuss offer details. The offer details are all in the 2 YOE range, nowhere even near what I already make at my current (underpaid) job. When I tell the recruiter on the phone that the offer must be for Software Engineer, and that I have the email here that says I was interviewing for Senior *which is from her*, and that's what I always thought I was interviewing for, her response is, ""So are you making that a hard requirement?""

So WTF people? Is this how it is once you hit the senior level?? It's been a couple years since I did a job search, but in my last job search I had totally reasonable interviews and interactions that left me wanting to work at peoples' companies, and I chose one, which has been really good except for not keeping up with a competitive market salary because Seattle has had a flood of all the Big N coming in.

&#x200B;

EDIT: Oh man, I totally forgot to tell the most egregious one. So after taking a phone screen for a pretty well known FinTech startup, I got an email that says, ""Congratulations! We'd love to have you come in to our Maryland building for the on-site."" Bla bla the coordinator will reach out. ""Please send your availability so we can schedule."" OK that's great! I try to figure out where the Maryland building is in Seattle because I've never heard for one. I send them my days I'm available the next week. A day later when the onsite schedule comes from the coordinator, the actual address of the building appears: it's in Maryland. *The state.* *Across the country.* I went back and forth with them, to find the clarification, *yes the job is in Seattle it's just that the team hiring is in Maryland.* ¯\\\_(ツ)\_/¯",1547938913.0,2019-01-19 18:01:53
339,"Anyone else ever have a ""I wish I did that language stack..."" moment?",47,joot94,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/joot94/anyone_else_ever_have_a_i_wish_i_did_that/,107,"Guess it sort of came up when job searching, but sometimes as someone who has been focused in C# / .NET, I run across some job that is close by that sounds great, but uses Java and wants some person with years of experience in it.  So you're sitting around after just buying that book on Angular 9 that is probably already partially out of date, and then thinking to yourself: ""I should go download eclipse and start writing java!""",1604631954.0,2020-11-05 22:05:54
340,The system design interview: what's it all about?,50,hwikoi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hwikoi/the_system_design_interview_whats_it_all_about/,26,"So I've been wondering about system design interviews in general especially because I've never really had interviews before that solely focused on designing systems. It's only in my current job search that I'm being asked to do it by some organisations I'm applying to. I had one company that I did impress, and other company who rejected me stating this area was my weakness. I've been reading materials I can find online, but I feel like the area of system design itself is just too broad, and it's so easy to get lost in some rabbit hole along the way. 

I guess from the perspective of either the interviewer or the interviewee, what exactly are we looking for during this interview? As interviewees, what skills do we need to be able to effectively demonstrate as we walk through the solution? Do interviewers look more for breadth or depth of knowledge in this area, and if there's a sweet spot somewhere the middle, where could it be? I know the questions are also open-ended, but is there a general framework for directing conversations around system design? Are interviewers expected to make this more collaborative experience than the usual asking of challenging algorithmic questions?",1595549973.0,2020-07-23 20:19:33
341,Would you join a 30-person startup (with 8 engineers) as a CTO?,47,h0n02s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h0n02s/would_you_join_a_30person_startup_with_8/,57,"I don't have this option but I'm curious: how many Experienced Devs here would leave their current job to become CTO (and be Engineering VP) at a startup?  Let's assume that the total compensation is about the same.  Let's say that the startup has been around for a few years and probably isn't going to be the next Google or Facebook; it's just a run-of-the-mill startup.

Pros: You can put CTO on your resume.  You can have a mostly free hand in running engineering as you see fit.  You can be more independent.  You would get to exposure to different skills.

Cons: The startup might fail and you'd get a pay cut or lose your job.  You would have to manage engineers.  You would likely have to work with newer engineers; your startup would not be able to recruit the best, most senior engineers.  You would have to interface with your CEO on some things that would be unpleasant.

Would you like to have the CTO experience or skip it?",1591860224.0,2020-06-11 03:23:44
342,What has this Epidemic tell you about your dev career?,44,g4jjne,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g4jjne/what_has_this_epidemic_tell_you_about_your_dev/,77,"My company is going through some ""restructuring"" exercise and naive me thought that the development devisions are too critical to let go (there are many devisions as there are for different products) - I found out an entire department filled with developers and managers were let go last week ... 

Anyone else care to share their experiences based on the current epidemic?",1587374359.0,2020-04-20 05:19:19
343,How much work is too much work?,47,fye6ft,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fye6ft/how_much_work_is_too_much_work/,30,"I have been working for a startup for months now and I am not sure if it is too much work or normal for startup. 

Since now we have wfh, it is practically takes almost all of my weekday. I would wake up at 9 am, grab breakfast and shower. Then work until 7PM the earliest. If something is wrong with the production or development server, I have to attend to it. Usually after hours, maybe at 9 PM, other employees would ask me questions about the things that I built and I have to attend to them. So it is not uncommon that I have to work until I sleep. And sometimes I have to work during weekends to catch up deadlines and deploy things.

Despite all of these, I am still behind on deadlines. Is this a normal day of someone who works in startup? I am only used to larger companies.",1586546574.0,2020-04-10 15:22:54
344,How quickly do you usually do code reviews for your team mates' pull requests?,49,f98icg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f98icg/how_quickly_do_you_usually_do_code_reviews_for/,59,"I usually would prefer to do it after I've finished my things because I don't like switching context in the middle of what I was doing. However, my peers would often bug me every now and then at my desk or on Slack with ""*can you help me to review my PR?*"" right after they have created a PR.

I often get very annoyed by this. It feels as though like there is a hurry to get their work pushed into production on the same day they create the PR so that they have something to tell during the standup in the next morning. But, dude, I've my own things too and I haven't finished my stuff!

I don't even bug my peers to review my PRs so quickly because I understand they may have other things to do at hand. But, somehow, everyone else just expects the rest to review their PRs asap.

Sometimes, it gets so annoying that I just approved it without reviewing much to shut the bugger up because I'm so busy and yet he keeps asking me repeatedly a few times in a day.

**Edit:**

Many replies mentioned that they are able to do the review as soon or whenever they have time. I'm not sure how much time people usually spend on PR reviews but I usually spend at least 30mins to an hour to review a PR thoroughly either because I may not be familiar with that particular part I had to review or the PR is too long. I may take even more time if it was a complex PR.

The thing is, I may not be familiar with the part that I'm reviewing. I'm also not expected to just review for coding styles, but also to see whether I can catch any bugs in the code or check whether any of the requirements or logic were missed out in the PR. All of these, sometimes, feels like I'm almost mentally re-doing the work because I have to understand every lines of codes and the context.

When I'm really thorough in my reviews, I can take up to 2 hours or so to finish. That's why I have found PR reviews to be very distracting because, 2 hours later after the review, I need another 1 hour to recollect where I left off before I switch over to the review to resume on my work.",1582656554.0,2020-02-25 13:49:14
345,Management constantly attempting to create a system to turn developers against each other. Is this normal?,49,end88q,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/end88q/management_constantly_attempting_to_create_a/,37,"As I view it, it's only natural for management to attempt to squeeze as much productivity as possible out of the ones who produce. In my team, my manager keeps bringing in initiatives to attempt to squeeze our productivity by introducing competitive processes designed to have developers one-up each other. Think of something like your employee of the month award. Recently, my manager attempted to introduce yet another system to show he 'listened' to the feedback developers gave to the manager which consisted of developers wanting more feedback in general. What they really wanted was for management to have a clue on what the developers are doing. Instead, the manager twists this and attempts to turn us against each other by bringing yet another system where developers give 'feedback' to each other and every month the manager announces people with the most positive feedbacks. It isn't exactly like that so that I don't out myself but it's something similar designed to encourage competition instead of cooperation. Everyone's too chicken in the meetings to express disapproval but I know they don't like it.

Having to shut these ideas down in my one on one's with my manager is getting tiresome as well as ensuring developers are on consensus in regards to what they think about these initiatives. I have to act like a quasi-union boss to measure how much support I have to shut these down during our lunches and informal conversations, which I usually do have support. I shut them down by pointing out the flawed incentive structure and typical arguments on how team members cooperate and coordinate as well as encouraging other team members to bring this up on 1 on 1s if it comes up. I just want to get my projects done, as do many developers and let us be motivated by promotions and annual reviews and continue the incentives to work together instead of trying to one-up each other. I feel like I'm making the same arguments over and over again and I really don't want it to get to the point where I have to mention the word 'attrition'. Manager doesn't get the hint what I really mean when I say our team values collaboration. I'm talking with other companies because I expect Amazon to screw me in the annual review anyways with my manager also showing signs that he's probably not going to fight for me but this may be yet another reason to leave. I'm wondering if this is normal to senior devs/tech leads in other companies and I just didn't see it before as a junior developer or I should just leave immediately once I get a better offer. I really like my teammates but management is a headache like this sometimes.",1578805344.0,2020-01-12 00:02:24
346,My coworkers aren't reviewing my PRs,49,d0ji0k,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d0ji0k/my_coworkers_arent_reviewing_my_prs/,46,"When I work on a project, I break it down into lots of little pieces and work on one piece at a time (sometimes they're parallelizeable, sometimes not), and open a PR for each one of them.


I keep the PRs small and well scoped, and when there are changes in the PR that aren't immediately obvious I make a comment in the PR explaining the necessity of the change.


I tend to think I've done a good job: I've made my PR small and explained it well, this should make my reviewer's job really easy.


And yet, the PR sits and gathers dust and the occasional merge conflict because nobody looks at it. I've had this problem in a couple of jobs now. If I ping my coworkers, they'll usually take a look, but with all of the small changes I make, this means I have to ping them all the time, and I try not to do that because I want to respect their time and I realize they may be busy with their own thing.


Has anyone else run into this kind of issue? How have you dealt with it, or how might you deal with it if you ran into it?",1567818620.0,2019-09-06 21:10:20
347,What makes for a good code review?,48,bxr5gx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bxr5gx/what_makes_for_a_good_code_review/,22,"I am an Engineering Manager leading a team of about 8 developers, from SDE1 to Staff level. I've noticed that off late the quality of our code reviews has gone down significantly - mid level engineers spending lot of time arguing about things that should not be the focus of the code reviews - e. g. variable names, code styles etc.  In doing so, they are also not paying enough attention to the overall architecture, correctness, maintainability, testability etc. for the code they are reviewing. This is confusing younger developers and frustrating senior developers.

Senior developers on my team and I are looking to host an intervention to coach on the kind of things that they should focus on and things they should let slide. I have my own list of things, but wondering if there are some good resources that I can point my team to. 

What are your favorite resources out there that you turn to, that could be helpful in showing someone what a good review is? Appreciate any help.",1559915774.0,2019-06-07 09:56:14
348,"How to approach ""Tell me about a time..."" interview questions",49,bfrtnr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bfrtnr/how_to_approach_tell_me_about_a_time_interview/,33,"I recently did an interview with a FAANG company and was surprised by how much of the time was spent on ""Tell me about a time..."" questions. I've been to hiring events in the past at these companies and it's typically 4 interviews with 5-10 minutes of soft skills per interview and then 40+ minutes of technical questions. This time was the first time I went where it wasn't a hiring event. There were more interviews this time and 15-25 minutes of each were soft skill questions (with one interview being nothing but that). At non-FAANG interviews I find that I do decently well at answering soft skill questions, but it seems that similarly to the technical questions, the soft skills bar is much higher at FAANG companies. 

&#x200B;

I've worked in enterprise healthcare software for my career thus far and I'm not sure if this is similar at other enterprise companies, but where I work the tech stack is prescribed by an architecture team and every team uses the same tech stack. This makes answering questions like ""Tell me about a project where you chose the UI/middle layer/database/etc. and why you made those choices"" hard to answer. In these interviews, for example, when asked why the tech stack was chosen I explained how tech decisions work at the company I work for, explained the pros and cons of the tech stack chosen, but was then asked why we ultimately went with that tech stack. So I just had to repeat the same answer that the tech stack is decided above my level and the entire company uses it.

&#x200B;

There were also questions along the lines of ""Tell me about a time you made an unorthodox decision"". When the tech stack is prescribed, the range of unorthodox decisions an individual can make are somewhat limited, so I gave an example of a project I worked on, not work related, with a local business. They seemed interested, but then pivoted the questions back to work decisions.

&#x200B;

Another question that I probably didn't answer in the best way was something like, ""Tell me a time you had to make a decision without manager input. What was it and how did it go?"" At the company I work at managers have a lot of direct reports and it's not uncommon to go up to a month without even talking to your manager. So I explained that and said that essentially all decisions made by myself or the team are without manager input and we have X and Y ways of coming to a consensus and that in general, it works without issue. That answer didn't seem well received and I understand because I essentially side-stepped the question. I guess I could have chosen a specific example, but that leads me into the next question of...

&#x200B;

""Tell me about a time you pushed for something. How did you go about doing it and what was the result?"" Again, when the tech stack is prescribed, there's only so much pushing you can do. So I gave an example of a time where I pushed for using X UI design instead of Y, where Y is a more common choice made in my company. I explained why I thought X was a better approach, how I went about convincing my team, and the positive outcome. They seemed unimpressed and I have no way of knowing why, but my guess is because it wasn't a bigger decision. At the company I work at each project can be hugely different from a business knowledge perspective, but is essentially a small variation of the previous one from a technical standpoint. Unfortunately for me, they seemed much more interested in the technical aspects, though I can understand why.

&#x200B;

From previous hiring events I knew that my work background wasn't the most ideal for transitioning to a FAANG company because the difficulty in my job is more about determining business requirements than solving challenging technical problems. Since I knew that I had been practicing problems on sites like LeetCode to try and compensate. What I didn't anticipate was my work background making it more difficult to answer soft questions (since I hadn't had many issues at non-FAANG companies). Through conversation I found that at least a couple of the interviewers had only ever worked at this FAANG company and after learning that it made more sense that some of the questions seemed very specific to how their company works.

&#x200B;

I guess what I'm wondering is, is this a different worlds issue of enterprise healthcare vs. web based companies and having your work driven by government regulation and large customer demands vs. being more self-driven(?)? Or were there ways I could have approached these questions that would have satisfied them? And if the answer is some of both or the latter, are there any resources you recommend for better preparing (a la LeetCode, but for soft skills)?",1555899564.0,2019-04-21 22:19:24
349,Scrum master joins pair programming sessions,45,ix2zlg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ix2zlg/scrum_master_joins_pair_programming_sessions/,42,"So throwaway for obvious reasons. We got a new scrum master. Currently we are all working from home most of the time.

They are a bit naggy such that they were asking people what they were doing between certain times in the day during standup etc. I raised it but in the end we are a small team and it is what it is. There were other things that they did which I would not reveal because I want this to remain anonymous since some of my co-workers are also redditors.

Anyway we recently started doing mob and pair programming. While on the face of it they are okay with it, they sometimes just join these sessions randomly. I find this a bit off since if they are not programming and not contributing to the discussion. They are just there. At first I assumed it was just curiosity and not anything else. But this hasn't stopped and it makes me feel like I'm being observed. It almost gives me a Panopticon vibe.

My question to you respected seniors is, am I being a little insecure Junior dev and need to grow up, or is this something that is not normal?  


EDIT:  
To clarify, I think they are a not doing this intentionally and this may just be one of those things where they don't have experience with this stuff.  


Also they were new but it's been almost 6 months since they have joined now.",1600732137.0,2020-09-21 19:48:57
350,"FOMO at a later age for not working in the tech hubs, anyone experience this?",49,gvq0lx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gvq0lx/fomo_at_a_later_age_for_not_working_in_the_tech/,113,"I live in Chicago and the tech jobs here are distributed mainly by trading and fintech companies as the most notable companies, then some logistics companies, and finally agencies for most of the rest of the jobs. It's not too bad but it's easy to stick your hand in some crap where you have to jump ship every 2 years if you don't want to get stale. It's easy to become a 10x1 engineer [(see relevant topic)](https://old.reddit.com/r/ExperiencedDevs/comments/gvfuvq/how_do_you_know_if_youre_on_a_path_towards_having/) if you're not careful.

Also I'm not making as much money as I could be in the tech hubs. About 10 years in and I can't even afford a down payment for a decent home. So yes, this FOMO partly about joining certain companies, but it is mainly about money. I don't think I've even seen a Chicago company giving out RSUs as part of their comp package. What's it like moving to a tech hub when you're older? Did you experience any ageism at all? I am not planning to settle down at a tech hub, just live there for 5-10 years to earn higher salaries, cash out my stock, and then move back.",1591201671.0,2020-06-03 12:27:51
351,"Leaving my startup because of red flags, after only 9 months, what should I tell to recruiters?",46,gqteaz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gqteaz/leaving_my_startup_because_of_red_flags_after/,28,"Hi,

I am seriously thinking about leaving my 10 employees startup, after 9 months, because of many red flags. (**advice: do look for red flags when you apply to a startup**, just google ""startup red flags"" to find them out).

The main (and only) issues are coming from the CTO who is not very capable of doing his job correctly.

\- **No design sessions**. I didn't do one single design session with him since I arrived. He has no idea what ""architecture / design"" means.  
\- **CTO loves cowboy coding.** He has been cowboy coding for 2 years, which is fine, but now the startup needs to go to the next stage and he definitely can't handle this ""no cowboy coding, no MVP"" phase anymore.  
\- **Very bad manager.**  
\- **He hides his mistakes.** He spends days on the phone with customers and ship some quick fixes without telling anyone, CEO included, what were the problems.  
\- **Team is not growing.** Devs are leaving...  
\- **No code review.** Whenever I ask for a code review, he approves / merge right away and tells me ""Oh I was just on it, haha"". But I know he just doesn't review the code at all.  
\- We have a **huge technical debt**. I know this is inevitable, but because he doesn't know what architecture / design means, he never did so. So system is broken, everywhere. The API design is a pure nonsense, we have like 15 services where only 4 would be enough, there is no coordination between backend / frontend dev...  
\- And, to me, the worst, **he totally refuses to be challenged**. Since I arrived, I tried my best to stay in his shadow and to explain him that maybe, we can work differently, in a more efficient manner. But he always takes it very personally and gets upset. He tries to convince me that because we are an early stage startup, it is ok if not everything is perfect, and that we will work on these topics later (but I know, if we can't work correctly today, there is no way we will succeed when team / product will be bigger...)

I wanted to explain these issues to the CEO/CSO (advice welcome) because I think they don't really know how fucked the engineering department is (I'm pretty sure the CTO is not telling the truth and tries to hide his incompetence). However, because of COVID and remote work, I still didn't have the opportunity to do so. I know they start to feel something is wrong and are upset about our low velocity and low quality code. I'm not sure about the outcome of this meeting but I know I will probably need to leave. Which brings me (finally) to my question:

**What story should I tell to recruiters?**

\- I really don't want to be seen as a quitter. I did try my best to change things but I couldn't. And I really think this whole problem is above me.- I also don't wan't to talk badly about my current employer. I have been only 9 months in this company and I don't want recruiters to think that I am changing my job too fast.

Any advice on this topic would be greatly appreciated.

Thanks for reading me, stay safe.",1590511899.0,2020-05-26 12:51:39
352,"Starting at a new company, how can I succeed in an all remote world?",47,g6pcxn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g6pcxn/starting_at_a_new_company_how_can_i_succeed_in_an/,16,I'm starting a new job soon and I wanted to hear peoples tips for new starters now that we are remote. How can I make sure I succeed and don't get forgotten being remote?,1587686712.0,2020-04-23 20:05:12
353,Have you been seeing an uptick in recruiters reaching out to your work email?,46,ft6tpp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ft6tpp/have_you_been_seeing_an_uptick_in_recruiters/,16,"Perhaps it's a fluke but I'm starting to get a few recruiting emails to my work email address.  Obviously this looks bad for everyone, especially when it's from a supplier.  How do you deal with them?  Immediately black hole the sender?  Dismissive response?  Send up the chain?",1585798140.0,2020-04-01 23:29:00
354,Bored Out of My Mind...But This Economy?,47,fo9t0w,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fo9t0w/bored_out_of_my_mindbut_this_economy/,38,"I've fallen victim to what Erik Dietrich calls the *delivery trap*. Because of the small size of the company, the ambitious growth targets (before COVID-19 struck at least), and the experience imbalance on the team, I've become buried under a mountain of busywork. It's been busy and stressful but at the same time mostly stagnating to my career and just plain boring. The amount of politics on the team and in the company has been immense, and the result is I've been heavily boxed in, reporting to someone much less experienced.

10+ years into my career, I just find most everyday programming work boring. Learning about functional programming, monads, or yet another Web framework just lets me solve the same old problems in a slightly different and/or better way. I'm much more interested in the higher-level stuff these days: architecture and system design, strategy, process refinement, etc. When I read job reqs for most ""senior software engineer"" openings, I can't imagine myself not getting bored in six months or less. And then there are just far fewer principal or staff engineer and architect openings.

Also, if I change jobs now, I also fear being the first to be laid off if the economy continues going south.

If I stay, I'm worried the boredom will lead me to get sloppy. If I go, I worry I may get laid off into a worsening job market. In my personal life, I'm recently single and in a place that's instituted shelter-in-place orders for the coronavirus, so that sucks. What do other experienced developers do?",1585101952.0,2020-03-24 22:05:52
355,Turning down interviews if you don't feel prepared?,45,fb8b0i,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fb8b0i/turning_down_interviews_if_you_dont_feel_prepared/,18,"I've wanted to go to a FANG sized company for awhile now but I've always felt like I wasn't ready so when recruiters would reach out to me I'd turn them down.  In hindsight I wonder if I've been doing this all wrong.  Perhaps I should just take any opportunity to interview at the best companies I can even if I'm pretty sure I'd fall flat on my face?

I've always been afraid I'd get the interview, blow it, and thus ruin my chances of ever working there.  But you miss 100% of the shots you don't take right?  And I've heard that as long as you don't do insanely bad you're probably fine to take another shot every 12 months or so.  I feel like my whole career I've been taking the ""safe"" jobs where I had a lot of confidence I could ace the interview and crush the job but maybe I should be going for these reach interviews since the worst case is I get some practice and best case I get a life changing job right?

Or is there some downside to just taking every interview opportunity?  I've got an email from a FANG company I'd love to work for in my inbox right now and I was ready to dismiss it again but... maybe I should go for it?",1582984825.0,2020-02-29 09:00:25
356,"What are some tips that, from your experience, make oboarding easier and faster?",45,etfne6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/etfne6/what_are_some_tips_that_from_your_experience_make/,25,"Hello guys! I have roughly 2 years of experience in a company, doing mostly .Net development, along with keeping a legacy system( written in a god forsaken old language) alive. I think I can call myself an “advanced” junior, meaning that I can understand the concepts pretty easily, but I haven’t applied most of them.
I am starting my next job as a C++ developer and I would like some tips from you guys, that could help me progress faster in my new role and maybe some tips on what to ask about the company in the first days/month. 
Thank you!",1579924635.0,2020-01-24 22:57:15
357,Google or Home Depot? A difficult decision to make.,47,d5t7da,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d5t7da/google_or_home_depot_a_difficult_decision_to_make/,38,"Hi Experienced Devs,

My total YOE is 6 years.

I have an offer for a ""Software Engineer"" (L4) position at Google:

\- $140k base/year

\- $20k bonus/year

\- $40k stock/year

TC: $200k/year

Unfortunately, the location is in Mountain View, California.

I say unfortunately because I live in Atlanta, GA and work as a ""Senior Software Engineer"" at Home Depot.

My current compensation is basically:

\- $130k base/year

\- $10k stock/year

TC: $140k/year

I've been mulling over this offer for 4 days now and the reality is that I think I will decline the new job offer because:

\- I will be making more money take-home after taxes and COL considerations in Atlanta.

\- I am loved by and have love for the people on my team at my current job. I get honest and brutal feedback about my strengths and weaknesses, great mentorship, and lots of opportunity for self-growth.

\- I am in a position to make major technical decisions about our product and get direct interaction with business partners and stakeholders

\- I do not work on any maintenance code and am working with a team of all seniors/staff engineers on a greenfield project.

\- Although the Google job is possibly more ""prestigious"", I will be performing work presumably at the same scope and level of an entry to mid-level engineer.

\- The tech-stack at Google is mostly internal tooling developed by the company, with the exception of Java as the primary language used for development.

On the other hand:

\- Working at Google possibly could open doors that I wouldn't have been able to know about otherwise.

\- Eventually, the scope at Google would be larger than the scope at Home Depot and would be more technically oriented as opposed to Home Depot.

\- I would presumably get premier technical mentorship at Google and would access to the whole engineering-oriented culture of SV/the Bay Area which Atlanta and Home Depot cannot offer.

\- My growth at Google possibly could expand more horizontally, spanning many technologies and tech domains.

&#x200B;

Edit: A little bit about what each team is doing:

At Google, I would be working on a GCP team and new Looker integrations at Google whereas at Home Depot, I am working in Transportation and Vendor logistics, primarily working with over 12.5M SKUs and how to efficiently ship them out into stores from warehouses.",1568813446.0,2019-09-18 09:30:46
358,Is Software Development Culture Getting Worse?,50,a0qssk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/a0qssk/is_software_development_culture_getting_worse/,30,"*Throwaway account because friends and colleagues know my Reddit handle.*

I don't know if I'm just getting burnt out or if the industry has been changing for the worse (from my perspective).

I'm old enough to have worked at companies that were deeply entrenched in a waterfall development process, and it sucked. Today I feel like Lean and Agile have brought a different set of problems to the fore.

* When business types hear words like agile and sprint, they mostly just think faster. There's a push to crank out features/stories/business value faster and faster. Somehow they want quality to keep up too, but mostly they're demanding more and more sooner.
* Engineers have less autonomy to engineer. The product owner determines priority in the backlog, and they're always biased in favor of features. Getting technical debt addressed or even getting ahead of the debt and developing tooling and libraries that will speed up development long term is an uphill battle against product and management.
* Bootcampers flooding the market means dumbing it down. While many of them can be sharp, their lack of deeper education and experience means theory needs to be explained, and a more elegant solution that requires some knowledge of theory may be disfavored by the team for a less elegant, arguably costlier to maintain solution that's easier for a novice to understand.
* YAGNI and trying to only the simplest thing for the immediate business requirements can lead to emergent designs that back developers into a corner where it becomes cost prohibitive to rearchitect to another approach that might have seemed less ""simple"" upfront.
* Many companies are starting to favor pair-programming and keeping engineers under close surveillance in the office. This reduces schedule flexibility and the ability to work remotely. The close surveillance also sends a signal of distrust and disrespect.
* Many companies favor a smooth talker over someone with deep technical knowledge.

While finding job leads is easy enough, finding an opportunity that actually gives an experienced developer room to keep growing and work on interesting and inspiring technical problems is rare and seems to be increasingly so. No, I'm not looking for my work/life balance to be randomly at the mercy of what some marketing dude decided sounded like a good deadline, and no, I don't want whether I'm working on an interesting greenfield project or endlessly churning through maintenance fixes and simple product features to be at the mercy of a product owner setting priorities.

Sure, we try to discover these things during the interview process, but reorgs happen, and company direction changes, and soon enough, you can find yourself stuck cranking through dull stories, trying to advocate for better practices on deaf ears, and updating your résumé if all else fails.",1543317425.0,2018-11-27 06:17:05
359,How often do you get approached by your non-dev friends to build an app?,42,iallru,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iallru/how_often_do_you_get_approached_by_your_nondev/,47,"All while these friends have no idea how to build an app and although they have a seemingly great idea, they got no capital to start up, no other devs onboard to help and offer you compensation in the form of dividends, shares or to become the CIO of their not yet existent company when it becomes successful. All while you wonder how you will balance your time between your day job and this side project.",1597578036.0,2020-08-16 07:40:36
360,Does any one else feel like a pet monkey when compared with other developers on your team?,43,ht8w9f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ht8w9f/does_any_one_else_feel_like_a_pet_monkey_when/,35,"I’ve been at my current company for about 1.5 years now. Granted, i only worked full time about 6 months out of this time.  Our industry is incredibly complex and highly regulated. It’s very difficulty to gain deep domain knowledge. 

That being said, I still feel like I’m out of my depth when I encounter bugs and support issues. It feels like I might never know enough to solve problems without reaching out to others on my team.

Wondering if I’m alone here..",1595067492.0,2020-07-18 06:18:12
361,How do you estimate the budget for large projects?,45,gzl7dz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gzl7dz/how_do_you_estimate_the_budget_for_large_projects/,23,"This is a topic that fascinates me, as I've seen a couple of different ways to go around it but it always seems like ""wild guessing and hoping for the best"". 

Let's say you meet with a client, and they have a large application they want to build. Using one current project I'm working with, let's imagine that the client already has one web application in place, but wants to get rid of the problems it brings by building a new frontend application and also native mobile applications too.

Now this means that:

* The current API is already in place, but you don't really know how well-made it is;
* The current application, which is highly complex, isn't delivering the proper results;
* There is a ton of data and information you don't know;
* You will need to allocate different resources - designers, developers, PM at least;

How would you ballpark estimate the costs of something this large? Would you make sprint-based checkpoints and charge by goal? Would you use a more fluid daily rate? What would you tell your client in regards to ""when it is ready"", given the sheer amount of uncertainty all around?

Looking forward to hear everyone's thoughts and experiences!",1591730495.0,2020-06-09 15:21:35
362,"My 10 year programming career is unusual, which makes finding another programming job hard",46,ge9zwe,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ge9zwe/my_10_year_programming_career_is_unusual_which/,29,"Going through the list of jobs from college till now:

* 6 months at a startup writing php, html, javascript, and jquery. (I left because sometimes the CEO didn't pay salary.)
* 1 year writing native python (no frameworks) and bash scripting. (I left because new CTO slowly replaced our team with his own people.)
* 2.5 years working in a consulting company, providing services for a proprietary old product called BMC Remedy. (I left out of fear of being pigeon-holed into a dying product.)
* 4.5 years working as an ""automation engineer"" which involved using proprietary software to building scripts that logged into machines, and ran shell scripts remotely. (I left because upper management slowly outsourced everything to India.)
* 6 months working for the federal government in a language called Ada. (I left because how little time we spent actually coding. I had fear of getting too used to the environment, and not being able to do anything outside of government work after that.)
* 1 years coding in Java. The only framework we use is GWT. Everything else is built in-house. A lot of my time is spent fixing those in-house modules. (I am forced to move soon for family reasons and I'm currently having trouble finding a job in the remote location.)

You can tell during my 10 years of experience, I've only had 1 year of recent Java exposure. I have almost no experience using frameworks. Most of my work involved proprietary software that isn't used elsewhere.

Up till now, I feel like I've gotten lucky, taking advantage of the great job environment in the US, that I was able to continue to switch jobs to different unrelated programming positions.

But now being forced to move during coronavirus, I've found it very hard to even get an interview for a junior position.. Even though I'm in a huge city.

It's not like I am a bad programmer.. I am good at programming design patterns.. Though frequently I don't get to use them as my recent work usually involves adding small features to other people's code.

I keep wondering what I should do to be able to get a job. The main thing I can think of, outside of applying more, is to work on some project in github. Though my favorite language is Rust, and even though contribute code there once in a while, I don't think it will help me much with my job search.

Am I just unlucky now because I'm applying during a hiring freeze? Or do I have a legitimate problem with my work history that I need to fix somehow? Should I try and get a master's‽",1588754791.0,2020-05-06 04:46:31
363,I have an engineer who demands for a higher increment because he feels he has done more than the rest. Any advice?,47,fa4zdb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fa4zdb/i_have_an_engineer_who_demands_for_a_higher/,42,"I had a salary review with one of the engineers on my team today as this is required by all managers in the company to do by the end of the financial year.

This engineer has received a pay increment about half a year back. I was not his manager yet at the time. His previous manager gave him the increment. I'm not exactly sure about how the increment came about but he had a 10% bump before his previous manager left for another department.

Due to the increment he had 6 months ago, based on thecompany's policy, he is not entitled to the year end increment in this salary review.

He got very upset about it and he said like he was expecting to have an increment and now he has lost all his morale to work harder. He wants to appeal to me and the management for an increment. So I asked what is his expecting then. He said he was expecting another 20% increment to his pay. He thinks that this would be fair because he felt that he has put in a lot of effort into his job. He even said that that he thinks the system we are maintaining would have fallen apart if either of us (he and I) wasn't on the team. (I know he actually really meant himself only but just included me in his sentence so that it sounded better.) He clearly knows he holds some negotiation power here because everyone on the team is new and he is the only one who had stayed for long enough to know more than the rest. So, he thinks he should deserve a bigger increment.

As his manager, this is putting in me a very difficult situation.

First, I recognise the fact that he has done more work than the rest on the team because everyone else on the team is new, including myself. He has been with the company longer than the rest and he was the only person who knows the system most. I'm a new joiner myself and so I naturally relied on him to help with some of the things in the system while I start picking up the things.

Second, as his manager, I do wish to help him to get his ideal pay range. However, I'm aware that a 20% increment might be a little too much. The average increment on the team is not even more than 5%. In fact, 20% more for him will mean he will get paid way more than me. It's not that I'd mind that he will end up getting paid more than I do but it's not going to be easy for me to tell the senior management to give him another 20% increment just because he did more than the rest on the team. The company has already given him 10% increment 6 months ago and it's very difficult for me to simply justify for another increment of any amount, even a 5% increment.

This is difficult for me because, on one hand, I do recognise that he has done relatively more work in the last 6 months when compared to the rest on the team. I do want to motivate him and maintain his morale. However, it's not going to be easy for me to justify for another pay increment simply because he is working more than the rest. If I were to tell him that he should be contended, I'm pretty sure he would be upset and will think that I'm a bad manager for not fighting for an increment for him. I know he will based on my understanding of him. It's not going to be good for me in the long run too. As his manager, I do wish to help him to get his ideal salary. It would also be an easy option for me to resolve the current problem at hand and in the short term if the company could just give him the pay he wants. But, on the other hand, if I go ahead and submit his request to the senior management and support him and justify it as simply because he had done more work than the rest, it's going to look very bad on me.

I believe the senior management would have expected me to managed his expectations on my end though this would make it difficult for me in the long run. Imagine if he starts acting like he is in low morale or whatever excuses for doing less and what not, it's going to be difficult for me at managing the situation.

Do you guys have experiences like this? Any advice on approaching this issue?",1582799166.0,2020-02-27 05:26:06
364,Lead devs: are you upfront with your team's performance?,47,eza65c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eza65c/lead_devs_are_you_upfront_with_your_teams/,31,"I'm struggling with this one; if I say critical things about any of the staffs that are reporting under me, I'd be seen a nonconstructive or not being a good leader. If I were to say all the +ves, I'd be seen as somewhat of a doormat.

As a leader, are you upfront with performance appraisal such as character of the staffs or other performances to your own boss/ manager?",1580940968.0,2020-02-05 17:16:08
365,"3 years as a dev, anxiety creeps in about my coding skills",46,drr70s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/drr70s/3_years_as_a_dev_anxiety_creeps_in_about_my/,17,"I'm a developer of an established company for \~3 years. I have increasing anxiety towards my coding skills. I'm less and less confident about my technical skills but can't discuss this with my teammates to sound like I'm a bad programmer. I want to ask for advice here.

I'm working a lot on business logic stuff on products. Perf review is okay consistently. However, I find I haven't quite built a project end to end. It seems my daily work is mostly to build upon existing framework, copy & paste codes from one place to another place, from Stackoverflow to codebase. I always have the concern that I might not be able to build a thing from scratch myself. Seems I just don't have a chance to touch the framework of a project.

Recently I decided to find projects to practice my skills to start a new project. The projects seem easy but I find it actually challenging to do. Is this normal for people to feel this way? For example, this project [https://real.dev/task/viral-growth](https://real.dev/task/viral-growth), I spent a lot of time researching and felt I was just out of school and didn't know anything. Is this considered an easy task for any developers who are having a fulltime job? Or do most developers just find it easy to start and build a project from scratch?",1572943010.0,2019-11-05 03:36:50
366,As a Senior SWE what is the expectations of tasks that you receive?,46,df7t6q,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/df7t6q/as_a_senior_swe_what_is_the_expectations_of_tasks/,12,"I feel like when I get tasks they are super vague.  Something like find a way to transfer diagnostic logs to the cloud service by request.  Go make a proposal.   Inevitable the proposal gets torn apart because of the what happens when X occurs type questions.  X being Powerless or no internet or something else out of software control.  The questions are valid questions and just things I had not considered for the most part.

I feel like I'm doing the job of the Product Manager.  At past jobs the Product Manager would have well defined JIRA story about diagnostic logs to the cloud and how it should function in specific cases.  It didn't specify how to do it in software details, but made statements like when no internet is available, logs should be stored and sent when internet is restored.  Storage of these logs does not need to be saved over reboots.   This made it really clear on how the feature should function.  Then it was my job to come up with a software design that meets all of these cases.

Was my past job coddling me by not showing what is truly expected of a Senior SWE or is this new job blurring the line between Product Manager and Senior SWE?",1570603841.0,2019-10-09 02:50:41
367,37 and Worried about career,46,bykcaq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bykcaq/37_and_worried_about_career/,33,"My background: CS degree, around 14 years in total experience, the last 10 years or so in software engineering. Currently work for a big tech company with a regional office, in a senior quality engineer role (which is a combination of QA/devops/automation software development).

Am looking for a lateral move out of the company into a senior dev role, which I've done before, but am worried whether I will be able to hack the pressure of being a senior software dev these days. It seems to vary a bit from company to company, but I take a while to churn out code, maybe a bit longer than the average 20-something dev. I really enjoy it though, and am prepared to put in extra hours out of work learning the tech stack for the right oppertunity. 

The problem is that in the city I'm in, there is a top tech school which is churning out very smart software engineer grads by the bucketload. They are flooding the market and are prepared to work for very little, and they all know the latest JavaScript frameworks etc better than me, and to be honest they are quite a bit more intelligent than me (although would argue, not as clever).

I am wondering how I can position myself strategically so that I have a career for the next 10 years at least. Lots of people have said ""get out of software development, it's just too competitive, it's a young persons game"". However, the alternative career options that branch from senior software engineer just don't look very appealing to me. I do not really enjoy the people-skills aspect of many roles and so would not like to go into engineering management, project or product mangement. I am doing a partly QA role at the moment but that doesn't seem really like a good career either, with lots of offshoring and quite a low technical wage cap before you have to go into management, which I would want to avoid.

I don't have any kids and my wife is OK with it, so I could sell my house and use the equity to fund a course to retrain myself into something completely different.. but I don't really have an idea of what I'd rather do, except maybe traditional networking careers (CISCO) or Finance careers.",1560116654.0,2019-06-09 17:44:14
368,"Given offer, then ghosted after telling them about disability",44,bko1zu,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bko1zu/given_offer_then_ghosted_after_telling_them_about/,50,"I have agoraphobia, so I've been searching for a remote job after being laid off from my previous one.  After a year of searching, I got an offer that was reasonable.  I was prepared to take the offer right away and get to work.  I was very excited.

The offer letter said there would be onboarding for a week in another city.  Since this was a remote job and was advertised as such, this came as a surprise to me.

My options were to make something up, which could come back to bite me, or come clean and tell them about my condition.  Since it's a legit disability and has no impact on my ability to perform the duties of the job there should be no problem.

I made the decision to come clean.  I've done this with other people, but not for a job for which I was already extended an offer.  It's a humbling and humiliating experience.  It left me emotionally and mentally drained, feeling as though I'd made a mistake.

I've heard nothing since that conversation, where they told me they'd have to think about it.  I've emailed, called, not too often but about once daily for days.  They were previously quick to communicate and they had decided to hire me a day after my second interview, so they were working quickly before, but now I'm not getting any response whatsoever.

I know the move is to walk away and never repeat the mistake of telling ANYONE ANYTHING about my condition, since it doesn't affect my ability to do the work.  I just think it's a shame that I can open myself up, lay everything out there, humble myself and have a company do this.

It certainly doesn't seem conducive to a greater acceptance and understanding of mental health and mental issues.

Going back in the closet.",1557022744.0,2019-05-04 22:19:04
369,When did you realise is the development manager's job to manage problematic developers?,45,kg67m9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kg67m9/when_did_you_realise_is_the_development_managers/,37,"From my experience, a lot of the developers, **even the experienced** ones are socially awkward (**and that's fine!**) but this may make it harder for them to deal or even manage other problematic developers (e.g. passive aggressive, making buggy codes, very stubborn, not understanding software models, prone to politics, etc.). I've been reading a few posts here and from my POV, it seems a lot of the difficulties the developers are facing could be solved or dealt with by the development manager/ lead themselves.

But I do understand sometimes the managers themselves tend to throw the problem back to the developers - basically asking the poor developer to deal/ manage it themselves.

When did you realise is the development manager's job to manage problematic developers?  Or problematic developers are something you've been managing throughout your career?

If you don't have a development manager, a team lead is also fine.",1608406187.0,2020-12-19 14:29:47
370,How do you keep and store your notes from meetings?,46,jr12pc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jr12pc/how_do_you_keep_and_store_your_notes_from_meetings/,48,"My team has a daily meeting every morning. The discussions cover a range of topics, some I'm assigned to, many I'm not. However, I'm expected to be aware of all everything discussed. 

I need to be able to answer 2 types of questions, and right now I'm keeping 2 different types of notes. 

1. **What did we talk about on Thursday?**   

To answer this type of question I keep a list of notes chronological order, e.g.: 

*11/5/2020:*  

Topic A: Waiting on client to approve latest proofs.  
Topic B: QA is reviewing right now, they have requested more tests files.   
Topic C: Moving into production tomorrow.   

**2. What is the status of Topic A?**

To answer this kind of question I keep notes organized by topics, e.g.:

*Topic A:*   
11/1/2020: New specs received from client  
11/3/2020: Estimates made, feed back provided to client.   
11/5/2020: Client approved estimate  

*Topic B:*   
10/20/2020: Feature submitted to QA.   
10/25/2020: QA requesting meeting to discuss questions.  
11/1/2020: QA report complete  

Unfortunately this requires I have duplicate notes, the chronological ones, and the topical ones. At the moment I keep the chronological notes in one Google Doc, and then cut/paste them into a separate Google Doc for each topic. 

To track my personal tasks I have a personal Trello board. The team also has a Trello board, but it's not religiously kept up to date. Even if I keep my cards on the team board up to date, people are trained to not trust the team board and ask me directly for updates. People are not interested in looking at my personal Trello board. 


How do you organize your team meeting notes?",1604969074.0,2020-11-09 19:44:34
371,Having a hard time time getting help,45,ihica4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ihica4/having_a_hard_time_time_getting_help/,25,"I’m on a new team at a Fortune 100 tech company. So far, things have been pretty “easy” in that I have an available and supportive team to help me through issues (e.g. when I’m tackling a problem in a area of the stack where things are undocumented and difficult to learn). 

Several months ago, I switched to a new team. 

This team has a much higher bar for performance (not FAANG-level, but close), and I’m realizing that many of the senior engineers either a) don’t want to help me, or b) just don’t have time. 

Yesterday, I stumbled across this interesting post by a Google engineer on LinkedIn:
> If you're going to switch teams or companies then be prepared to get used to learning and finding answers yourself. 

> It is not uncommon to come across people who will not answer any question with more than a few words. 

> Spending time in helping others get up to speed requires a certain level of selflessness. Without some kind of motivation (like a bullet point in a performance review), not many are going to be willing to put in that extra effort. 

> Also, the more competitive the environment is, the less likely people will have the time to invest in others since everyone will be fighting their own uphill battle. 

> If we're staying in the same team for a long time, then this is only an initial barrier since over time we build a good understanding of things we've been working on. If not, then being able to read code, debug things, and understand stuff on our own, is crucial for survival in the industry.

This 1) makes me feel sad, because I love collaboration and solving hard problems without any help can be lonely, and 2) makes me excited, because I’m learning how to be a leader and solve problems on my own.

Has anyone else ran into this challenge? 

If so, what are your thoughts on the [post](https://www.linkedin.com/posts/hasankhan_if-youre-going-to-switch-teams-or-companies-activity-6704596607402422272-cTco) copied above?

Do I just need to embrace the suck or find a team with a lower bar?",1598551502.0,2020-08-27 14:05:02
372,"We use JIRA/sprints to track work and have daily stand up, but the new Software Team Lead still demands we have weekly status meetings as a team.",47,gzy3dc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gzy3dc/we_use_jirasprints_to_track_work_and_have_daily/,50,"We also have to fill out a table in confluence with the status of tasks.  Status being X/Y/Z documents updated for issue X, code change made for issue X, code review completed for issue X and so forth.

We mentioned during retrospective that we saw a lot of things the new (4 months) Software Team Lead implemented as redundant to what we were already doing and she got super defensive.  She said status meetings are for her to know what everybody is doing and the status of work so she can report that up the chain.  When it was mentioned that she should be be able to see that from daily stand up and the current sprint board she seemed uninterested saying that she didn't want to go digging everywhere for it.  Some people feel like we are doing her work in managing and we think she thinks we are trying to get her to do our work.

A bunch of us got the feeling that she had a just suck it up and deal with it mentality which we didn't particular like.  When mentioned to her boss who was our former Software Lead he seemed to support her even though he implemented the Agile processes we do today.  Oh and the new Software Team Lead is supposedly an Agile guru, but we don't see that at all.  She isn't doing anything agile from our perspective and in some ways being anti-agile.

When it was also brought up that status should be a 2-way street and we would like more high level project information she just shot it down as status being for her and not us.   She said if we had specific questions about the project she would find answer, but it was made pretty clear she is not going to keep the team in the loop to big picture stuff and we had to ask if we wanted to know anything.

There are other examples, but I think people get the idea.  Is there anything I can do about this or is finding a new job the only way out?",1591771129.0,2020-06-10 02:38:49
373,Worried about my eyesight,45,gz6bpz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gz6bpz/worried_about_my_eyesight/,36,"My eyesight has gotten significantly worse since I started programming full-time 4 years ago.

What can I do to take care of my eyes?

Are there special lenses that would help?",1591674143.0,2020-06-08 23:42:23
374,Time to fill in some knowledge gaps,44,fpbexv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fpbexv/time_to_fill_in_some_knowledge_gaps/,26,"I did not go down the traditional CS degree path (went IT instead). For the most part that hasn't been a huge issue in my career, and it definitely helped me in other regards. However, after years of development, I still feel like there are major gaps in my knowledge of some core concepts like algorithms, design patterns, and general software architecture. 

I can make my code work, but I want to make my code *better* if that makes sense. I'm not currently looking at how to do things in X language or Y framework, but more of the general language-agnostic concepts that I feel I'm lacking in. 

I have three books that I think would help. This is not exhaustive, but more of a starting point. Any thoughts on these? (I primarily work with Java which influenced some of this list)

* Head First Design Patterns - Freeman, Bates
* Clean Code - Robert C. Martin
* Data Structures and Algorithms in Java (2nd Edition) - Robert Lafore


As a side question, was there any particular resource that you feel had a substantial impact on your overall growth as a professional? I would love to hear what helped people get past that junior/mid-level battleground.",1585257804.0,2020-03-26 17:23:24
375,What's your review culture like?,46,ekxp9k,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ekxp9k/whats_your_review_culture_like/,43,"I've worked in a bunch of different places and seen a bunch of different review cultures. Some were more superficial, essentially using the PR as a merge mechanism, some were more meaningful. Some would let anyone review anything, others were more selective about who was authorized to review. I even had one where I needed manager approval just to *open* a PR, ugh. All the ones I've been a part of did pre-commit review, although I've heard of cultures that do post-commit review (mostly from people coming from Apple). 

So, r/ExperiencedDevs, what's your review culture like at your current job? Specifically what works well, what could use improvement? And what worked well in past review cultures you've been a part of?

Edit: Follow up question: what sort of turnaround time is there for reviews?",1578362639.0,2020-01-06 21:03:59
376,"8y ""experience"" but I feel like I doomed my career.",45,ejkw0a,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ejkw0a/8y_experience_but_i_feel_like_i_doomed_my_career/,31,"My career has been 8 years of mostly small projects in dead or obscure languages and never being able to stay at a job long enough to become much of an expert at anything since either the company would close or layoffs would happen.  (I worked in games, volatility is very high)  I don't think my skill set is that much better than a college grad with an internship or two under their belt at this point.  I know nothing of databases, very little web dev, and nothing approaching a real ""tech stack"".  If we want to use LeetCode as a metric, it can take me an hour or so for an Easy and 2 or more for a Medium.  I want to leave games and go to anything more stable, probably finance since I'm near NYC, but I feel like I'm so far behind where I should be 8 years in that the expectations are unattainable for me now.

Do I attack this like a new grad and grind LeetCode/CTCI/EPI/etc and spin up some personal projects to give myself the needed experience?  Do I consider a bootcamp to get back up to speed with more relevant tech or is that insane for someone with their CS degree already?  Have I shot myself in the foot too hard at this point that I'm just screwed?  Or am I just completely over thinking this?

I was recently laid off (again) but I have some savings to last me for a year-ish so I have some runway to study hard or make some big changes if I need to.  I just feel so lost and overwhelmed with the amount of stuff I feel like I have to know to leave games and go into any other industry.",1578110776.0,2020-01-03 23:06:16
377,What are your manager and product owners like?,44,eaf2dg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eaf2dg/what_are_your_manager_and_product_owners_like/,19,"I work on an integration team that is building a microservice structure to bridge my company's areas together.

My team is dysfunctional. The product manager and owner are constantly shifting priorities and slapping our wrists for working on tech debt when our backlog dries up. I will acknowledge that all the devs aren't perfect by any means, myself included. We just want to build but management won't stop getting in our way.

We inherited a web service that requires a lot of manual intervention. It usually takes two devs 2 hrs to do this manual process. We have a proposed solution to fix this issue but my manager will not prioritize this problem.

I've heard it's common for managers to disregard tech debt but I feel like my team is in shambles right now. We can't fix anything until it causes a production fire. The ongoing support makes my team feel like a support team and it's frustrating me.

I'm contemplating posting for another job within my company or applying for somewhere else. I enjoy the dev work I do have when we aren't swamped by prod support, we've been doing this manual process for close to a year and I can't take it anymore. 

How does your team handle tech debt? How controlling are your pm and po?",1576325532.0,2019-12-14 07:12:12
378,What's Improved and What's Worsened in the Industry Over the Years?,43,auaex4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/auaex4/whats_improved_and_whats_worsened_in_the_industry/,21,"For software developers, what's improved and what's worsened over the years? I'm including everything from underlying ideas to languages and tooling to process to overall professional opportunities.

**My Take**

**Pros**

* Software engineering practices that promote maintainable software  have gone mainstream: unit testing, recognizing principles like SOLID, using source control, etc. Some of this is facilitated by the next point.
* Tooling has improved immensely. I started teaching myself programming in the '90s, and back then, syntax highlighting and some code-completion features were already around, but free and open-source software was still very much niche back then, and IDEs generally cost gobs of money (Microsoft and Borland). There were no cloud-based build servers. Beyond make (and autoconf and automake) and an IDE's built-in workspace-management files, there were no build and dependency-management tools for software.
* The software ecosystem overall has exploded. There are countless open-source libraries and frameworks available today such that many programs are mostly the gluing together of these components with a little business logic added. Back in the '90s, proprietary software and shareware were far more prevalent. Software components were advertised **for purchase** in trade magazines. Hopping on the free software bandwagon meant either downloading a Linux distribution like Red Hat, Debian, or Slackware on dial-up; going into a store like CompUSA or Egghead to purchase it on CD-ROM; or ordering the Walnut Creek CDROM collection. If you couldn't install Linux on the family computer, there was always DJGPP.
* Programming languages themselves have improved. In the mid '90s, the main options were C, C++, dialects of BASIC, dialects of Pascal, Perl for server-side CGI scripting, shell scripts, and languages like COBOL in big businesses. JavaScript wasn't good yet for much else than client-side form validation and some 
* Agile has overtaken waterfall. Say what you will about Agile, but a lumbering, heavily bureaucratic approach to software development presents its own frustrations.
* There is now a wide variety of businesses and organizations employing software developers.
* By necessity, there is a heavier emphasis on security than in more innocent times.
* The industry is trying to be more open to people of a diversity of backgrounds.
* With the popularization of the Internet and cloud computing, there are newer problems of scalability.

**Cons**

* Due to some of the above, a lot of software projects are boringly trivial from a purely technical perspective.
* Bootcamps have pumped out developers who have been trained on a narrow scope of problems but may lack technical depth.
* A lot of people who, in previous decades, would have gone to Wall Street or become a lawyer or doctor have invaded the industry.
* Although there may be an increase in openness to women, racial minorities, etc. getting into software development, there seems to be an increase in hostility towards quirkier people and geeks in the industry. The ethos of ""business"" is more deeply pervading the industry.
* Because of all of the above, more and more businesses are adjusting themselves to organize projects for bootcampers and other junior developers. Developers are seen as ""code monkeys"" or ""crafters"" on an assembly line.
* Because of the above, work has become a more stressful and less fulfilling place to be at many employers: more vicious office politics, a greater focus on managing appearances, unrealistic deadlines, development teams not being on an equal footing with product teams or ""the business.""",1551059501.0,2019-02-24 20:51:41
379,Is assertiveness in an interview a bad thing?,44,kdkrrv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kdkrrv/is_assertiveness_in_an_interview_a_bad_thing/,43,"I know this seems like a common sense thing, but if you assert yourself with an interviewer can it be misconstrued as arguing with them if you don't necessarily agree with them?

How do you assert yourself without getting into an argument?",1608063761.0,2020-12-15 15:22:41
380,"How does your company treat ""quiet"" people?",44,iph8vd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iph8vd/how_does_your_company_treat_quiet_people/,38,"It's no secret that some people in our field are introverts and may not talk as much as the average person and mostly keep to themselves. 

Though I was seen as a non contributor originally due to not actively speaking, I've developed a persona that's more gregarious than usual that refined my communication and engagement skills, which I'm sure will be really helpful later on when I start interviewing.",1599691642.0,2020-09-09 18:47:22
381,"Is ""exact"" capacity planning worth discussing in system design interviews?",44,hzy0df,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hzy0df/is_exact_capacity_planning_worth_discussing_in/,37,"I have been reading s.d. interview questions online. I keep seeing this type of thing calculated:

With 300M users, and if every post is about W kb, we will need Y TB per day of data daily. if every database can store X GB we will need Z instances. 

I feel like this calculation is kinda pointless. All it does is show you took algebra.

Obviously I can discuss the need for partitioning, how to scale, etc...

But without having raw specs of the capacities for the technogies you want to use, it feels a bit like a waste of time to calculate these ""exact"" counts?

Perhaps more loose conclusions make sense, such as: ""we will definitely need to partition this data into multiple tables"" or ""this text is so long perhaps storing it in a file system is a better approach"", ""this X gb video files should be partitioned into smaller subfiles...""

Has anyone every actually been asked to do  exact calculations in an interview? Or is this just a gimmick on s.d. online tutorials?",1596045504.0,2020-07-29 13:58:24
382,Web skills out of date. Fall back to junior developer?,47,gupu4f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gupu4f/web_skills_out_of_date_fall_back_to_junior/,30,"My small network of people seems to have lost interest in me because my skills have gotten more irrelevant over time. I started out my career when PHP was still in its heyday, so I was always working on LAMP based stack projects. Learned PHP, MySQL and some CMS like WordPress, Joomla and Magento. 

Then I went to do some light consulting work with these tools and with the same agency. I had 5 years of experience by then. 3 years later I moved to contracting with a few startups and each time they all used PHP. I think at this time I fell into complacency and by the time I figured that out, I started learning new frameworks like Vue and React but I was still missing some skills. For instance, infrastructure skills became the new ""feature creep"" for SWE's. I didn't know how to set up automation tasks because I never worked for a technical leader that cares about how we set up our development pipeline. 

I read job descriptions for mid level SWEs today and a lot of it goes over my head. I don't expect to be a 100% fit for anything but I don't appear to be even a 50% fit for most things.

You see, ever since my first SWE job, I was given a lot of autonomy on how I did my work. There was not much enforcement on processes, testing, or pipelines so my approach was as bare bones as possible and I stuck to it because that's what ""worked"" at least for a while. It seems like I got all the wrong treatment and technique for fostering a junior developer. Less enforcement etc. seems like the opposite of what I'd do as a manager for someone new.

But with having years of experience I should be able to get up to speed at a new job relatively quickly. Since training happens more often with junior SWEs than others, should I go back to being a junior? I don't mind junior pay as long as the environment is good and the skills I learn is more in demand. Does this actually work for some people?",1591064491.0,2020-06-01 22:21:31
383,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,44,gq73vv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gq73vv/ask_experienced_devs_weekly_thread_a_weekly/,129,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1590423176.0,2020-05-25 12:12:56
384,Am I misunderstanding the benefit of working with a staffing agency?,44,g6mt86,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g6mt86/am_i_misunderstanding_the_benefit_of_working_with/,45,"I just got off the phone with someone who works at a big staffing agency (think Robert Half/Hays).

She asked me to; send her a resume, three references, complete a coding assessment, and meet with her lead. Then she will send my resume to the company where I will have a phone interview, tech interview, and in person interview. All so I can be a contractor for ""at least"" 12 months with a chance of getting hired full time.

Why would someone jump through all these hoops to be a contractor when I could just apply to the large amount of full-time positions this company posts on a weekly basis?",1587677997.0,2020-04-23 17:39:57
385,Would you make this switch?,42,f9u8qx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f9u8qx/would_you_make_this_switch/,49,"Received an offer from M and wanted opinions on whether or not this switch seems worth taking. I am in the application process with other big tech companies but don't have any other offers at this point.

Background:

* In NYC 
* Currently employed as a SWE at a no-name Ad-tech company  
* 8 YOE  
* Focused on Java web application development  
* Have a great manager and great team dynamics  

Microsoft has given me an offer to join Azure Networking team and the day-to-day there is using C to code for hardware devices (NICs, switches, routers, etc)

Detailed comparison:

|                     | Current (Generic Ad Tech Co.) | M                  |
|---------------------|-------------------------------|--------------------|
| Location            | NYC                           | Seattle            |
| Level               | Generic SWE                   | 61                 |
| Base                | $135,000                      | $137,000           |
| Bonus               | 15%                           | 20%                |
| Stock               | 0                             | $120,000/4yrs      |
| Sign-on             | 0                             | $40,000/2yrs       |
| TC (/ excl sign on) | $155,000                      | $195,000           |
| Day-to-day work     | Java web application          | C device interface |

The questions I have left at this point are:  
a) Does a switch from Java web dev to C hardware interface work make sense as a career choice?  
b) Given that I am currently in stable employment with a great team, does the M name brand and potential growth warrant a switch at this point?

Would you make this switch?",1582757079.0,2020-02-26 17:44:39
386,Thinking about disclosing my mental disability - anyone done this?,45,czvglo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/czvglo/thinking_about_disclosing_my_mental_disability/,21,"I've been working for a dev for almost 3 years now, and I've had a lot of suffering along the way. I suffer from a pretty serious case of bipolar disorder. A lot of my medications make me slower to speak and remember words, and it's hard for me to be 100% cheery and focused daily in such a chaotic environment. We are stuffed with about 15 people in a 20x20 room. I'm not sure how I'm being rated, but I'm sure my inability to be 100% in the chaos isn't helping.

I've been at the company for 3 months now. I'm kind of worried that disclosing is going to mark me with a stigma. I'm also worried that reasonable accommodation isn't going to be very helpful for me. Recently I've been pushed a bit by my teammates and I don't think they understand how that affects me. I'm often saying the wrong words or can't be as witty as everyone else.

Has anyone with a mental illness disclosed to HR and received reasonable accommodation? Was it helpful at all in getting your coworkers/manager to be more understanding, or did it mark you with a stigma and people just thought you were causing a fuss?",1567683290.0,2019-09-05 07:34:50
387,I'm moving from a small company to a large company next month. Any books/courses to take?,44,cyidpy,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cyidpy/im_moving_from_a_small_company_to_a_large_company/,15,"I've traditionally worked at companies with less than 50 employees for my 8 years in software development. I've spent 6 years as a developer, and two years as a VP/Manager. I recently accepted a good opportunity at a 10,000+ employee company, and I have a month of free time to learn and prepare for my new role.

My problem is that I know how to do everything in the software development lifecycle, but it's always been more of a 'get it working' environment, instead of a 'let's make sure it's done well'. I've never done code reviews, I've hosted but never participated in sprints. I've never even heard of pair programming until last year. I feel like I'm crawling out from under a rock and there's all sorts of best practices and buzzwords that have cropped up in the last 5 years that I'm completely unaware of.

Are there any recommendations of some books and courses I can read to get myself up to speed with a modern, properly done development environment? Things like functional programming, domain driven design, code review standards, unit testing, and all of the little things that fall by the wayside when you're spending 99% of your time cowboy coding features to keep the business afloat?",1567415994.0,2019-09-02 05:19:54
388,Required reading on giving interviews?,46,cmp500,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cmp500/required_reading_on_giving_interviews/,7,I'm a software engineer who was recently promoted to a role that involves hiring people for SE jobs. Are there any good books or websites on how to give good technical interviews and how to evaluate candidates? I'll be looking at people with anywhere from 0 to 20ish years experience. So a broad topic discussion would be nice to read.,1565118142.0,2019-08-06 15:02:22
389,"My life sucks now, because I made one simple, but major mistake in my career.",45,cjjghr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cjjghr/my_life_sucks_now_because_i_made_one_simple_but/,32,"I didn't treat it like a career. I just treated my career like a series of self-contained jobs.

And holy cow, does one innocuous decision grow into an insidious problem over the years.

I guess it comes harder for some people to shift from the ""job"" mindset to a ""career"" mindset when you realize you are taking jobs because of the college degree you got.

My first SWE job was in 2007 while I was pursuing a non STEM degree. And for the first three jobs I was just expected to do the basics- fix bugs, add new features. And those jobs weren't at any tech focused places. In two of those jobs I was the only developer.

And then it kind of got stuck in my head that all I'm expected to do was the same- just do the work I'm given. And I kept my head down. Because there were no senior engineers to look up to. And none of my family or close friends (I have just a few) have a semblance of a career in the work they do. So I got set in those ways.

Now I don't even get any job offers. People expecting growth in my jobs, understanding of the big picture for the company. I lack all of that.

And in the past five years I've been more unemployed than employed. If the typical developer with experience finds a new job within one month of searching it's 99% likely I am a crappy developer. There's been only one time in my career where I had multiple offers, and that was 10 years ago, my third year as a SWE.

.

I'm the person who [posted this topic along with my resume.](https://old.reddit.com/r/ExperiencedDevs/comments/cd6gan/new_grad_with_cs_degree_in_good_school_vs/) Although I already had known at this point, my job experience is full of red flags. And another problem is because I have several I have no idea where to start fixing them. This is not a problem that you can find easy solutions to, there is no recognition for solutions to these problems online on the internet.

And frankly I don't know what I want to do other than to go back to school and get a proper CS education.

So what's holding me back from doing that you might ask? Only thing holding me back is I have no idea what to do to keep a roof over my head as a 30 something college student who feels more like 18 in life (because I have no sustainable income and don't have my own place)

I'm 36 and personally I don't care if I go live on campus but is that possible now? Or if I stay living with my mom (as I have the past 8 years) she's gonna hate the idea of that. Because I have discussed returning to college with her and she says no, she doesn't want to take care of me for 3+ more years.

.

Other than that, what next? Just continue sending in job applications?They all become a blur to me now. Every day blurs into one another. That becomes more apparent when you don't have a job.  Nobody is thirsty for me, I am thirsty for jobs which is unusual for an experienced developer. 

It's gotten to the point where I don't care about faking enthusiasm for work, I just want a structured idea of how to get out of this rut. *I'm not asking for an easy solution*. I don't believe there is a silver bullet solution for this. 

But I do want the solution to have structure, because my most of my entire life post-graduation has been anything but structured.",1564472591.0,2019-07-30 03:43:11
390,Contract roles to full time,41,io8kdb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/io8kdb/contract_roles_to_full_time/,19,"I’ve been a freelancer working on short jobs/quick website builds/code review for about 3.5 years now, and just landed a great 6 month contract. 

While I’m super excited about landing the role-the pay is great and the team is awesome, it’s with a rather well known retail company-this type of work makes me feel unstable. I’m a single mom and because I live away from most of my family, it’s important that I work somewhere that can provide me stability, I can then in turn provide it to her. 

My contract begins in a few days and runs for the 6 months. When should I start looking for a new full-time role? What kinds of things can I do in this period of time to prepare? How do I list this position on my LinkedIn and resume? My previous positions have been bunched together as “freelancer” on my resume because if I listed every job I had it would be excessive. This is the first “actual” contract working with an “actual” team.",1599518313.0,2020-09-07 18:38:33
391,Looking for less stressful career to get over depressed period,44,i6onrt,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i6onrt/looking_for_less_stressful_career_to_get_over/,25,"Been at my current job as a software engineer for a year. It pays well and my company is hiring like crazy even during COVID. I'm also super depressed and have been for the past year I've been working for them. A lot of my depression has to do with the stress of my job. Just deadlines, and feedback I'm performing at 5 but need to perform at 7 (arbitrary numbers here), are stressful to me, especially since I have some form of depression apparently.

I'm not sure what to do next. I can tough it out another year but it seems kinda like... well who the hell wants to be depressed right? I've also thought of switching roles within the company to a ""curriculum developer"" role because it seems super easy compared to development (they make powerpoints) and the pay is fine (3 figures), but I could hate it I really don't know. Other option seems to be to work at getting better at my current job and somehow that would make me more competent, I'd get less negative feedback and that'd make me a little less depressed. Also of course just trying to be consistent with eating healthy, sleeping on time, etc.

I guess my problem is I just don't know that switching roles or continuing down my current one will get rid of the depression, but I also mainly feel anxiety about work. I told my girlfriend recently ""I just want to bag groceries for a year"" because it'd be so low stress but I'm also high risk for dying from COVID due to asthma and heart issues, and I'd be concerned for the future of my career at that point... I'm not sure what the next step after grocery bagger would be. Overall I'm just unsure of my future right now.

Any suggestions appreciated. I guess if I were to give myself advice it would be to find a less stressful job that pays well but I don't know what that is exactly. I have 3.5 years of software dev experience.",1597027638.0,2020-08-09 22:47:18
392,Should I move on to a new company or stay?,45,hi3z19,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hi3z19/should_i_move_on_to_a_new_company_or_stay/,46,"I was planning on leaving my company and had been interviewing for a couple of weeks now, mostly because of the tight deadlines and poor decisions management takes,and the good boy culture that does OT to deliver before deadline that all the senior devs have(I'm more mid level)

So I got an offer for a Software Dev position from one of the largest companies in the UK, about 25% more money, more holidays , good benefits etc, possibly more interesting tech stack as well(TS,C#,Go)

After giving notice to my current company, they offered me a lead  position for one of the product teams that I had been working on until now. A significant pay increase 40% as well..I just think they are pretty desperate.

What would be best for my career? Working as a lead for a smaller company that is continuously growing, but dealing with tight deadlines and is pretty stressful,or..being just a software developer for one of the largest companies in the country?

What would help me most in the long term?thoughts?",1593479626.0,2020-06-29 21:13:46
393,Are there any books about data pipelines?,44,hac82m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hac82m/are_there_any_books_about_data_pipelines/,11,"I'm looking for a book about data pipelines, such as those built with Airflow, Spark, Kafka, and so on – data transformation steps stuck together into DAGs.  I've searched and can't find anything like this from any publishers. There's a bit online here and there, but not an organized manual, possibly because these systems are too new. Does anyone have a recommendation?",1592368727.0,2020-06-17 00:38:47
394,Learning a Musical Instrument and Algorithms,45,g7wc6r,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g7wc6r/learning_a_musical_instrument_and_algorithms/,19,"I know there are lots of devs struggling right now, perhaps mentally - and I just wanted to throw out a suggestion. A lot of us tend to be highly mathematical; in addition, we like to strive for perfection, in addition to putting our personal touch on code.

I've been learning to play the piano (four months in) and I am absolutely fascinated by the mathematical and algorithmic concepts that exist in its implementation. 

* Learning music? That's a new language.
* Playing a Bach minuet? That's an algorithm (perhaps of the ""minuet""/baroque dance variety).
* Composing some music on your guitar? You're implementing your own algorithm.

It is, IMO, a fresh and deeply satisfying way to enjoy a specific implementation of mathematics. 

Plus, we've all graduated by now, so we don't have to answer to parents/teachers (although I have, and do recommend hiring one), so we can do it for our own enjoyment.

If you haven't, and are considering trying music - give it a try! You might be surprised and rejuvenated.",1587860841.0,2020-04-25 20:27:21
395,Evaluating People,41,fmaz42,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fmaz42/evaluating_people/,19,"I have been a manager for two years and I feel like I have a lot of issues with evaluating people that report to me.

My team has been successful as far as outside forces are concerned, so it is hard to discern between 80% and 100% performance. I generally feel like there is a ""the grass is always greener"" mentality with people where I see every one of the people who report to me's flaws.

But at the same time I want them to succeed and don't want them to leave because of course it could always be much much worse (the grass can be browner?). I exclusively stay away from giving unconstructive negative feedback, so consider myself a ""positive"" manager.

I think probably I have been lucky and have always had good people (only 4 so far) but that makes it even harder to keep perspective.

I guess my real question is: How much and how do you fight for people to get promotions and raises?

Is it push and push and push for people you want to keep, ignoring all flaws? Or is there some way to be objective without throwing people under the bus to upper management?",1584802368.0,2020-03-21 10:52:48
396,How Deep Do Faang Interviews Go Into Data Structures And Algorithm?,43,eea7gg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eea7gg/how_deep_do_faang_interviews_go_into_data/,27,"This is a question for people who have conducted interviews or given interviews as candidates at a FAANG company.

I am a programmer with several years of experience under my belt. I will probably be applying for mid to senior-level positions. I need to understand how much time I need to invest in revisiting Data Structures & Algo before interviewing.

For example, will I have to code Quick Sort on a whiteboard? Or will just knowing that worst-case is O(n2) and the average case is Θ(n log(n)) is enough? Do I have to build stacks, linked-lists, and trees? Or is my time better invested in studying leetcode style problem solving?",1577077073.0,2019-12-22 23:57:53
397,What to do after being let go,46,e9j2gd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e9j2gd/what_to_do_after_being_let_go/,18,"Experienced devs who have been fired, what did you do to get back on your feet, did it affect your job search.  Did you do any side projects to level up before going back out?  Ive been getting bored at my job for a while and kind of slacking and we were starting to run out of significant bugs and feature work so its not surprising that i was let go but even then its a big hit to my confidence.  My team members and senior mentor told me they were happy with my performance and i really like my team everyone was super nice when i left and offered to let me use them as references but even with that i still feel like a failure.

Tomorrow im gonna finish some personal programs ive been struggling to find time for so thats a plus at least",1576155886.0,2019-12-12 08:04:46
398,Is it normal for some leads to say things like they are tired of explaining simple things to you?,44,dmbwkc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dmbwkc/is_it_normal_for_some_leads_to_say_things_like/,22,"It comes of a bit passive aggressive. Is this a sign you’re not meeting their bar and should leave? 

To be honest never had to work with a lead like this. It’s possible I’m in over my head and this is just a normal procedure to weed out what’s considered inexperienced engineers. Even though I have over 5 years of experience, just not with this particular tech stack. 

My minds saying there’s something wrong but I also suffer from panic and anxiety related disorders, so it’s possible a lot of this is due to that. Any clue how I can figure this out?

**Update:** thanks to all those who answered. There’s two schools of thought in the comments. I think in this situation both could be correct but I have control over only one of those schools of thought: what I can do to make sure I’m not doing anything wrong. I will have a chat with the lead and talk to him to see how I can improve the situation and keep his personality out of it. Still happy to hear any other thoughts or similar experiences. Thanks all.",1571923856.0,2019-10-24 09:30:56
399,"Those who rose through the ranks very quickly, what's your story?",44,c24ikr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c24ikr/those_who_rose_through_the_ranks_very_quickly/,16,And would you have any advice for those of us looking to do the same?,1560904853.0,2019-06-18 20:40:53
400,How do you manage perfectionist team members in code reviews?,43,c0dt06,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c0dt06/how_do_you_manage_perfectionist_team_members_in/,47,"edit: We have excellent automated testing, reflowing and linting already in place 

I'm gonna call this one ""The Tyranny of the Opinionated Team Member""

On a team with <10 people. A newish team member makes roughly 10 comments on every PR and a good number of those comments are tasks that are simply that person's preferred style for things like variable names and destructuring etc. This means that team members that won't push back end up doing extra work to keep this person happy. 

It's typical for other team members to make one, maybe two comments or simply approve the PR. 

Management prefers to let the team sort this out. Our team lead is too new to be making waves (kinda still getting the lay of the land). 

How would you deal with this situation? 

My suggestion (that I plan to pitch at the next meeting) is: if you can't get one other person to agree to your suggestion for a change, no task is made for it. As in: you suggest a change, 2nd person agrees and makes a task, PR author makes the change.",1560502224.0,2019-06-14 04:50:24
401,How do you handle your mistakes/poor performance? I struggle with my own.,42,i6vyku,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i6vyku/how_do_you_handle_your_mistakespoor_performance_i/,24,"I should first say I'm a data analyst and not a software developer. I think there is a more prevalence community of developers so I wanted to get your opinion.

I noticed I recently made a mistake on a report and I'm going to fix it. However, whenever I make a mistake it really bothers me. First, I get anxiety from having to break the news to others since they may often get mad, or their opinion of me may change. It also makes me doubt my ability as an analyst.

I'm wondering how experienced developers have learned to deal with mistakes. I'm guessing mistakes happen less as you get more experience, but I'm sure it happens from time to time.

Thanks for the advice.",1597053379.0,2020-08-10 05:56:19
402,My CS Career might be done. How and where did you transition out / switch to?,41,i3jgpv,ExperiencedDevs,/r/cscareerquestions/comments/i0qq16/my_cs_career_might_be_done_how_and_where_did_you/,42,,1596577129.0,2020-08-04 17:38:49
403,Another simple idea for 30 minutes per day: write sentences not code,41,hx0c22,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hx0c22/another_simple_idea_for_30_minutes_per_day_write/,10,"As a corollary to the recent post that suggested reading 30 minutes every day, what about writing 30 minutes every day?

When I started as a programmer, I disliked (maybe even hated) writing documentation. I think just being inexperienced, it was hard to write code much less explain coherently the design or architecture or whatever. I have gotten over my dislike, but I am still not writing consistently. Sometimes I will add comments to the part of the codebase I am modifying. Sometimes I am editing our wiki.

Here are some things that I do write every now and then, even if not explicitly assigned:

1. explanatory comment blocks (like javadoc for a method or class). For pre-existing code, I think of it as potentially reducing tech debt as I am not always sure it is helpful. These will be visible to your teammates if they do any sort of code review.
2. design documentation. Any existing documentation might be lacking or inconsistent with the implementation (hopefully just minor things), so editing or creating more could be helpful to everyone in long run. More often, I am asked to write up something for new feature development.
3. user documentation. For in-house tools used for testing, building, etc. I usually find some of these could use some care and attention.

What do you think you should be writing? Should it be generalized to ""producing content"", excluding code, but including diagrams, graphs, audio/video?  Do you think it should be done differently as in duration or frequency?

Okay, I have spent at least 30 minutes writing/editing this post.",1595620076.0,2020-07-24 15:47:56
404,What does your company use for knowledge management?,42,he7hbw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/he7hbw/what_does_your_company_use_for_knowledge/,66,"My company has a problem where we use the free version of Slack.  Important questions end up scrolling off due to the 10,000 message limit.  We've found that Google Docs isn't a great way to store and discover shared knowledge and we can't afford something like full-blown Confluence.

There's also the argument that we shouldn't even store this information because it will just grow stale. I'm pretty passionate about it because I've found searching and finding information from the past year or so at companies is very useful.

Does anybody else have this problem? I'd hate to go down the road of building my own if there are some great solutions out there.",1592913352.0,2020-06-23 07:55:52
405,"Weird work situation, would like experienced opinions regarding a boss that might have undiagnosed brain health issues (not a joke, I am legitimately concerned about their health and what this could imply for the future)",40,goed0h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/goed0h/weird_work_situation_would_like_experienced/,15,"I am convinced my boss might have brain memory issues, and this has been affecting how code reviews are going.

Requirements seem to constantly change, and they continually contradict themselves on things said not even a week ago. They give me the OK and give me logic as to why something is right, but then in the review they say that it is not supposed to be done like that (despite the fact that the meeting was for the sole purpose of getting an in-person go ahead). 

I am worried they might be getting a brain related health issue that affects their memory, or, god forbid, displaying early signs of alzheimers or possible stroke. 

I want to know if anyone has experienced something like this, and if so, how to bring it up in a manner that does not scream ""HEY BRO, IS YOUR LITERAL BRAIN MALFUNCTIONING??"". They are very intelligent and have been a great boss, so I want to make sure that they are fine, but don't want to insult them by bringing up possible age-related issues.

Can anyone help me?",1590159179.0,2020-05-22 10:52:59
406,How has the pandemic affected your job search and landing a new job?,43,fx59ow,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fx59ow/how_has_the_pandemic_affected_your_job_search_and/,44,,1586376175.0,2020-04-08 16:02:55
407,How to Escape a Mediocre Career?,40,ei4mx5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ei4mx5/how_to_escape_a_mediocre_career/,30,"I went to cheap, state college, and received a CS degree in 2012. I worked for the federal government for over 4 years, but left because the pay was horrific and I wasn't learning anything. I moved into a support engineering role for a couple of years, until I landed another development gig, at another government agency. I've been there for two years now but I dislike it more and more every day. I'm an application developer, but I also have to do GIS work on the side. There's no escaping it. When I'm programming, time flies, but when I do GIS, I feel like I'm in hell. It is just so goddamn tedious to me. I also have no love for the management team and, although we have a union, they are mostly useless and our pay is significantly lower than industry standard. The one good thing about my current job is that I only work 4 days a week, and so the week ends before I burst into flames.

So of course, I'm applying to other positions, but I'm seeing a few patterns:

1. Any ""cool"" company that uses tech I actually want to work on (JavaScript/Swift) will reject me within 24 hours of me submitting my application. I think they dislike my resume because I worked for the government?
2. Any place that's looking to hire a ""GIS Developer"" (basically making geospatial products via code), will have their recruiters/HR person/owner reach out to me, but they always offer low compensation and are very small shops that feel risky to join.
3. FAANG application portals are a black hole to me. My resume goes in and nothing ever comes of it. I have already had my resume looked at various times here on Reddit and it is apparently fine, so again, I think it is the potential ""government worker"" stigma that turns them off?
4. There are a lot of C#/.NET jobs, and I am fairly good at the Microsoft tech stack, but it's always for banks/places that are not tech focused. I have always worked at places where software is not the focus, and it is never really great.

My question to you guys is, what can I do to differentiate myself and move to a position at a company where I can work mostly on software, and software is the company's main product?",1577836721.0,2019-12-31 18:58:41
408,Has a DSL ever solved your problems?,43,dwc1fm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dwc1fm/has_a_dsl_ever_solved_your_problems/,27,"Good morning everyone. I've been reading Martin Fowler's Domain Specific Languages book and was wondering if this kind of thing gets a lot of use in industry. It's a really interesting topic but I've never heard much of it outside of academia.

I get that things like Regex and Make are DSLs that certainly get used a lot in industry, but I'm wondering if you've ever built one, internal or external, and it solved the problem you were trying to solve. Speaking of, what problem were you trying to solve when you built it? Making life easier for devs? Better communication with SMEs? Is it worth learning more about DSLs?",1573778497.0,2019-11-14 19:41:37
409,What are things you wished you'd negotiated but didn't during job offer negotiations?,41,clvk6n,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/clvk6n/what_are_things_you_wished_youd_negotiated_but/,27,"I'd like to learn from the exp. devs' experiences on this one; I'm sure there are times where things got stressful or you've being feeling worn out that you missed negotiating certain things that you'd like to have in your new job.

Mind sharing what these were (and, why it wasn't negotiated during the offer negotiation process?)

Thanks devs!",1564948882.0,2019-08-04 16:01:22
410,3 killer non-intuitive interview tips,42,c5mg92,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c5mg92/3_killer_nonintuitive_interview_tips/,18,"Had my onsite at AWS today and had a great experience. The recruiter who helped me prepare gave me 3 really good interview tips that I thought I’d share with the class: 

1. Use “I” instead of “We”. This shows personal accountability and ownership. It’s non-intuitive because my current job at a fortune 100 tech company literally uses the opposite paradigm (we look for “we” usage as a positive sign of a team player, etc.).

2. Leave out all negative emotion. This is non-intuitive because many professional victories have some emotional component. Like, “I had to deal with an asshole boss” or “I was stuck with a shitty assignment” or “I was super annoyed by this problem”. Yes to rephrasing these, and Yes to mentioning POSITIVE emotion. But nope, leave any mention of negative emotion out. 

3. Ask for a new question. If they ask you about low-level Linux networking and that’s not your jam, say “I’m not as familiar with that area. Could you ask me a question about <insert specific area\>, which is more my strong suit?”. This is non-intuitive because I’m often too scared to say “I don’t know” during interview (because that’s kinda the whole point, to test my know-how!), but passing in this way shows honesty, directness, self-awareness, humility, and clarity of thought.

Hope that helps someone!

Other obvious tips:
1. Seriously, rehearse like a dozen specific situations in the STAR format. They will ask follow-ups and scrutinize the narrative, so make it compelling.
2. Bring a notebook/cheat sheet with whatever you want as reference, and ask to use it if needed during the interview.
3. Bring a list of GOOD questions, ones that show you’re thinking at a deep level. They will leave ample time for you to ask them.",1561560050.0,2019-06-26 10:40:50
411,"I'm not really into ""running a professional network"" in my career, but I also want to be mostly well-off, without having my career be high maintenance. Any advice?",43,bok1x8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bok1x8/im_not_really_into_running_a_professional_network/,13,"Been a programmer for several years, at several jobs, but it seems surprising to some (or many) that I haven't built a good network of contacts in those jobs. I've only been fired once, and not for being a jerk but for being unable to get through a long commute and arriving on time.

I'm aware of the importance of dealing with the human side of things in your career, but there are two worlds when it comes to that. The work world which is everything that happens in your working hours, and the network world, that over-arches your work.

I don't mind the human side in the work world. I know it's impossible to just keep your head down and code in isolation (unless you have a solo dev job which in this case, probably should seek better jobs), and I totally don't mind collaborative work to keep up in the 9-5. I also have client-facing work from time to time. These are all things I consider acceptable for my job.

On the other hand, I find building a network somewhat of a chore, very dry and unappealing. And don't know if it's because of my personality or I just need to get over the hump somehow. But I don't want to end up being marginalized in this profession for not doing so. Like for instance if I lose a job I'll have my work cut out for me because I don't have any friends to refer me. On the other hand, I greatly prefer my career to be low-maintenance! Is it possible without delving into your network?

Examples of what I consider ""high maintenance""...

* Catching up with your former work buddies on a consistent basis (almost like on-call rotation!)
* Taking the ""shotgun"" approach in applying for jobs, quantity over quality
* Playing a hard game of office politics. I don't want to care what people think of me if it's not directly related to my work ability

All of these things take so much energy in an overt manner. I prefer my energy spent to feel more ""transparent"" or second nature if that makes sense. But not in a way that compromises my significance in a role at work or my career as a whole. In other words, putting less in to get the same results. Pipe dream or probable reality?",1557874985.0,2019-05-14 19:03:05
412,16 YOE but unable pass interviews...have failed 7 times...why are these companies not asking realistic questions?!,40,apcov9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/apcov9/16_yoe_but_unable_pass_interviewshave_failed_7/,48,"Hi.

I have a MSCS and 16 YOE. I am a Lead Engineer at a vehicle parts manufacturing company.

I've been requested to apply to some tech companies, and have had 7 failed onsite interviews because I can't solve the damn 'leetcode' questions.

I haven't had to do phone screens because of my experience.

For example one time, I was asked how to check for the uniqueness of characters in a string using only 4 bytes of memory and I blanked because that's nothing I've ever had to do.

I'm excellent at the architectural and design questions (was complemented 4 times at some of the interviews) but that's because those are far more realistic than the other interviews.

I've read 'Cracking the Code Interview' but it's all Greek to me (where I then recognized that question but I don't think that has anything to do with software engineering!).

Practicing on the leetcode website  and whiteboarding does me no good, my brain just can't pick these up anymore.

Any suggestions?

I'm planning to move on after 8 years in this company but looks like everyone in my area is requiring some form of this.",1549889360.0,2019-02-11 07:49:20
413,Brilliant but solitary team members.,39,kd0i2p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kd0i2p/brilliant_but_solitary_team_members/,29,"I have a team member who is a really smart chap, I have oodles of respect for the guy. He's nice, and can communicate his ideas and feelings decently well.

However, he tends to work in isolation whenever he can get away with it, and often comes back with pretty large pull-requests. These PRs often contain quite complex or widespread changes that tend to make the more run-of-the-mill members of the team, myself included, uncomfortable.

When asked to explain his thought process, almost all of the time the changes make a lot of sense. However, there's a little bit of tension building in the team around this issue. 

People are occasionally slightly annoyed that widespread changes are happening that, if counseled, the team would likely have advised against, or pushed a less impactful change. I suspect this is why the guy doesn't consult, ""ask for forgiveness, not permission"" and all that.

Related to that, there's a little bit of ""I wish you had kept me in the loop on this"" style feelings building around this area as well, when the areas of change overlap strongly with other team members. I've certainly felt frustration at having to re-learn elements of the codebase that I didn't overly feel needed changing.

This tends to cause some friction during code-review, as no one wants to tell this guy to throw away all this well written code, but we're also dubious of approving it.

Furthermore, as you can imagine with the nature of largish systemic changes, the refactoring are occasionally somewhat incomplete. I tend to put this down to the person being placed under time-pressure due to the conceptual mismatch between the teams idea of what he is doing, a ""small task"", vs what's actually happening, a larger change to improve the system. Asking this person to put in yet _more_ work to complete this effort, especially when they're already under time-pressure, seems cruel.

This has led to a minor confrontational haze in the air when code-reviews come in from this guy. I can imagine how frustrated he must be, from his perspective, we're stopping good changes to the codebase going in completely and easily, because of what one could easily call fear.

We've attempted, diplomatically, to communicate this conflict to him. From the more technical advice, (please split your PRs up into more atomic chunks, consider a more iterative implementation style with more independent installs into master, etc), to more social actions, like trying to check in with him more to get the lay of the land. While he takes these suggestions well, he's resistant to them. I can imagine why, I also would be in his position. There's an argument to be made that we should all be acting this way, putting a much larger amount of our time into continuous refactoring, the way this guy does.

What do y'all think? Are we wrong to be hesitant on these largeish changes? Have you ever seen a case where a serial refactor-er ""improves""? Should we all try to emulate this guy more, for the sake of the codebase?

All these questions, and more, can be answered in the comments below. :) Thanks for your time.",1607991014.0,2020-12-14 19:10:14
414,Explaining my gaps of time as a freelancer that doesn't get a lot of work? I'm looking to go back to full-time.,40,k9xtil,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k9xtil/explaining_my_gaps_of_time_as_a_freelancer_that/,39,"From 2015 to 2020 I have been on-and-off with freelance work. I'm a freelancer but fail to get work consistently which is why since 2 years ago I been applying to full-time work, but to no avail. 

I have 4 different freelance jobs in this time span and combined they all add up to 14 months, which isn't much compared to the span of time I've been freelancing since 2015. I'm not taking voluntary sabbaticals. I am simply not cut out for finding clients well. In the meantime I'm also trying to get better about how to best present those years of time to full-time employers because I don't want them to think I will jump ship quickly.

**Approach 1: Be up front about my time spent without work**

I took this approach at first, listing my freelance jobs individually under my freelance umbrella as job 1, 2, etc. with their own start and end dates. This look good at first until I started taking on more freelance jobs and got more unwieldy for my resume. Plus, I sometimes have been ghosted on emails when employers ask me where I'm currently working and I tell them I do not have a job at the moment.

**Approach 2: Hiding the time with no work, just say I'm ""always freelancing""**

I also tried this one, with mixed results. On one hand, it made my resume look better, and freelance work appears as a single contiguous block of time. On the other, this also backfires on me. It's of course an attempt to cover a 6-year period with 14 months of actual work. Since each of these jobs are low-priority, low stakes jobs there isn't much to write home about, so I sometimes get questions like ""how is it that you ONLY did all this in 6 years of time?"" and wondering why those years seem lacking for its length of time compared to my older jobs of 1-2 years each, which are just as descriptive as the 6-year freelance period.

So of those two approaches, which should I follow with the most? Or if you have an alternative suggestion, let me know. Explaining 2020 has been more ""easy mode"" because of the competition from COVID-related layoffs. The other 5 years though, ugh, I wish I had a good clean way to present that.",1607568378.0,2020-12-09 21:46:18
415,Public Utility Work vs. FAANG,38,jsa4ua,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jsa4ua/public_utility_work_vs_faang/,87,"I know this is a weird comparison, but bear with me. I need someone  neutral to provide me with advice because I'm jaded, I'm not sure if I'm making rational decisions.  I took a job at a major public utility. Now I'm being hit up with final interviews for all of these FAANG companies after I took the job (I stopped applying to jobs). I live in a large East Coast city and own a house there that I cannot sell for various reasons.  There's an eviction moratorium on rentals.

Current New Job: Public Utility

Location: East Coast

Title: Tech Lead

Pay: around 140k (under market)

Pros: 

- This job is really stable. The company is old and they haven't had layoffs in decades. I probably would not have to ever worry about losing my job. I have a mortgage now.

- *No IP Assignments Agreement*. I own everything I'm doing outside of work. This one is a big deal to me because I wanted to start my own company.

- Really good benefits package including a really high 401k match and a pension. Good free health insurance.

- It's a lead position (good or bad?)

- Big work life balance

- It's near my house 

Cons: 

- The standards of excellence appear to be lower

- The tech stack is legacy

- It's a bit of a step down in responsibilities, because my last place was really understaffed (I had a lot of ownership).

- Pay under market

- A lot of the tech positions under the one I was hired in have been outsourced. The one I was hired into is very likely to be safe.

Other Options on the Table (Final round interviews):


A. An Alphabet company

Pay: 180k base 

Location: Bay Area

Title: Sr. Software Engineer


Pros:

- Really fulfilling work in an interesting area

- Looks good

- Challenging work environment with smart colleagues

- The job itself seems like it has a good work environment

- Financial situation is good 

- Good tech stack


Cons:

- Unclear how long Alphabet will fund this company

- I have to move to the west coast and my house I cannot sell is on the east coast

- Less good benefits package than east coast options

- IP agreement unknown(?) whether it falls into the google umbrella in which case I cannot do anything because google has its hand in too many technical pies

B. Google

Location: Bay Area

Pros:

- Makes me look competent

- Get to work on scaling problems

- Good tech stack

- World class treatment 

Cons:

- Have to move to west coast and house is on east coast

- *IP Assignments Agreement*

- Don't know team ahead of time and work seems maybe less impactful than utilities


C. Facebook

Location: East Coast

Pros:

- Buckets of Money

- It's near my house

- Good tech stack

- Interesting Scaling Problems

Cons:

- My friends all say eww when I say Facebook / moral issues

- This might long term look bad on my resume

- *IP Assignments Agreement*

- Probably work on Ads

D. Etsy
Location: East Coast

Pros:

- Good pay

- Interesting Scaling Problems

- Friendly to minorities

Cons:

- Work doesn't seem that technically difficult or impactful on human race

- Recent headcount questions

- Unknown IP assignments agreement, it's probably not friendly given location




Other Considerations: There's a bit of a class / cultural conflict between me and a lot of the usual tech crowd. I can hide it in exchange for the correct currency but it's a more difficult work environment for me.",1605137395.0,2020-11-11 18:29:55
416,Bored backend engineer who looking to switch paths or find another specialization,40,hd5lna,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hd5lna/bored_backend_engineer_who_looking_to_switch/,16,"I have a Communications Engineering degree and picked up programming as a hobby in my 2nd year of university. Now I have been in the industry for 5+ years and I suddenly have a huge feeling of discontent. Most of my work has been in the backend and payments/banking space and these days I think of myself as a plumber developer who is just joining ready made pieces together i.e parsing web requests, coverting to respective objects, storing in databases. If I'm lucky, I get to do some asynchronous and distributed stuff. I also did a bit of frontend and desktop programming in the past(Angular and JavaFX respectively). 

Nowadays, getting things done do not require a lot of effort especially with the rising popularity of  cloud computing providers like AWS, Azure and GCP. I'm bored of this backend stuff and I would like to switch to a different area of software engineering but I am not completely certain of which path to follow. There are a number of options such as Security, SRE, Data Science, AR/VR, ML/AI but the factors I would like to consider are 
1. How feasible it is to go from zero to hero for someone who is willing to put in the work. This means availability of structured curriculum for potential enthusiasts either in form of a online MOOC or a real university degree (My non CS background makes me feel inadequate sometimes) 
2. Career options. I personally think the backend space is getting saturated due it's low entry bar. Also I live/work in Europe and compensation is not great.

Look forward to recommendations.",1592768511.0,2020-06-21 15:41:51
417,Have you been able to move up from Senior developer roles and what did you move into?,41,gzqnng,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gzqnng/have_you_been_able_to_move_up_from_senior/,29,"I have around 20 years of software development experience in finance tech and now I am stuck in a senior developer role. I don't want to become a manager and I am not able to find any other roles except senior dev. If you have moved up from a similar position, what role did you move into and what skills did you acquire to do that?

thanks",1591749401.0,2020-06-09 20:36:41
418,How to work effectively with remote teams in Europe,43,gxbg76,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gxbg76/how_to_work_effectively_with_remote_teams_in/,12,"I’m a mid-level engineer based in the Bay Area and need to collaborate with teams in Europe.

The time zone difference alone is killing me, which limits syncs to once in the morning and not on Fridays (because they’ve already left for the weekend).

If I put anything “significant” up for review that touches the European stack, it’ll typically bounce back and forth for several days longer than normal reviews.

It’s been frustrating to write a change, wait 12 hours (optimistically, assuming it’s Mon-Thurs), discuss it, and repeat just to iterate on seemingly simple things.

Some of the feedback has also been much blunter than usual, which could be from me being less familiar with their codebase and/or cultural differences. I’m concerned that it could carry over to performance reviews.

Projects with other European teams in the past turned out okay, but I flew to the other office for a few weeks to unblock myself. With the pandemic this just isn’t an option.

How do I improve the process here?",1591414743.0,2020-06-05 23:39:03
419,How do you work with a boss that expects everything to be done ASAP?,41,gib7vn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gib7vn/how_do_you_work_with_a_boss_that_expects/,24,"90% of my job I like. Of course, there are things every person doesn't like about their job.

My boss is a non-technical, non-dev boss. A lot of the time he gets pressured by his bosses, and that pressure comes down on me. This comes out in the form of, 'everything assigned needs to be done asap'. Especially in a time of a pandemic going on, getting leads in from the website is our #1 priority.

Some of his favourite words:

* ""Quickly""
* ""ASAP""
* ""This is urgent""

Etc.

In the development world, we all know that most things - aside from actual quick / small updates  - can't be done 'ASAP' or 'Quickly'. It's just not reasonable.

Example - he wanted a co-worker to build out something that he said, of course, would be done 'quickly'. This project quoted out was 1.5 months. In his head, I'm sure he thought it'd be a few days. 

Another example - he wants our websites to be AA Accessible by Jan. 2021. All 5 of them. Just one website, to make fully accessible, takes *months*. I've confirmed this through various developers as well as myself who has done this before. 

I emailed him yesterday stating that it's a huge time investment, and the email went unanswered.

I want to get through to him that everything he assigns - especially heavier lifting tasks - don't take a total of two minutes to do. How can I work effectively with a boss that expects everything to be done ASAP?",1589318919.0,2020-05-12 17:28:39
420,What are reasons some of you decided never to move on to being a lead?,42,ezs9lj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ezs9lj/what_are_reasons_some_of_you_decided_never_to/,31,"Also, if that’s the case, and you’ve come to the conclusion you wouldn’t want to be a lead, what other career progression paths are there for those who chose not to go down TL route?",1581024058.0,2020-02-06 16:20:58
421,Lead dev that is in a heated argument with another Sr. dev - what would you do?,43,ctakh8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ctakh8/lead_dev_that_is_in_a_heated_argument_with/,27,"Well, let's include heated ""discussions"" as well - you're in a meeting with them and seeing this sort of thing unravel - would you:
- Insert yourself but side with logic (i.e. who's right)
- Insert yourself and side with the lead (yep, political shit going on)
- Keep silent since you don't know better
- Keep silent even though you know who's wrong

I'd keep silent regardless, but I might be wrong? Have any of the experienced devs experienced this or have any advice?",1566383874.0,2019-08-21 06:37:54
422,Liskov Substitution Principle,41,cl9fun,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cl9fun/liskov_substitution_principle/,11,"Finally. It happened. I finally understand this one. 

Today I was refactoring some code I wrote a couple months back to add a new feature. And I said, ""why is that a parameter? The parameter should be this type of object, not that one."" Then I was all like, ""WOAH! That's the Liskov Substitution Principle! That's why it matters!!! HOLY SHIT! A needs to know about B and C! This is bad code! Awesome! .... Now to fix it.""  


6 years of college and 3+ years in the field and I finally understand why that one matters. Holy shit.",1564806382.0,2019-08-03 00:26:22
423,"Those that freelance, what do you do on your laptop besides code?",43,c2fy3y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c2fy3y/those_that_freelance_what_do_you_do_on_your/,7,"Basically trying to get a feel on how you plan, organize, and manage your time and yourself given that you are your own boss. What apps do you use? How do you divide your time? How much time do you spend in Excel / Word / Slack / Mail compared to time spent coding? 

How do you manage clients? Do you use a spreadsheet, just plain notes, contact book, CRM, or some combination of all these things?",1560973115.0,2019-06-19 15:38:35
424,Feeling stuck and depressed after a series of rejections; any hope for making the career shift I want to?,43,k46sd5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k46sd5/feeling_stuck_and_depressed_after_a_series_of/,20,"Using a throwaway since it's possible some current coworkers know my main account (relatively small company).

I just received the most recent rejection after a ""virtual onsite"", the third such rejection after reaching final rounds in recent weeks.  I had many more rejections at earlier stages of the process, as well.

I want to work on distributed data systems, in a senior IC role.  It's what has interested me since college, and what still gets me interested when I work with them, but I've been unable to break into the space.  In my current role (big data SaaS), I use them extensively, write libraries against them, write tests for them, etc.  But I don't actually work **on** them, if that makes sense.

When I started searching a few months ago (for similar level IC roles as my current one, but with other companies in the space), I thought my technical chops and track record would be enough to pivot.  Unfortunately, that doesn't seem to be the case.  It seems like the interview rounds need to go close to perfectly, which I just seem to pull off, except for one case (where they told me they simply went with someone more senior).  Even in the case where I'm responding to a recruiter solicitation, they often end up telling me I'm not a good fit.

Emotionally, I'm having a hard time processing these rejections and reconciling them with my own self assessment.  I've never been one to toot my own horn, yet I've always received very positive feedback, promotions, messages about how valued my work is, how much I'm contributing to the success of the company, etc.  Every time I have left a job, they've begged me to stay.  In spite of this, the imposter syndrome has set in hard.

Now I'm feeling like I'll be stuck in this situation forever, without a clear path out.  Meanwhile, my technical chops continue to languish in my current role.  So, how would you proceed if you were me?

**Just accept my lot in life and coast**.  Try to find things outside of work that I enjoy, and focus on my family.  Of course, in some ways this is the best option, although it's easier said than done to make this mindset shift.

**Quit day job and focus all time on interview prep and system design practice**.  This isn't really financially feasible, tempting as it may be.

**Try to work on side projects and hope one of them catches fire.**   It's not clear what this would look like, in the backend distributed systems space, but maybe I can figure something out.

**Steal some time from day job to keep prepping and interviewing**.  Probably the most feasible option.  I hate the thought of it, but it may be the only possible way.  Things like unblocking POCs, helping other developers flourish, ensuring high quality and consistency of releases may be important to a company, but they won't help you land a new job (apparently).

**Seek a more junior role and start over**.  Even though I have 15+ years of successful experience, that doesn't seem to matter much here.  Maybe more junior positions will have lower hiring bars.

--------------

*Edit*: I want to thank everyone for their time in responding.  It really does help put things in perspective and give me some insight I hadn't considered before.",1606803613.0,2020-12-01 01:20:13
425,"Bad to apply for a company to ""test the waters"" and reject an offer if I want to apply for them down the road?",40,j2e0hi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j2e0hi/bad_to_apply_for_a_company_to_test_the_waters_and/,32,"I currently work at a large tech company in California. I've only been at this job for 1 year and the job is decent with no real complaints. I like the company, my teammates are nice and I like California. The project I work on is mediocre but manageable for now. 

However, there is a different company that has always sort of been on my radar. I've considered moving back home eventually where I have friends and family and working for this company after I save some money (I'd be taking a large pay cut).

I recently got a recruiting email from this ""other company"" that's been on my radar for positions in my hometown which is exactly what I was looking for (albeit in the future). I want to apply just to gauge what sort of compensation I'd be offered. However I probably wouldn't accept an offer unless it was well above my expectations. I'm wondering if rejecting an offer from a company would burn any bridges in terms of applying again in the future. I'm also worried about my current position being only \~1y raising some red flags. 

Should I take this opportunity and engage with the recruiter and potentially reject an offer, or just wait until I'm done with California and then just apply normally down the road?",1601463439.0,2020-09-30 06:57:19
426,What tenure is considered job hopping / where is the line?,43,i5eect,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i5eect/what_tenure_is_considered_job_hopping_where_is/,56,"Second job in a row where I’ve wanted to leave 18 months in. Left my last job 18 months in and contracted for 3 months between jobs. Afraid of looking like a job hopper but am seeing serious violations of laws and wanting out.

Edit: reasons I’m maybe wanting to give for leaving include company mergers and acquisitions causing org instability, very high turnover, devs getting moved around every 2-3 months to new teams, and lack of automated testing and proper release practices. Of course I won’t give all of these as reasons at once, but just a sampling of where I’m at. Thanks for reading!",1596837904.0,2020-08-07 18:05:04
427,"Asked to modernize the front-end of our sites. Pitched idea, it was shut down. Feeling deflated.",41,ho4uve,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ho4uve/asked_to_modernize_the_frontend_of_our_sites/,40,"**Disclaimer: I like my job. Get paid well, it's close to home which is extremely rare (most jobs are 2 hours away in the tech hub), working remote for the time being, has a pension, average tenure is like 20-25 years so overall I'm happy. However, I've wanted to modernize our stack for a few months now to stay marketable.**

I work in-house for a company and all of our websites are on Sitefinity. If you've never worked with Sitefinity, it's a cobbled nightmare. I've used WordPress for many sites in the past - and when built properly, it's a great system to use. Sitefinity is just... something else.

So, part of my job is to figure out how we can improve our sites. I mentioned how React has been the defacto standard in modern front-end for years now. The plan was to build the sites on Gatsby, which is basically React for websites. Pitched to my boss, he at first loved the idea. So I designed a bunch of pages, got all that done. 
Booked a call with the company that manages the Sitefinity side of stuff, to see if it's possible to make a Gatsby / React site and tie into that platform.

Just got off the phone with my boss and the company that handles the Sitefinity side of things for us. They basically 'cautioned' using React, between the lines mentioned how we'd be on our own trying to configure Sitefinity with our React front-end and that was that. They also said 'don't chase frameworks'. I said I wasn't - React has been established for years now, it's the modern way for front-end, and it would bring many performance benefits.

So... great. I guess I'll continue to work on outdated stuff, which (I'm assuming) hurts my career.

How can I stay marketable in the job market when my job won't allow me to? Or, am I overthinking and still marketable because I have worked in React in the past and have 6 years experience?

Again - it's close to home, I get paid well, it has a pension. Overall happy.",1594336550.0,2020-07-09 19:15:50
428,Correctly dealing with colleagues producing code and components in such a low quality that it impacts the team,37,ha26h8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ha26h8/correctly_dealing_with_colleagues_producing_code/,16,"TLDR:

I'm a consultant on a relatively complex project. In my subteam there are colleagues from a different consultancy. While they have strengths in certain areas, software development is not one of them. The components and services they produce are often not functioning correctly and borderline unmaintainable. When I say ""unmaintainable"" I do not mean opinionated discussions about the perfect variable name, I mean sections of code and microservices with no test coverage that cannot be understood even after hours of going through it. This has gotten so far that it is now negatively impacting performance of the whole subteam (including myself)

&#x200B;

How do I deal with this? We do code-reviews, but it's not like I can tell them that their code isn't even close to being acceptable and that somebody else should rewrite the entire thing. And even if I were to explicitly tell them that their code negatively impacts the rest of the team, it's not like that will suddenly improve their lack of experience and knowledge.

We're doing ""agile"", there is no lead developer or similar hierarchy",1592335710.0,2020-06-16 15:28:30
429,Automated Testing in Startups: a Necessity or Luxury?,40,g47t2o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g47t2o/automated_testing_in_startups_a_necessity_or/,116,"I am working in a startup now and it seems that they are rarely doing or not doing automated testing. By automated testing I mean unit tests, integration tests, functional tests that you write when you are developing. Most of the tests are done manually: when we are developing the features, we would design the test cases and test the features manually. Actually this is a trend that I have seen in startups that I have worked with in the past as well: they dont do automated testing. Their reasons are that there is not enough time for it. 

For those who are working in startups: are you doing automated testing and how do you balance between the need to test the systems and meeting business requirements? Because testing itself will take as much time as the development and trying to sell testing to management in this stage and speed might not be feasible.",1587332342.0,2020-04-19 17:39:02
430,How to enjoy work?,37,g0pzta,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g0pzta/how_to_enjoy_work/,21,"I've been working in the industry for about 20 years now. Started as a ""web designer"", back in the days that was both design and front-end. Over time our profession changed with a lot more roles, making everybody specialise in one thing, and the sector overall more professional. And here I am: a senior UX designer now. I'm good at it, my boss is very happy with me and my salary is good.

So far, so good. But it's day in day out the same work. Don't get me wrong: I really like to design, but doing it full time is getting boring. And I'm starting to hate scrum (I do believe it's the best way, but I have to confess I hate to do it myself) with their stand up's, procedures and Product Owners that prioritise your work. It feels like modern way of assembly line work. It's stressing me and killing the fun and creativity. Most companies think that putting a soccer table somewhere is the solution.

In my spare time I do some work for a start up. I really enjoy that: no rules, a lot to do (without specified what and how) and it brings back the fun. But at this point that can't match my salary, a problem with a lot of startups.

What's the best thing to do?  
I'm not good in specialising in one thing. Or follow rules that other people make. I'm always curious, although my current role as a designer I like to code once in a while and learn new techniques.  
Being not a specialist, how to use my 20 years of experience in my advantage?  
PO or management could be a logical step: I have the knowledge, but unfortunately I'm not a leader kind of guy. And I still like to create things, make things work.

Are there other people out there that recognise this (except the designer part, I know this is a  developers reddit)?",1586835440.0,2020-04-13 23:37:20
431,"Put on Furlough (Laid off) with a promise to return, should I wait?",41,fi3rjx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fi3rjx/put_on_furlough_laid_off_with_a_promise_to_return/,63,"I started a job 3 weeks ago, and everything was going great. I really enjoyed the work, the architecture, and the people I was working with.

However as of yesterday they announced they were going to furlough 7 out of their 12 people on the development team. The reason was massive loss of revenue due to the CV virus. They approximate 1 million+.

So in an effort to weather the storm, they chose to furlough 50% of all full time workers in all departments with a promise that we could return when they were financially stable and make it out of the CV virus bust.

I'm really upset right now, I had 5 job offers on the table and the one I chose, the one that asked the most of my skills and asked me to grow the most just laid me off until they are able to bring me back on. They estimate a month, but with the virus I have no idea what I'm going to do.

I don't normally have company loyalty but this time I want to wait it out, this company seems to have had everything for their dev team, remote work, trust, true autonomy, genuine agile, many best practices in place.

My first couple projects had me setting up docker containers and doing dev-ops based maintenance, something I had dreamed of doing in previous jobs in order to grow my skills.

What should I do Reddit?

Some reasons I liked the job are posted below.

* Salary: 115k 
* Location: Denver
* Title: Senior Full Stack Software Engineer
* PTO: Unlimited
* Work From Home: Unlimited",1584150973.0,2020-03-13 21:56:13
432,Have you ever started at a company and immediately felt vibes telling you to get out?,41,f97e2s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f97e2s/have_you_ever_started_at_a_company_and/,26,"I've never had this happen before. I recently started a job that I didn't vet very well, and I strongly feel that the company is in dire trouble. I have a really strong intuition for these things, and research  into the company's  recent past has  proven my suspicions out.

There were layoffs recently that lost a significant portion of the employees and benefits slashed. Benefits are really bad for a tech company, even a small one. I learned on day one that the office is moving from a convenient central business district to a cheaper space that is quite a bit further away. This was NOT disclosed to me during the interview. My commute  will be  2-3 times longer when it moves.

I think I've been hired to backfill a few long-time employees (7+ years) that left in the wake of those unpopular layoffs. I feel strongly from the vibe in the office and things I've learned about the company since starting that we are being paid to cut costs and salvage what's left of the company before it shuts down or is sold off. No new engineering is being done here.

I haven't told my manager my negative perception of the company, concerns about office location and benefits, etc. I'm afraid these things are out of his control so bringing it up will only cause trouble for me.

I've gotten back in touch with some of the other companies I was talking to and I'm going to keep interviewing with them in the meantime. But it's a good lesson. Make sure you vet a company thoroughly before taking an offer. I am working to find a better fit and just using this as a learning experience and a mistake made under stressful conditions.

Has anyone had this happen before? What did you do? Is it going to be dramatic if I  leave after only a few months?",1582649214.0,2020-02-25 11:46:54
433,Have you ever volunteered to teach others on how to code? How was it?,40,e1qqu1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e1qqu1/have_you_ever_volunteered_to_teach_others_on_how/,51,"My company has a few opportunities for me to teaching kids (K-12) for a day. I'm not sure if I'll do it but I'm curious about it. To those that done it, what was your experience with it? Was it worth it and/or would you do it again?",1574761675.0,2019-11-26 04:47:55
434,Demotion or not?,41,e07f0q,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e07f0q/demotion_or_not/,16,"I took a Team Lead position 1.5 years ago after 6 mos on the job with no additional pay. 

Now HR wants to do proper job descriptions and eliminated Team Lead as it was not an official HR title. 

So they are taking my lead role away and creating a Lead Software Engineer title. 

But I dont get the title. 

I think this is a de facto demotion. 

Supposedly no current leads are getting the new title but I wont know for sure until after the holidays  

What would you do?  

I have been successful in delivery and a great morale leader for my team. I have won a company tech innovator award as well.",1574485788.0,2019-11-23 00:09:48
435,What does upper dev management look like?,40,di0mkx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/di0mkx/what_does_upper_dev_management_look_like/,9,"tl;dr - What can I expect from an upper dev management career? Is it worth it over an upper engineering career?

Hello fellow ExperiencedDevs, I’m at a career crossroads and I could use some insight! Over the years I have risen through the ranks and am now the engineering manager of a 7 person team (gaining 2-3 more next year). 

I was promoted to this position from Lead Engineer a year ago and have learned a ton! From hiring skills to time management to setting expectations. As I look towards the future, I see the two paths separating and feel that I need to make a choice soon.

As a manager, I enjoy guiding other team members, working ahead to scope out projects with the product team, communicating with stakeholders from various departments (as well as customers), and ensuring team quality & efficiency. 

Then there are the things I don’t look forward to: vacation/sick leave tracking, KPI reporting, hiring/firing, performance reviews, mediating interpersonal issues, planning other’s careers, legal compliance research, and justifying leadership decisions even if I don’t agree with them.

I am very grateful for the opportunity to be a manager, but I always assumed my career would lead me to a staff or principal engineering position (or creating and selling my own software). Now that I’ve gotten on the manager track, I’m wondering if it’s the right direction. 

To help make the decision, I’d really appreciate if anyone could share their experiences of what working in upper engineering management looks like (day-to-day and overall objectives) and how that might compare to upper engineering positions? Are those director and VP engineering management positions just people managers that happen to work with software teams?

Thanks for your help!",1571132062.0,2019-10-15 05:34:22
436,"I've seen many people oversimplify the phrase ""your education no longer matters when you have years of experience"" and that is dangerous",37,cj3r5b,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cj3r5b/ive_seen_many_people_oversimplify_the_phrase_your/,31,"Dangerous mostly to them and their careers. They take that as, years of experience are fungible and believe coasting through with one job will have you set for a good while, but they didn't think it mattered where you work.

But the moment you lose your job, or need to find a new one, it REALLY starts to matter.

So the more accurate answer to ""does having more experience nullify your education?"", it's on a case by case basis. In most cases, after someone has been around the block, you aren't greatly judged by what school you went to. But that doesn't mean you can just chill at a place where you learn almost nothing for a couple of years and then think you can can pick up your feet and jump into a hot unicorn company. 

So we need to keep reminding ourselves this, **years of experience is not a perfect proxy for quality and your experience is definitely non-fungible** because the focus has to be shifted towards where you worked and what you did.

A hot startup intern gets a job at a hot startup or FAANG. A developer working at the same nondescript company for 8 years gets laid off and then hasn't worked for almost a year. The startup intern has a brighter future despite being less experienced. The laid off dev might be getting more unpleasant advice, such as, take any job at a grocery store to stay employed, because unemployment is a huge turnoff*. Also, that was a real example I recently saw happen.

The industry is teeming with paradoxes like these. But if people stop oversimplifying the exchange value of job experience, then they would understand it.

I don't know if I'm just preaching to the choir here. But I made this thread because I do see some experienced people sometimes act confused as to why their years of experience have a poor ""exchange rate"" with acceptance to a cushy job at a really great company. But I used to be one of those people, anyway. 

I still don't work at a hot tech company, but at least my eyes have been opened about what it means to build your career. And for me it made more sense to treat it like a college education that goes on indefinitely. And right now I would say I'm like a C student that hasn't done a worthwhile capstone. 

C students with weak representation in research and projects have little chance to get hired by a badass company. Same as the career-version analogy. That's how I learned how to accept my position and how I should be building myself up.

*Aside: I personally don't think being unemployed for a while should be an instant ""do not hire"", but from my experience it's been mostly HR and other gatekeepers that freak out over it. Not so much the more technical decision-makers. Maybe that person has been such a good employee that they can willingly take a year off and live without working? That's just an example. But usually the technical staff are more forgiving about unemployment gaps.",1564388681.0,2019-07-29 04:24:41
437,Questions from recruiters or interviewers that are just downright ridiculous to inappropriate,41,ccmncm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ccmncm/questions_from_recruiters_or_interviewers_that/,20,"Mine:

- Recruiters asking for my Social Security Number, on email, when I don't even know what company I'd be interviewed at ... 

- Oh, to put salt to the wound, they want me, to send a photocopy of my ID, 2 copies (yep, explicitly mentioned) and bring it during interview. 

- HR asking me to fill up a form, halfway through the interview process (yep not even an offer yet), with regards to, my employment history and my family's employment and personal information - SSN, DOB, dates, name of organisation, everything. 

- Recruiters (and even HR) asking previous companies pay including all benefits and bonuses. If I recalled correctly once they even asked for my previous offer letter/ contract as well.

... for some reason, my blood was boiling as I typed these. Tell me I'm wrong?

What are yours experienced devs? How did you handle/ deal with them?",1563031865.0,2019-07-13 11:31:05
438,"Tips, tricks & tools to make your life easier.",41,bvvope,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bvvope/tips_tricks_tools_to_make_your_life_easier/,11,"So, I 've been using Ditto as a clipboard manager and it has saved me on multiple occasions where I had to find old commands or data I used. I am also using To-Do to keep track of repeated tasks. What utility tools  do you use to make your life easier?",1559496650.0,2019-06-02 13:30:50
439,What is the best way to write a killer linkedin profile?,40,bq6t91,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bq6t91/what_is_the_best_way_to_write_a_killer_linkedin/,16,"Anyone have any links or advice that they know definitely works for your linkedin profile?    As of now, I have a fairly basic profile with just a basic description of what I do at my company, but not really accomplishments since that's for my resume.  For example something like, ""Building X using React and Ruby for Y"".  I get about 2-3 views a week, but I'd like to increase that number.",1558231118.0,2019-05-18 21:58:38
440,How do you tell someone you used to work with that you don't think they should apply to your current company?,40,b0o67k,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b0o67k/how_do_you_tell_someone_you_used_to_work_with/,11,"I used to work with this one fellow who was sort of nice, but annoying AF (basically thought of himself as an Agile expert, had a blog, wrote a book, name-dropped constantly, etc. and there was no room for any other opinions on Agile around this guy -- he didn't work there long before they let him go). Now he's asking about openings at my current company (and we have plenty for sure). I haven't been at this company long, but it's a great company, and I'm trying to make a good impression here. What's the best approach here, do you think? Should I just straight up tell him, ""ok look, I'm sorry to have to tell you this but you are so annoying, like super annoying, you're going to have to shrink your head down a few sizes before applying here""? Or should I just say, ""oh yeah, it's a great company and I love it here so far,"" leave it at that and see if he makes it through the process? I don't want to sabotage him or anything, I just am not super eager to work with him again and I'm afraid if I refer him, people are going to think I'm nuts.

Thanks for y'all's help.",1552524303.0,2019-03-13 20:45:03
441,Is writing clean code overrated,42,jbfhue,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jbfhue/is_writing_clean_code_overrated/,38,"Academically, clean code is wonderful  for the benefits it gives but we all work for companies whose bottom line is to make money. If you over rotate on a task to make it clean, you will go over budget. Does this mean understanding how to write clean code AND trying to implement it at work is overrated? There are much more important concerns such as being a team player, are you building the right thing, is your work impactful, what is the number one thing that you should be doing now? 

When people review your code and you try to explain your design decisions of how you made your code clean, sometimes it ends up in arguments saying how you over engineered something. People get hurt and you can never win these arguments. When you review their code, Forget about even suggesting ways to make their code clean, it won't turn out well 

Sometimes I feel that the best skill to learn is not how to write clean code or know the latest languages but it is to have excellent diplomatic skills. 

From your point of view, what do you think of a developer who promotes clean enough(what does enough even mean?) code practices that has excellent diplomatic skills. Do you find them more useful than someone who is a clean code advocate but has little diplomatic skills? Instead of me spending time reading books on design and architecture, perhaps time would be better spent on books related to being diplomatic",1602759295.0,2020-10-15 06:54:55
442,"I've worked at multiple small companies but I don't feel like I'm making a big impact in any of them. Is something off about these companies, or is it with me?",40,irk431,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/irk431/ive_worked_at_multiple_small_companies_but_i_dont/,21,"For more than half a decade I've worked exclusively with small companies as a software developer. I graduated with an unrelated degree, but after taking a web design class I got more drawn to web dev and programming in general. And that's how I decided to go into that career.

#Before graduation - 0 to 1 years

My very first paid dev job was as a freelancer. I found a client on Craigslist looking for a part-time dev and I built him a completely custom private auction system to track auctioned items, their donors, buyers etc. Didn't get a follow up about that project but I got paid at least.

Then I worked a part time job at a small business ran by a former DBA. It was an art studio. I managed the company site as well as internal sales tracking app. The business itself actually did horrible. This was reflected in low pay and late paychecks. I worked for only a few months before I quit and finished my last school semester.

#After graduation - Years 1-3

After graduation I went job searching on Craigslist again. Got hired as a contractor for a web agency that had at least other developers I could work with, compared to my previous jobs. This wasn't a fixed time contract it was just 1099 for as long as they wanted to keep me. Work was mostly a grind, just being assigned to different clients to take care of their web dev related problems. Most of the time it's just modernizing old websites. Then I got let go, because I wasn't being productive enough as a junior. They prioritized giving projects to their offshore devs (which they had dozens of).

I freelanced for a couple more months with a different agency. Felt more ""hands off"" they really restrained my access to projects in that situation.

After being unable to find more work I went back to the web agency because I had no choice. They paid me slightly more than last time but I was also on the bench more. Felt a lot more like consulting work this time around.

#Years 4-5: SaaS startup

Finally I was able to get another offer, this making the first time I have ever gotten a software job offer while still keeping my current job (every other job hunt mentioned here has been whilst unemployed). A small pre-seed startup, completely bootstrapped, run by a CS graduate of ~10 years experience and has full-time dedication to his business. 

I thought this is where I will grow, where I can become a senior dev and eventually plan the future of its product line. But for now I was hired yet again as a contractor. Most of the work I did was closing tickets and coordinating with QA. But for the guy's background he seems disinterested in enforcing programming practices. As founder he won't have time to do programming work of course, but I'm the only programmer from the US working for the company. He's running his company lean but there doesn't seem to be a future with me taking over as lead or whatever. He terminated my contract a few months after the company's been in the red with revenue.

#Years 6-7: More contracts

I'm again doing contract work for various different agencies, hoping that one of them transfers me into a full-time role. You might be thinking by now, ""why not just apply directly to a FT role?"" Well I've been doing that too. It went from dozens of applications, to now hundreds. But I can't manage to eke out a FT offer from even the most boring b2b company that only does tech on the side. 

My clients are all small companies but they lack follow through. They don't forward me to another colleague and tell them, this guy did this work for me, and maybe he can help you out too. But they don't seem angry or upset with the work that I deliver to them so it's not like I really suck. It's just a been very ""hit and run"" affair with my relationships with the companies.

#Conclusion: Several small companies, no big impact

And in all of these places, I don't feel like I've made a big difference in growing or improving the company. I haven't built up more responsibility, nor created more revenue or built something that can significantly support more customers.

Seems like all I'm expected to do is line-item work. A lot of people recommend working at small companies if you want to learn a lot and take more responsibility for things. But I did just that and felt like another cog in the machine and your work feels meaningless. Do people just refuse to talk about the ""startup work where you did nothing"" experiences? I've yet to find a small company that can take my work to the next level and prepare me for larger businesses with more complex structures and systems.

So what is going on here why does it feel like I'm working for a slow, big, boring company when none of the places literally has more than 50 people? Why haven't I done more work and why am I just going through the motions? Am I just really bad at choosing companies because when I interview with them I haven't noticed any red flags right away.",1599971289.0,2020-09-13 00:28:09
443,Development plan talks with Manager,38,if0cru,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/if0cru/development_plan_talks_with_manager/,19,"I have scheduled development plans talks with my manager and I get asked which area I would like to develop. I always struggle with such conversations and it makes me wonder if its just my appetite for development is not high enough. I do a lot of self development on the side (attending local meetups to see how other companies do stuff, tech blogs, building POCs with well known technologies/paradigms etc). I'm also enrolled in a certification course with a Cloud provider because I am genuinely interested in infrastructure related topics. 

I believe this type of development already goes without saying and involving a manager makes it more formal as they want to do regular check-ins and build actions items which makes it more stressful.

How do you all handle such topics? What kind of development plans as an engineer do you share with your manager? There are obviously things that are outside the scope of the company domain that I am interested in but how does one communicate that you are interested in such?",1598203742.0,2020-08-23 13:29:02
444,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,37,iba3s3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iba3s3/ask_experienced_devs_weekly_thread_a_weekly/,57,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1597680802.0,2020-08-17 12:13:22
445,Relocating during COVID,41,i6kfmd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i6kfmd/relocating_during_covid/,25,"Has anyone had success doing this? My back story is last summer I moved across country for a new job but ended up not liking where I currently live. I’m looking to move back home but so far I’ve had no bites on LinkedIn from my target location. I get spammed with recruiters in the area I currently am in. I have 8 years of experience and last summer it was pretty much a constant stream of recruiters reaching out to me from both my target location and the place I currently live in. I’m willing to relocate without any kind of relocation costs, I just wonder if this time around I’ll need to reach out to old recruiters and let them know I’m in the market. Is it a better route to look for fully remote jobs? Has anyone had success landing a new job and relocating during COVID?",1597012918.0,2020-08-09 18:41:58
446,How hiring teams have ever seen a cover letter?,41,i20ctf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i20ctf/how_hiring_teams_have_ever_seen_a_cover_letter/,91,"Ran across a discussion on HN about the value of cover letters, and while I have previously been on the 'always write a custom cover letter' camp, some folks gathered data that indicates nobody reads them.

Do you interview candidates? Are you regularly provided a cover letter before the interview? Do you ask to see them?",1596346686.0,2020-08-02 01:38:06
447,Parents working from home: Do automated tests ever help you remember your current task after your kid interrupts you?,36,hh5n1a,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hh5n1a/parents_working_from_home_do_automated_tests_ever/,30,"I'm trying to justify the time that I spend on writing automated checks using tools like rspec and cypress.

If I am honest, my reasons for doing this are selfish: I have ADHD and so sometimes my brain will just completely forget important details like what I was doing _in the middle of me doing it_. 

I would like to craft a persuasive argument that this activity actually also benefits my coworkers and I'm not just making excuses for over-automating something. All of the other members of my team have kids. I would _like_ to be able to say that what I'm doing can be of benefit to the whole team. I want to know if that is grounded in reality.

EDIT: what I'm asking for is advice on persuasion. Yes, [I have read both the Cialdini and Carnegie books that Sandi Metz refers to here](https://www.youtube.com/watch?v=VzWLGMtXflg). The project lead is remote and I have a 6-month history of slow pace of delivery so I have two extra hurdles to overcome.",1593335723.0,2020-06-28 05:15:23
448,Stupid to switch jobs now?,41,gx15if,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gx15if/stupid_to_switch_jobs_now/,39,"I'm in the interview process for 4 other companies. All of these would look better on a CV than my current position and seem to be doing more interesting work. Plus, according to levels.fyi/glassdoor, it looks like the salary would be a good deal better than what I'm getting now.

However, am I stupid to be considering moving during the pandemic recession? The companies that I'm looking at all appear healthy, and none have a history of laying off engineering staff. Obviously I'll wait until I have (or don't have!) offers in hand to decide, but I just want a sanity check.

FWIW I don't have any kids and have plenty of savings, so I'm happy to be a little more risky with my career.",1591377080.0,2020-06-05 13:11:20
449,Learning to criticise and speak out - perspective and advice from leads and managers,37,gvt08r,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gvt08r/learning_to_criticise_and_speak_out_perspective/,48,"I was actually a very quiet staff member (who didn't want people to get ""in trouble"") - but over the years, I learned that if I didn't speak out, inform or even criticise what could be constituted as ""wrong"", I'd be:

* Bullied
* A doormat where people can walk all over me
* Scapegoat
* Seen as incompetent
* Low EQ

Hence, a few years back, I started to get more and more vocal but I realised, I sounded like someone who can't control their own emotions and immatured. But I resisted and I learned to control my emotions and articulation, and observed how my bosses reacted to my grievance or criticism. I got very good with being ""passive aggressive"" to the point some people find it funny and knew that I was being intentional.

Now, I realised, I can actually ""pull off"" a leadership role seeing how I can handle some of the crazies in the office, and literally play their politics, and make them worry what shit I pull off next.

Dev leaders and managers - I know some of you have seen some crazy shit out there, and if you've made it this far reading my post, thank you very much! I'd just like to ask if you have any other wise tips, words of wisdom, etc., to be better at managing people (or even myself) please, I am all ears. If you think I am borderlining arrogant or need a few scolding, please, just say so and I am all ears as well.",1591216001.0,2020-06-03 16:26:41
450,Dealing with the human element,35,fto84s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fto84s/dealing_with_the_human_element/,13,"As I've progressed more and more in my career, I deal less and less with pure tech and more and more with human relationships and interactions. Please don't mistake me, I am still doing plenty of coding, but am also getting involved a lot more into broader, bigger initiatives interacting with various orgs, key partners, etc. 

Consider this example. I work with many sales orgs in terms of third party software we use/partner with. Ideally these business relationships would be managed by management, but the reality is they are not. A lot of the relationship management falls to the implementers/architects (aka me). I would hazard a guess that I'm not alone here.

The sales folks operate on the managers schedule, while I, and many of my coworkers, operate on the makers schedule. The sales folks practically beg me for phone calls, lunches (pre covid), lunch and learns, etc., ""I'll only need five minutes of your time,"" etc. As you know these distractions taken in aggregate are disastrous to a makers schedule. So unfortunately, I simply ignore many of them.

The thing is, as I get older, I start to know these people outside of the office. My wife mentors their kids at school in art projects, and we get to know them at family functions, etc. So I get to see the whole picture. And the reality is, a lot of these sales folks are really struggling. 

To help mitigate this, I try to occasionally reach out and have the phone call, sales conversation, etc. but it always seems to turn almost into a virus in that they spread to folks in my org, also begging them for conversations, etc, even when I ask them to stop (""please just go through me, don't contact my engineers directly..."") It seems to be a repeated pattern, as it hasn't been just one sales person from a single company who has done this; rather, multiple major corporations seem to employ this desperation strategy. 

The worst part of it is, I work for a large, well-known and respected tech company, and I know our sales org does the same damn thing to our customers.

Take another case. Some of the guys I work with are clearly depressed. So I try to go out to lunch with them, talk to them, etc. This also takes time. I worry about them.

How do you as engineering managers, and devs, deal with all of this mental load, and distraction and still manage to deliver big rock items, push your development forward, in addition to maintaining good relationships?",1585869882.0,2020-04-02 19:24:42
451,How can I stop being rejected by (and stop being embarrassed by) larger companies at the application stage?,37,dxg9by,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dxg9by/how_can_i_stop_being_rejected_by_and_stop_being/,12,"In most of my career of roughly ten years I have worked in web development in smaller companies nobody has really heard of unless they are local developers themselves. It tends to be small-scale low-profile work that has stopped challenging my abilities. I no longer want to be evaluated for my ability to know some frameworks but for my ability to solve software problems in a tech-agnostic setting.

So far the only companies that judge like this are big tech companies, including most unicorns. So I started applying to them a couple months ago and almost all of them either send me a rejection email or say nothing about my resume. I am trying to follow this:

* Major company hires university grads
* Major company rejects my resume/application
* My value to that company is seen as less than that of a new grad for their respective positions
* I am at a lower level than a university grad (don't have the proper schooling maybe?)

Maybe that's some bad conjectures I'm making here, but it is very humbling and embarrassing to me to be rejected in favor of new grad hires that have no experience, because I have no excuse to be this bad. I am willing to bump down to a lower level position if need be. But simply applying without knowing referrals feels like such a bummer.

How can I overcome this hump and figure out exactly what a ""winning resume"" looks like to them? I suppose I can start searching online for actual resumes from people that have worked at such places (esp. if they have a blog, makes finding their info easy).",1573983989.0,2019-11-17 04:46:29
452,How often do you extend a helping hand to coworkers?,39,d4b81y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d4b81y/how_often_do_you_extend_a_helping_hand_to/,40,"My answer: whenever possible and feasible plus whenever my workload isn't too demanding or whenever my advice/wisdom is solicited.

Some background: as a software developer I had a 1:1 with my manager and one of the takeaways was that I need to help my co-workers more than I currently am. 

They made a remark about how someone on the team was struggling with completing their given tasks during a Sprint and I failed to recognize it during the daily stand-ups. I don't recall the person in question saying ""I need help with..."" at all. Now this isn't junior personnel here, they have my level of experience roughly 10 years so to speak.

I maybe old-fashioned, but I'm of the opinion that you can't get help unless you ask for it or speak up. I feel I shouldn't do go around saying asking what everyone is doing on what; I think it's distracting and annoying plus it feels like micromanaging.

As experienced developers/individual contributors yourselves, how involved are you with your coworkers task barring any dependencies? How approachable are you when it comes to work?",1568524860.0,2019-09-15 01:21:00
453,Rejecting a great candidate because they are just too expensive?,39,cnj0io,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cnj0io/rejecting_a_great_candidate_because_they_are_just/,39,"Have any development leads/ hiring manager/ staffs here find the candidate you interviewed to be the most perfect match; very skillful, technically sound, great character, in fact would have a great future in the organisation but the candidate was rejected because they are either too expensive or you can't match the requested benefits?

What actually happened? Were they being counter offered?",1565283308.0,2019-08-08 12:55:08
454,Good non-technical books for experienced devs?,36,cggj6g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cggj6g/good_nontechnical_books_for_experienced_devs/,28,I liked 'So good they cannot ignore you' by Cal Newport. Any recommendations for books on career building/self-help relevant to audience in this sub?,1563846871.0,2019-07-22 21:54:31
455,Moving to a management role,41,kfgawb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kfgawb/moving_to_a_management_role/,14,"For all the experienced ICs who are wanting to move to a management role, what are some non-technical challenges that stand in your way? After how many years is it good to start transitioning to a management role?",1608303827.0,2020-12-18 10:03:47
456,"Team Lead considering becoming dev, advice is much appreciated",40,hp89zq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hp89zq/team_lead_considering_becoming_dev_advice_is_much/,24,"Hi! First of all, I'm sorry my english, it's not my first language. If anything is misunderstood, I can clarify.

&#x200B;

I'm a software developer with 10+ years of experience. I started using Java, and after a few years I became a ""whatever the stack is"" dev. If the project is already in .NET or Nodejs or Groovy or any other language, I can do ok. My main lack of skill in frameworks and such is Angular, Vue and React (and Flutter).

&#x200B;

I live in a country that software developers usually follow a path. Intern, junior dev, senior dev and then management or tech lead. People, here, believe that this is the path of success (money and status and such). I had a manager that once said to me: ""ok, you like to write software, but are you going to do that until when?""

 

Now to some specific details. I'm 33 years old. I currently work in 2 projects. In the first one, I do everything: talk to the users, understand what needs to be done, write the code, test, deploys to the test environment, to the production environment and stay on duty (if there's something wrong, the customer calls me). In the second one, I act more as a team lead: I go to the client, gather requirements, build the solution with the client (on paper), go back to the office, write the requirements, send to the team, write some code (sometimes, rarely), deploy in the test environment, test the software (along with QA team), present the solution to the client, create status report to my managers and do some automation tools (currently building an automated database backup tool and a pipeline to deploy to test env).

&#x200B;

I like both projects. The problem is that both projects are becoming too much heavy for me. In the second project, the client needs so much things that's driving me crazy (maybe that's the normal standards for every client that doesn't know tech) and some members of the team are not performing well (maybe due covid, maybe due irresponsability).

&#x200B;

Yesterday I was chatting with my manager and he said that he's worried about me. I'm working too hard (and too much) and he believes that I'm heading to a burnout. I may have lost a few hair strands in both projects, because I'm too afraid that the customer call us one day cancelling the project due to my inefficiency (the project has a lot of tough business rules and the customer does not know what he wants). So he said that there are two options for me on the table: I keep acting as a team lead (or manager), but I'll stop doing the tech stuff (code, deploy, requirements) and delegate that to every person on the team; or I can step down from these both projects and I can become a dev in an international project, using .NET and Angular).

&#x200B;

Both options are great for me. If I keep doing what I'm doing, I may get tired, of course, it's a position that require more responsability. But I may do well just delegating the job and approving / testing if it's what the customer really needs. On the other hand, I can do great things in an interntional project and that may look very good on my resume. So I'm in a dilemma here.

&#x200B;

I know people can't choose for me, but I'd like some enlightenment. Are there any software devs above 35 that are doing really well or basically everyone is doing management or lead roles? How to you guys would feel in my position?

&#x200B;

Thanks in advance and, again, sorry my english.",1594494593.0,2020-07-11 15:09:53
457,"How do you feel the lack of a more experienced ""senior"" will influence my career trajectory?",42,h9zsgg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h9zsgg/how_do_you_feel_the_lack_of_a_more_experienced/,33,"I have been working as a software developer for just over five years. My apologies if this isn't considered ""experienced"" enough for this subreddit. I am the 'self-taught kid' type and considered myself a member of the 'community' for a while before I got my first big boy job, so I'd say that I found my footing quickly. I started off in a small company. After getting accustomed to the ups and downs of working in small business, working with some larger organisations (I sometimes operated in a consultant-type role), talking to friends and colleagues about the ups and downs of larger organisations, and considering my general distaste for Silicon Valley and Big Tech, I made the explicit decision to try to stay in small companies if at all possible.

I now work as the **sole** developer at a profitable edtech startup. The job is fantastic and the pay is at a level that I'd be happy with for the foreseeable future. I have absolutely no plans to leave this job any time soon. However, I am conscious of the possibility that I am seeking short-term professional enjoyment at the expensive of my future career trajectory.

I am not a ladder climber, resume builder, status seeker.etc. I think that I would have to change a lot as a person to start to care about that sort of stuff, so I am not considering it to be a huge risk. I am mostly concerned with being able to gain stable employment when I am much older and when long-term stability will be more of a concern. I am already somewhat risk-averse already, even though I have no dependents. My current employer offers short to medium term job security due to our revenue streams. 

 My other concern—one that is discussed a lot lately—is ending up with 10x1 years of experience, rather than 10 years. I'd like to think that the fact that I am the sole developer of my employer's product allows for sufficient professional development. I strongly expect that this company will grow as the product and its underlying research are legitimately compelling in the context of the industry that we target. Given this, I expect that the challenges that I will face will change, and my expertise will continue to 'grow with the company'.

I feel that I am also developing my skills in and knowledge of the business's domain (education in Australia, which has a lot more cash at its disposal than the US). I am hoping that this may be able to act as a differentiator when it comes time for me to pursue other work.

I am looking for opinions one way or another from people that have faced these sorts of questions and have ideally seen their way through to the other side. 

Thank you.",1592324536.0,2020-06-16 12:22:16
458,Getting laid off was the best thing that could have happened to me,39,ewagfs,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ewagfs/getting_laid_off_was_the_best_thing_that_could/,6,"I found myself this summer working in a role at a company with no direction. My manager actually forgot to invite me to orientation at HQ (which required travel) on my first week so I never went. That was as sign of things to come.

Nobody gave me a clear outline of my role or what I should be focused on. Nor was a hired in a high-ranking leadership position where that would be expected. Nevertheless, I managed to figure out a path for myself and accomplished something on my own before I was let go in a round of layoffs a few months later.

It was a excruciatingly painful experience. I got thrown under the bus by my manager, who should have provided me with the resources I needed to do my work. He failed at his job, so that negatively impacted me. Even though I tried my best to make this work, and brought up these issues multiple times with this guy, things still did not work out.

I have a little distance on that experience now.

In retrospect, getting laid off as the best thing that could have happened to me. 

It got me out of that environment. *Pay attention to the environment you work in.* When people tell me they're depressed because of work, my response has always been to suggest there is something more to it and when they figure it out work will not seem so bad.

But in my case it *was* work. Work *was* the problem.

Everyday, I had these messages coming in at work: we don't care about you, you're irrelevant, you're not part of the group, your skills aren't useful, why are you even here? It was a hostile environment. A guy threw a keyboard across the room once. I dreaded coming into the office.

I thought about quitting but I never would have done it. I would have stuck it out for a year because I had ""promised"" to do the job.

Since getting laid off, I have had some time to reflect and realize that I had been right all along. I knew from the first or second week that taking this job was a mistake. Even during the interview, I had my misgivings.

Friends, my advice to you is to pay careful attention to your support network at work.

Work should be hard because of the problems you are solving, not because of the environment. You should never be in a role with no direction. It is a very painful position to be in. Make sure you know *exactly who you will work with and what you will be doing before you accept an offer.*

Looking back now, after that first week, I wish I had called back one of the other companies I had interviewed with and accepted their offer, and just quit on the spot with no notice. The manager at this company did not deserve my good will and patience.

Sometimes the best thing that can happen is to walk away from a bad situation and take it as a learning experience. Learn the difference between ""difficult work with a positive environment"" and ""negative environment affecting my ability to work.""",1580439967.0,2020-01-30 22:06:07
459,How do you control your temper?,41,dpnblr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dpnblr/how_do_you_control_your_temper/,24,"Recently, I attempted to improve my EQ by not getting upset or angry at developers, testers or even leads for that matter.

Frankly, I could see myself, years back getting really pissed and it could really show in my face and some of the staffs could see it; but fast forward years ahead, though I'm still somewhat annoyed (and today it's just ""one of those days""), I was able to remain calm, relaxed and deliver my work with some positive attitude.

I don't know how I did it; it's probably age and the thought of ""it's not worth it"".

Has any of the sr. devs here feel the same? How do you guys manage this sort of thing?",1572556246.0,2019-10-31 17:10:46
460,Need help evaluating my interview skills,38,dl28ld,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dl28ld/need_help_evaluating_my_interview_skills/,30,"15 years exp, staff/principal level full stack + some management. Learning ML.

I recently came out of a round of interviews at Faang, unicorn startup and some shittier but famous companies.  I never have a problem getting interviews and I invested the time to get good at leetcode.

LC perf: I'm not great at it in that I don't always write bugless code, but I can generally do many graphs, pathfinding, combinatorial and DP problems pretty quickly. Ironically I tend to screw up more on ""easy"" problems that are really just trick questions. That being said anyone with half a brain will know I know what I'm talking about even if I don't perform perfectly. In spite of this, I've gotten rejected at phone screen stage for not giving a perfect answer in about 15 min.

I did about 10 in-person interviews this summer and I failed all of them. In my opinion, I should have gotten offers from at least half of them. If I graded myself I would say of those 5, I was in the 90-95% range in terms of perfection. I tend to ace any online assessment. I am confident in my soft skills; when I can get feedback I get very high marks on Amazon leadership principles type questions. I can code. And I can system design. I don't know what is getting me rejected though and I need to sort this out before trying again. 

Is there a way I can simulate this experience and get real actionable feedback? Is there a community for this? Do you guys want to start one? I have used pramp and interviewing.io and I always get 4/4 stars on my practice interviews. I have no idea what is wrong aside from people just not liking my face. And if that's the feedback, I want to hear that. I just hate not knowing. I have Google and FB coming up in the next few months. I'd like to fix the problem and land mult offers and am willing to put the work in.

Any help here?

Edit:
- I'm looking for actionable feedback for my interview performance. 

- I am also interested in pairing with people who are in the same boat for the sake of improvement. 

- And I am also interested in interviewing if you are hiring for a high level IC generalist. 

Please dm me if any of ^^ interests you.

 I am well aware of the common pitfalls around what gets most people rejected as a senior. I've worked *very* hard to fix all of the things I have seen as shortcomings or negatives. I'm not asking for general advice, I need subjective and specific evaluation or some way to get this kind of feedback. I am willing to pay $ for it.",1571700819.0,2019-10-21 19:33:39
461,Plugging Back In,34,d9418s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d9418s/plugging_back_in/,20,"When I was younger in my career I was very active. I had RSS feeds of a variety of top-notch bloggers, I went to conferences, I went to local speaking events, Code Camps, read magazine articles and made sure to read all of the recommended books for software developers. Then something happened and I feel like I took my hand off the pulse of the tech community and now I'm not sure where it is or how to get plugged back into all of that information.  


Where should I be looking? How are people staying engaged, continuing to sharpen their skills (both technical and soft skills around software development)? What are the new platforms for this information that I should be looking at? It seems like blogging has kind of died off a bit, where are the new community leaders/mentors sharing content? Who are the new tech community and leaders?  


I want to get plugged back in, but I feel like maybe I don't know where the plug is anymore. Where do you plugin?",1569450423.0,2019-09-25 18:27:03
462,Advice to job hop every 2-3 years,37,d1vfbd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d1vfbd/advice_to_job_hop_every_23_years/,14,"I’ve seen a lot of posts and comments suggesting that developers job hop every 2-3 years as a way to obtain promotions and raises, especially over in r/cscareerquestions. I took a job after college and have been at the same place for the last 8 years. In that time I have been promoted 3 times and according to a handful of salary websites I make market rate for my education and years of experience. Getting the promotions and raises took a lot of advocating for myself and the biggest bump came when I got another offer and used it to justify being paid more. In the range from junior to senior developer I can see how job hopping would be beneficial since I had to essentially hit the market and interview as a way to push for a pay bump.

Does this advice hold for positions above senior? I know that managing and developing exercise different  muscles, so assuming a person was interested and competent in the areas they were shooting for:

30 - senior

33 - team lead/architect

36 - manager

39 - director

42 - VP

45 - CTO

Is that a realistic timeline or once you pass senior do the time frames lengthen? Do the job hops become more weighted toward pay increase as opposed to promotion? I’m also assuming promotions periodically because the advice seems like it would breakdown after a while because there’s only so much companies are willing to pay for a given position.",1568084872.0,2019-09-09 23:07:52
463,An interesting conversation with my Head of Engineering,34,cv3x3q,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cv3x3q/an_interesting_conversation_with_my_head_of/,8,"This happened a few weeks ago, I was grabbing a few beers with the engineering team where my Head of Engineering asked me an interesting question. 

R, how long do you think you will be an engineer? 

Question definitely took me by surprise, I asked for some clarification. My Head mentioned that have some strong qualities of deliverance that I should really should tap into. 

A bit about me,  I am still in very early stages of my career I will be wrapping 3 years of experience in a couple of months. I have primarily worked on Web Based Applications, and feel have a lot to learn/improve and contribute. I am no rockstar engineer and there are some engineers on my team who for sure will reach to that point. For me personally, I know that my strengths will never match to those levels to take me in that direction. I would say I am a proficient engineer and can get the job done, but also feel I can manage the operational/business side of expectations.

So for the past couple of days, I have been trying to reflect on how I should mould my career, what targets I should aim at this stage of my career. I decided to post here just to get some insights/feedback , if someone here was in a similar position at some point in their career",1566734873.0,2019-08-25 08:07:53
464,What workarounds have you done when you've been told to use some software that doesn't run on your operating system?,39,jg6ptv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jg6ptv/what_workarounds_have_you_done_when_youve_been/,24,"Were you able to convince your boss or manager to provide an alternative or just forgo it with some valid reasons? I'm just wondering if you've ever gotten into that situation with a particular job or project and it has gotten in the way of your usual OS and desktop environment with which you work on. This was particularly painful in the days before Docker and containers.

As an example, many years ago I was told by a remote developer working off shore for the particular project we're on, I have to install a particular SOAP/REST client software. But I was developing on a Mac operating system and the client only works on Windows. We didn't have an easy workaround. My boss had his own approach, remove me from the project cold turkey and put me on a different one. Well at least something worked out lol",1603423954.0,2020-10-22 23:32:34
465,Need advice for a indiv. contributor developer being approached for a lead dev role. Advisable to dive into my first lead role with a different company?,39,inzvu8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/inzvu8/need_advice_for_a_indiv_contributor_developer/,13,"I've been given a chance to interview for a small startup that is looking to fill in a Lead Dev role. The role will require leading 2 other developers, and maintaining the dev cycles of their products. The startup is in a pre-seed round of funding and they are up front that pay will be limited so I shouldn't expect too much money (but definitely better than equity-only). Putting that into context, I currently have no job and Covid just made finding something else tougher.

For about 90% of my career, I have done things at the ""task level"" with no big scope on the business side of things. I have taken autonomy for most of my work, for better and for worse. I've never had a mentor. And everywhere I go it seems I get to work with a bunch of ""cowboys"" where they program completely the way they see fit. No CI/CD pipelines. Just a basic Git pipeline that goes from local -> dev -> manual QA -> production. No hooks for linting or for tests. 

And so I have gotten used to that workflow, and for a while I thought it was the standard, but now I know this is not the case and I've been doing a lot of things hacky and wrong. I try to write maintainable code, but still haven't been exposed at the job to real-world code that has tests and automation hooks. At my jobs there's usually a greater emphasis on getting new features out, than to have code properly tested.

The last time I did any high-level planning of a project was about 5 years ago, where I had complete say on how the back end should be architected, including what stack and framework it should be built on. This was a big opportunity for me to see a big part of the project being developed from start to finish. But before you get too excited this is still within the scale of a smaller client, and the project had about a few hundred users tops. And again we used a barebones pipeline with no tests. After that project, it mostly was back to task-level stuff, banging out features and closing tickets. I can grok some application designs, but not in terms of something that I know how to scale to thousands of users over the cloud.

That brings me back to the startup company. This too will be small scale but I will be 100% be a lead and not simply taking the helm of one product's architecture. I will be expected to make decision on architecture AND budget. I will also have to manage the 2 devs and I never managed any people at all (not even working retail jobs). How do I know if I'm ready for it though? Have you dived head first into a brand new role and into a brand new company all at once?

To sum it up here are my positives:

* Known to be a good communicator in remote roles (I have done a lot of remote work pre-C19)
* Work mostly autonomously with little need for hand-holding
* Good amount (7+ years) of experience with startups and small biz
* Can get thrown into a ""hornets nest"" and adapt fairly quickly to different tech (Cloud stuff might take a bit more time)

My negatives:

* No prior management experience
* Rough around the edges in good testing practices and still used to working with ""cowboys""
* No experience with how to scale things up past 100's of users

I don't want to BS people and say yea I am really skilled with certain tech and practices when I clearly don't, but I also don't want to undersell myself. But do a lot of people actually go into their first lead roles like this without a problem, especially to lead at a small startup? I've jumped into a lot of  ""hornets nest"" situations before but is it too risky with trying out a lead role?",1599477532.0,2020-09-07 07:18:52
466,SDET to Senior Software Engineer transition,36,i90t31,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i90t31/sdet_to_senior_software_engineer_transition/,41,"I have 5 years of experience, 2.5 has QA Analyst (mostly manual testing) 2.5 as SDET (UI test automation using selenium and some API testing) I started working as Senior Software Engineer in a mid-size tech company 6 months ago and I am struggling a bit with the transition. 

I have a master's degree in CS so I know I am a decent programmer but as this is my first time working as a Software Engineer and as a senior engineer I have to help more junior engineers I feel a bit overwhelmed. I have good understanding of data structures and algorithms but I don't have enough exposure to software engineering/design concepts. 

What are the technical skills that I need to master in order to be a good Senior level engineer? Are there any books, articles, papers I should read (and implement)

Edit: I want to add that my manager and my team are happy with my work. There is no talk of letting me go or demoting me. I am asking because I want be better.",1597357436.0,2020-08-13 18:23:56
467,Extrememly demotivated recently due to Company's performance and WFH,38,i1j862,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i1j862/extrememly_demotivated_recently_due_to_companys/,20,"I'm getting complacent and losing the drive to get stuff done. It's my 4th month doing WFH, and my productivity had been cyclical, sometimes it's good, then I'll get into a slump.

I'm in a slump recently, and I'm losing faith of my startup company. I don't see an exit event any time soon.

Today, my manager pinged me and asked me about my productivity for the first time, and told me to take off early if I don't feel like it. I feel like our IT have been monitoring me to check if I have my IDE open or something.

Is it normal?",1596271775.0,2020-08-01 04:49:35
468,How do you know when you are burnt out with your job?,35,htt0tv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/htt0tv/how_do_you_know_when_you_are_burnt_out_with_your/,36,"Some background before I get in to my actual question.  I've been at this job for 14 years and on this project for 12 of those years.  While I've tried looking for a new job on and off over the last 5 years the lack of motivation to do leetcode pretty much holds me back.  I still take interviews from the Googles of the world, but I always know I won't pass.  Just like in school I was always the last person done with tests and mid-terms using up all of the allotted time, I feel like I do the same interviews and it doesn't look good for my skills.

For the last year or so I've been pretty ambivalent with my job and since we have gone to WFH in March my ambivalence has grown.  At this point I really don't care if we release or not because I get paid either way.  It's like the quote for office space, ""it’s a problem of motivation, alright? Now if I work my ass off and Initech ships a few extra units, I don’t see another dime, so where’s the motivation? And here’s another thing, I have eight different bosses right now"".  While I don't have 8 bosses, when I screw up I hear it from at least 3 different people and it's pretty much same conversation each time.

I feel like I've become super cynical and critical about work where I internally become irritable and impatient with co-workers.  I bite my tongue and put on the happy persona and answer professionally, but internally I'm all WTF this this person doing.  I definitely don't feel as productive as I was even 2 years ago.  I just lack energy and motivation to just get things done on some days and I pretty much waste those days doing other stuff.

I definitely lack concentration at some level as things have started to easily distracted me all of a sudden.  I definitely have lots an afternoon here and there to an Office marathon that I found on TV.  I don't have a home office or anything like that as I live in a 1 bedroom apartment.  So I sit in the living room for work and have the TV on in the background pretty much all day.

When I do complete work, I don't feel any personal achievement about it.  It's just another task off of the list of tasks that are so long that you can't seen the end.  Sure the project has goals, but the path to achieving those goals are determined as we walk the path.  So any reward for finishing a task early is getting a new task.  Even when we do a build, there is not pause or breath of yay build.  It's start working on the next build if you are done with tasks for this build.  So it's just a never ending list of work and builds just blend in to the background.

I feel very disillusioned about my job as I see is the negatives of how I think we do things inefficiently, but when brought up to my boss there is just lip service of I agree but with nothing changing.  Even volunteering to help with improvement gets shutdown as I really need you to work on these bugs/features because X/Y/Z.  

When talking about this with my boss in 1-on-1s, it's all lip service where he says the entire team is working hard towards X and I need to just bear with this for a couple more months and it'll get better.  It never does though and it's just keeping with the status quo saying it will get better, but no behavior change is actually occurring from anybody above me and it's just business as usual.

While I've taken days off here and there, I never seem to recover properly.  In a normal year I usually have a 3 week vacation during the summer where I travel somewhere, but this year that would not be reasonable.  We can bank vacation days that carry over each year as well, so there is some motivation to just bank the days and get paid out on then when I leave oppose to burning through them all.  

Some days I wake up in the morning with huge headaches and I feel like high blood pressure and take a sick day, but that's about all.  I exercise and doing all that stuff as normal, so I don't think health is an issue. I'm probably eating healthier now by cooking all my own food then eating the processed free food at work.

Is this burn out or is it just something else?",1595154352.0,2020-07-19 06:25:52
469,[Request] Material to improve on communication skills.,35,hcrdj0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hcrdj0/request_material_to_improve_on_communication/,38,"Hi,

First of all, I hope that you and your close ones are doing fine during these times. 

I am a junior developer and I have been working remote for a year and half. I realize that it is very likely that I won't be working in a small team and doing it remotely, so I would like to read some books about that would help me to improve my communication skills in a corporate environment (probably in any environment).

I have realized that more often than not, one of the biggest challenges that people confront in a day to day basis is dealing with coworkers or clients. I am aware that most of these ""soft skills"" are learned through experience rather than books, but given my current conditions I would like to do something that could help me a little bit.

I will appreciate any help, thanks in advance.",1592707119.0,2020-06-20 22:38:39
470,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,37,g0eqqu,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g0eqqu/ask_experienced_devs_weekly_thread_a_weekly/,126,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1586794346.0,2020-04-13 12:12:26
471,"Has anyone obtained an ""above average"" or ""excellent"" rating during yearly merit increases?",37,ep300f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ep300f/has_anyone_obtained_an_above_average_or_excellent/,29,"So I had my yearly review and got the  usual spiel 

>you were great, you had excellent quality, but you're also average so we're sticking you in the middle of the bell curve

I know it's all subjective, but has anyone really received a 5 out of 5 stars or something above average during a yearly performance review?",1579127413.0,2020-01-15 17:30:13
472,"Having recession fears, how should I plan ahead with my current situation in my career?",36,d6orzi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d6orzi/having_recession_fears_how_should_i_plan_ahead/,19,"To sum it up, I started my career since the start of the last recession late 2007-early 2008. Fast forward some 11-12 years later, fears of a possible recession are building up among more people.

And what makes me feel bad about this is that *I am in no better position financially than I was as a fresh grad.* Aside from obtaining more experience, my years seem like they were completely wasted because I did not get better with saving my money, nor have I earned much more than when I started.

I have been mostly hanging on and trying to make ends meet with low paying contract jobs. Most of these 1099 jobs aren't lucrative because they weren't meant to hire an expert- they just needed an extra pair of hands without the cost overhead of hiring a W2 full-time worker.

Sparing you most of the details, I spend about 25% of my career days looking for a job w/o a job. I started my career $12/hr part-time and now last time I was making $35/hr part-time. Not a bad increase but not great either, especially for a time period over 10 years. I never felt like a core player in most dev teams or companies (and these are very small companies) I always felt like just a guy who only fills in a small portion of the big game and just warm the bench most of the time.

And now with the fears of a recession setting in, I don't know what to do. I've been recently building momentum with contract jobs increasing my pay. These temp contract jobs seem to be my specialty because no company in this entire planet seems to want to hire me full-time anymore.

And now I still have no money saved because I go back and forth between 1099 and unemployment, and with seemingly no way to charm the full-time employers, what am I expected to do to cover my ass for a recession?",1568977307.0,2019-09-20 07:01:47
473,"I cannot maintain job security as a software engineer, much less being paid adequately. Am I simply not cut out for the career?",39,cvwcxg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cvwcxg/i_cannot_maintain_job_security_as_a_software/,48,"Most of us know that CS, is one of the best careers to make a good income especially if you're in the US and your skills are more technically inclined. But, like any other career, there are also outliers and I am one of them. I have several years of experience but I think it's all a wash. I only get hired with low-ball offers. When all's said and done I am just well underpaid for the medium CoL city that I am in. Probably in the bottom 10%. Of course that doesn't mean that the industry is doing bad, but it probably means that *I* am doing bad.

Yet this has been ongoing with me for all the jobs I've had so far and it's been 7 developer jobs going on searching for my 8th job. They all pay terrible for the CoL. Fool me once, shame on them, fool me twice shame on me. 

People with similarly humble starts of $25k salaries etc. usually go on to make $100k a few jobs later but not me. I started with a $12/hr web dev job. 12 years and 7 jobs later I am barely cracking $30 an hour as a 1099, and even then it's only for part time work. I started out my career with a full time job as a junior dev, but over the years, my time being employed has been reduced to a trickle. I spend more time being out of a job than in a job. Also I have zero liquid assets.

And I also build projects to keep my skills current. But for what? I still cannot get any good offers. So any suggestions to build projects have already been taken by me, trust me. I am just burned out for doing more projects and interview practice and more projects at the moment.

Despite my income situation, I'm not homeless though. My mom's currently taking me in as a dependent (not in the official tax meaning, just the regular meaning). 

However it's pretty humbling to be dragging your feet for what is going through four jobs and six years living with her and still not being free, because I apparently I cannot manage a career like a proper adult. I just wanted to live my post-grad life kicking off with a job and believed that my experience just snowballs and speaks for itself for advancing forward into better jobs.

If I cannot even maintain job security in software engineering, a field where there is a high demand for workers, am I just simply being too lazy? Do I have a wrong attitude towards being a responsible adult?

Just to be clear, I am not exactly asking if I'm cut out to be a programmer. I'm asking if I'm cut out to *have a programming career*, as those things can differ. I'm in over my head here and I feel like an irresponsible manchild seeking help from struggling to make livable income at the age of 37.",1566892767.0,2019-08-27 03:59:27
474,New place showing their true colours,38,coc85z,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/coc85z/new_place_showing_their_true_colours/,3,"Have you worked in a new place where after a few months, the people showed their true colours e.g.:

* It can be in the negative e.g. hostile leads or teams, empty promises, to just working long hours because everyone ""needs to do it"".
* To the positive e.g. people helped each other out, supportive, etc.

What did you do in such circumstance? For the negatives, did you just try to adapt, or leave?

For the positives, did you reject any other offers, or stopped your job search?",1565432666.0,2019-08-10 06:24:26
475,What is life like in Silicon Valley,41,biqfhd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/biqfhd/what_is_life_like_in_silicon_valley/,31,"I live in the south, I've basically capped out career wise for my age. Any upward movement is impossible because the companies here fall into two categories. Sane flat hierarchies where middle management has been there for 8 years and the only possible way for them to leave is via retirement or merger due to domain experience and company stability. Or a pump and dump at the pay extremes where you make the exact same product over and over each month.  


I am curious if Silicon Valley offers any enhancement lifestyle wise. Is the traffic worth it? Does the cost of housing and higher taxes negate the pay? Things like that.",1556578706.0,2019-04-29 18:58:26
476,Anyone else have difficulty figuring out career goals?,34,jegdgw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jegdgw/anyone_else_have_difficulty_figuring_out_career/,13,"I work in an R&D lab, and I love it. I get to be at the bench poking hardware and writing software I love. Every once in a while someone asks me (in house) ""what do you want to do in the long term?"". I can't seem to come to an answer. I mean I know what I don't want to do, boring maintenance work, but I don't know where I want to go forward. I love what I do, but I don't know how to grow that into a career. In short I love what I do and want to keep doing it, but I'm not sure how that doesn't lead to career stagnation.",1603188636.0,2020-10-20 06:10:36
477,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,34,j18410,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j18410/ask_experienced_devs_weekly_thread_a_weekly/,125,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1601309576.0,2020-09-28 12:12:56
478,Hiring freeze still on going?,37,isdi5h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/isdi5h/hiring_freeze_still_on_going/,67,"The company you work for are they hiring again, did the start again? Looking to apply now

Edit: Thanks everyone for your response! I guess I'll have to brush up my resume plus interview skills and start applying.",1600084503.0,2020-09-14 07:55:03
479,"Senior Developer, Lateral Move during pandemic",36,g3qajc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g3qajc/senior_developer_lateral_move_during_pandemic/,48,"Hey all,

I’m a Senior Developer, currently working on several projects and managing two junior developers. I’ve been with my current company just shy of two years. 

For a while I’ve been somewhat unhappy with my current employer. There been a lot of false promises and mismanagement. 

I was told I’d be the star if I finished a big deliverable, but I was barely given credit. I was told if I worked hard I’d be given the title (and pay) of Director of Application Development. Truthfully I’m already doing this job, but have the title of senior software engineer and not being paid adequately (I’ve received offers for more than what I currently make). 

I put up with this for a while because I had a flexible work schedule since I started my position and I like my boss (the CTO). 

However, right before the pandemic I was told my flexible work schedule was no more, and that’d I’d have to do 8-5 no questions asked. Since that day I’ve been working remotely, but when the pandemic passes I’ll have to adhere. 

I started looking elsewhere and now have an offer. The new offer / position is fully remote, non-profit government funded (by DHS). I doubt there is a ladder to climb but I’m sure it would be less stressful and demanding. Same pay I’m getting now. 

Should I give two weeks? Does the pandemic change anything? Should I try to use this offer as leverage to get the title and pay I deserve?

I don’t want to screw anyone over. The company (and my boss) will certainly feel the impact if I leave. They’ll be fine, but it won’t be pleasant for them. 

I don’t know what do and hope to get some insight. 

¯\_(ツ)_/¯",1587256076.0,2020-04-18 20:27:56
480,"I like programming work, but I'm tired of all the job hopping",39,ec5wcr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ec5wcr/i_like_programming_work_but_im_tired_of_all_the/,41,"I can say without hyperbole that getting a job offer feels at least a magnitude of order more challenging than any responsibilities and goals that are set for me at work. Cranking out closed tickets and solving problems with our businesses products is trivial compared to job interviewing, what I see as arcane.

How can I get around it if I just want to stay more secure in one job for at least 6-10 years instead of switching every two years? I don't want to worry about job interviews a whole lot. I don't want to practice for them nor having to do anything that is too esoteric for my intuition.

Most people might say that most of the security in software engineering careers is not in the jobs themselves, but in the ability to get job offers relatively quickly. But I lack that ability to get offers quickly, even though I'm experienced with 6 past software jobs. So that facet of job security is already thrown out the window.

So I want to focus on my strengths and diminish my need to job hop. Are there still places maybe in ""old tech"" that you can stay for at least a decade and not worry about the prospect of job hunting? It's pretty ironic that job hunting is more difficult these days than actual working. I want to avoid job interviewing, and avoid practicing it, as much as possible in my career.

I would feel more stressed out in my life having to change jobs every 2 years just to get promoted and/or increase my pay.",1576663060.0,2019-12-18 04:57:40
481,Uber interview process put on hold,36,cnuxfd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cnuxfd/uber_interview_process_put_on_hold/,22,"Hi everyone

So i was in a process for a role as a software engineer at Uber, I passed the phone screen interview and was invited to an Onsite interview at San Francisco, the travel agency contacted me and I booked the flights and the hotel, I was just waiting for the time to come so that I could fly to the interview, however, today I received a call from my recruiter saying that because of some hire ups decisions my interview had to be put on hold, and after the call I received this mail.

""Thanks for taking time to connect with me. As we discussed, there have been some org updates and as a result, we are placing the opportunity we’ve been talking about on hold for now. We value the time you’ve put into this process and apologize for any inconvenience this may cause.""

Has anyone have had the same experience, is this something bad, or is uber going through a hard time?",1565340981.0,2019-08-09 04:56:21
482,"20+ years as a web developer, have been out of work for a year. Not sure what direction to go now. Need work soon, but not sure web development is right for me at this point.",34,bang6c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bang6c/20_years_as_a_web_developer_have_been_out_of_work/,70,"As in the title, I've been a web developer for over 20 years.  Most of that time has been on the LAMP stack with JS and jQuery.  12 years ago I was in a Director position, having worked myself up to it over 10 years at that company.  After that, I started my own company as a contractor.  I've had other jobs since then, but mostly on contract.  I'm currently looking for full time, remote jobs.

So here's the issue.  I know \*some\* JS.  And I know how to fake knowing React if the questions are simple.  I have no Node experience, or any frontend frameworks beyond jQuery and a superficial understanding of React.  So I'm kind of starting over. Actually, I'm starting over in a lot of ways, as it seems most PHP jobs require knowledge of JS and its frameworks and libraries.  And I don't know NoSQL.

So since I'm starting over to a degree and I absolutely can't imagine having to work with JS as a primary language every day, I was thinking about getting into mobile, as I've done a little Android with Java and iOS with Swift in the past and kind of liked it.  I certainly didn't feel the burnout I've been feeling in web development.

I'm much older and more afraid of venturing out of my comfort zone than I was in my 20s, but my current job search has come up empty after a year.

**So my question is, those of you who have switched from one realm of development to another, it doesn't matter from what and to what, do you have any advice, tips, caveats, or any information at all?  I could use any advice, any encouragement, or any discouragement, whatever was useful to you.**

Thank you in advance.  I'm so glad I found this sub.

EDIT:  Ok, some of this has devolved into arguments, which was not my intent.  Let me clarify.

- I'm looking to get out of web development.  JS is only part of the reason, although a large part.  There are other reasons.  It's not important. 
- It's not important because my question wasn't about how to come to terms with working in web development.  My question was more about asking for advice from people who have switched from one type of programming to another.",1554713796.0,2019-04-08 04:56:36
483,Donations to Tech-Focused Non-Profits,33,j4mr1s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j4mr1s/donations_to_techfocused_nonprofits/,15,"As I progress in my career, I feel extremely grateful to the contributions of previous generations of engineers and the work of the free software movement.  Without them, I would never been able to be where I am today.

As such, I'd like to give back.  However, I'm a little at loss of which non-profits and foundations to contribute to.  Some initial thoughts:

* Free Software Foundation
* Python Software Foundation
* Electronic Frontier Foundation

What are some non-profits or software foundations or causes that you donate to?

Edit thanks for the responses. I will consider them all for this year and future years' donations.",1601787908.0,2020-10-04 01:05:08
484,How does GDPR/other data laws apply for developing webapps as a single developer?,38,hhdekd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hhdekd/how_does_gdprother_data_laws_apply_for_developing/,30,"Apologies if this isn't the correct sub for this question, but I couldn't think of anywhere else that would be applicable.

I've had multiple ideas for developing webapps, and as a professional software engineer I would like to action some of these ideas in the future. However I keep getting held back by the thought of GDPR and storing data. 

If I were to develop a webapp, that webapp would likely store user data in a database of some kind. If I'm storing customer data surely GDPR laws still apply even though I am not a proper organisation? How exactly would I be able to make sure I'm GDPR compliant and prevent myself from getting into any kind of legal issues surrounding data? Is this just something I'd have to dedicate a lot of time to making sure I get right?",1593375337.0,2020-06-28 16:15:37
485,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,36,gugmoj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gugmoj/ask_experienced_devs_weekly_thread_a_weekly/,112,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1591028057.0,2020-06-01 12:14:17
486,Anyone visually impaired experienced devs here?,33,giv9nm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/giv9nm/anyone_visually_impaired_experienced_devs_here/,5,"I have a genetic Retinal Dystrophy that leaves me with 20/200 left and about 20/50 right eye.

I've been in the dev industry for about 15 years, but the eye thing only started about 5 years ago. Right now I still have good enough vision to work on computers, but I use magnification quite heavily.

I'm wondering if there are other visually impaired devs on here, and I have a few specific questions:

1) What is your level of sight?

2) What is your tech stack?

3) What assistive tech do you use?

4) How do you deal with ***not*** writing code? I mean, only a certain percent of ones day is spent in the IDE. How do you deal with high pressure troubleshooting issues in prod?

5) Are you less efficient than what you used to be?

6) Are you less efficient than others?

7) Have you been relegated to only doing specific tasks?

8) Are you in a high pressure environment?

9) Are you remunerated fairly (compared to fully sighted peers)

10) Do your eyes get sore/tired easily? Mine does

Thanks!",1589388641.0,2020-05-13 12:50:41
487,"Several of my coworkers were just terminated including 4 people on my team. No other explanation other than ""we had to part ways..."" what is going on?",34,g29wfu,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g29wfu/several_of_my_coworkers_were_just_terminated/,30,"I am a senior developer, and in my 10 years of working i have seen some layoffs, but what happened today has left me extremely confused. 

Several people, including people on my team, and some other teams were all basically terminated/let go today. My boss is on maternity leave, so our CTO basically broke the news quietly to me this morning, giving me a 1 hour heads up. 

Our CTO told me several times it is not about money (we just raised a bunch of money a few months ago, and are in the process of hiring more people). However he could not go into any sort of details. He apologized for the inconvenience and basically told me to do my best for now and take over the team i am on temporarily. 

The company sent out a generic HR email saying ""we had to part ways with certain people"". Anyways the sheer amount of technical knowledge lost, and all sorts of other headaches this is causing is mind boggling. 

I just feel very troubled by this, given how abrupt it was.",1587048762.0,2020-04-16 10:52:42
488,"Promoted, how to negotiate in uncertain times?",36,fos3rw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fos3rw/promoted_how_to_negotiate_in_uncertain_times/,19,"Brief backround: Senior Dev/Architect with 11+ years of experience working at a small (<50 people) but profitable company for almost 7 years. My last salary negotiation was after a promotion in Nov 2018. I asked for a base of x, my boss (the CEO) requested base to be x - 10%, with the 10% difference being paid out in quarterly bonuses, which I agreed to. Bonuses had never previously been a significant part of my TC at this company so at the end of the day I was happy to be getting what I asked for.

At the end of 2019 my boss indicated that the pre-defined quarterly bonuses would be moving to a more traditional profit-sharing bonus structure. That left me a bit skeptical but my annual performance review was coming up and figured that would be a good time to discuss.

My review, which took place at the end of February, went really well, I was promoted to what is essentially the top technical role in my company. This happened just before I was due to leave on vacation (pre-pandemic), so my boss and I agreed that we would figure out specifics compensation-wise when I returned (last week).

Obviously a lot changed between the review and my return. I previously had a number in mind but am now unsure how to proceed. On the one hand, my quarterly bonuses are not happening any more, and I haven't had any COL increase in 1.5 years, so I'm currently making significantly less than I was even after being promoted. On the other hand, with everything going on, I'm lucky to have a stable income that can be maintained while working from home, and now may not be the time to ask for the hefty raise that has been objectively well deserved.

Any insight would be appreciated!",1585178574.0,2020-03-25 19:22:54
489,Renewing the contract / asking for a raise as a freelancer during the coronavirus pandemic?,35,fkya43,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fkya43/renewing_the_contract_asking_for_a_raise_as_a/,13,"My contract ends at the end of March. I have little doubt that my employer would extend the contract as-is, but more doubt that asking for a raise would rub them the wrong way. Before the pandemic I was planning on negotiating a higher rate along with the contract renewal. Has anyone yet gone through the process of discussing a raise in the context of the pandemic, and do you have any tips? How do I broach the subject?",1584598206.0,2020-03-19 02:10:06
490,"Tips for a ""developer lite"" to get better consideration by mid-sized companies",32,f8d8ef,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f8d8ef/tips_for_a_developer_lite_to_get_better/,16,"I've worked at 4 different companies, for about 6 years, but I don't think the experience has been real great to me. I don't live in a tech hub but there are still plenty of developer jobs to go around. Also, I am self-taught.

I had a few senior developers look at my resume before. Some things they have found: 

* My verbiage is ""junior sounding"" in that I could refine what I'm trying to say. 

* The resume doesn't communicate what my work accomplished; it only states what you've done. Fair enough but just I don't have many hard numbers on efficiency, revenue, etc.

* The numbers I *do* use are small, but having them in my resume implies I think they are large. 

Last one was a wake up call for me to realize my stuff isn't really that big of a deal. For instance I mentioned working on a 50k SLOC code base, or building an app for hundreds of users, but been told these are tiny compared to work that has to be scalable.

All in all nothing about my experience says to them ""yeah, this is something we need an experienced developer for"".

The only places that are interested in me at all (willing to give an offer) are:

* Web agencies and startups that underpay developers, but only ""need"" contractors
* Startups that only provide equity with deferred payment down the line
* Non-tech companies that have a one-man tech team, and not very-well paid for their work

When I ask them about timelines to transition to full-time, they hesitate to give a solid answer and skirt around the subject. This makes me conclude I am low quality ""developer lite"". Better developers have the luxury to skip these companies because they can find much better offers.

Don't know if it's just web agencies in general, but the ones I worked for don't seem interested in getting clients beyond small-mid enterprise

However due to my resume I get rejected from medium-sized companies without an interview. I have worked on personal projects but these don't really show semblance of scale either. Also because most of my real-world work is ""plug a hole"" work, not ""build this from the ground up"". How would I get a competitive edge in being considered for any bigger companies?",1582510367.0,2020-02-23 21:12:47
491,Are you respected as an SRE at your job? Also questions about SRE interviews vs SWE Interviews,35,ewpj4n,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ewpj4n/are_you_respected_as_an_sre_at_your_job_also/,19,"1) Are you respected as an SRE at your company by your ""clients""  aka developers?

2) How do SRE interviews compare to regular SWE interviews at Big N and other well-known companies?

I'm applying in the NYC area and have 5 years of experience as an SRE. My biggest concern right now with doing SRE is that at my company we're sort of looked down upon and treated as the ""help"". Developers not respecting our input and looking down on our coding ability. (hence why im leaving, I know at least in NYC, SRE is in high demand)

I do spend most of my time coding and some scripting/k8s configuration (helm and bash etc) but wanted to know if this attitude permeates the industry. I also know the nature of this job does entail fighting fires every day for a certain amount of time. I'm split between applying to SRE roles or SWE roles as there is a difference in both salary and day to day.",1580511154.0,2020-01-31 17:52:34
492,Went for the on-site and the interview was different from what I expected,36,etu89f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/etu89f/went_for_the_onsite_and_the_interview_was/,18,"The first two interviews I did with this company were typical phone screen problems. The algorithms question was really not too bad, some string replacement kind of thing, and we actually ran it against test cases to show that it worked. The second phone screen was a system design question and I usually find those pretty easy and pleasant. I passed both.

Then on to the on-site interview. Five hours of questions. I was told it would be more of the same. I practiced the hell out of DS&A problems and went over typical system design questions. I did several practice rounds on [pramp.com](https://pramp.com) to get over my jitters. I expected the interview questions to be like these.

Instead, it was very specific to the company's product domain. Usually I think of DS&A questions as not testing specific knowledge, but rather problem solving ability and CS fundamentals, as well as checking that you can make a real working solution and debug it. In the on-site sessions, the interviewers de-emphasized getting a working solution and running the code – rather, they seemed to  just want me to get to the answer conceptually and model it approximately in code. There was also no explicit talk of time/space complexity; instead, we talked about concurrency and the data model.

I got the answer in my DS&A rounds, but the interviewer had to help me get there. Some of these were data structures you would only have ready at hand if you had developed a particular type of database, and some nitty-gritty details of concurrency APIs. I know the fundamentals of this domain, and have a lot of experience working with this product, but I hadn't spent any time practicing ""what if they ask me to design a database"" scenarios or memorizing everything in the concurrency API.

I expected to have more like a standard graph or DP question where there is an answer that anyone familiar with the syllabus of an undergrad algorithms course could get. I was thrown off by the questions. I also expected it to be like the phone screen where there are test cases to prove your solution works. Instead, it seemed more geared at sussing out specialized knowledge and observing how people communicate through technical problems that they're not familiar with.

In the last round I started to get really tired and the interviewer kept looking away to his phone which made me think I had already failed in his mind and he was just going through the motions until time was up.

To my credit, I didn't give up on any problem. I kept working with the interviewer to get to the solution they had in mind, asking questions, showing I had insights about the problem, and verbalizing my thought process. I think I did a lot better in the design sessions, as I usually do. I also tried to show my enthusiasm for the company as I'm actually really interested in what they're doing and have some connections there. I'd love to work with that team. I can't say that about most jobs I interview for.

Overall, I feel disappointed with how I did. If I had known to focus on those topics in my preparation I could have knocked it out of the park. Instead, I think I got a C at best. This company is my first choice and I love the people, but I don't feel like I represented myself as well as I could have. At least I have a referral this time.

Interviewing in this field is such a mind-fuck. I almost always come away from an interview feeling like I flunked it. But I'm often wrong. I have *zero* ability to predict how I did in an interview. Every job I've gotten, I walked away from the interview thinking ""I don't think that went well."" I'm hoping this is another case like that!",1580004710.0,2020-01-25 21:11:50
493,How can we integrate professional development time in an Agile team?,33,eqqcww,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eqqcww/how_can_we_integrate_professional_development/,19,"My company is great to work for.  It is 20 minutes max from my front door, work hours are flexible, and working from home is generally accepted (2 days a week doesn't even get questioned).  My company is not, however, very glamourous, and aside from the aforementioned, the perks are few and far between.  

As lead, I have been trying to come up with ways to both please my subordinates and entice new talent.  Due to our location (no nearby points of interest, crappy transit access, limited restaurant options, etc), the best I've been able to come up with is putting on some team workshops frequently to help everyone either get better or maintain skills they otherwise aren't using.

The team loves the idea of practicing Leetcode-style problems to become better and writing algorithms and understanding data structures, as many of us (myself included) do not have formal education (degrees) in computer science.  We have also discussed using this time to have one person give a workshop on a new tech or something they are working on to enlighten the rest of us.  The goal is that whatever we do, we are always improving so that we don't find ourselves stagnating in n years.

Our project manager is down with this, however he seems to want to relegate these workshops to a maximum of one hour per week since ""Agile allows for this"".  To me, this seems insufficient.  When I had made this proposal, I had suggested perhaps two to three hours every Friday.  

Do your teams/organizations do anything like this?  Is there a better way to approach this than what I am proposing?  Is my request for more time unreasonable?

I would be thrilled to hear what your places of work do in this regard.",1579429033.0,2020-01-19 05:17:13
494,I'm Feeling Low on Options and Could Use Some Advice,37,en5smy,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/en5smy/im_feeling_low_on_options_and_could_use_some/,24,"Hi everyone!  I decided I'd post here because this seems like one of the friendlier programming subreddits I've come across :)  Essentially, I'm trying to get a new job, and I think I managed to work myself into a space that's a bit hard for me to get out of.  Resume advice, job advice, and life advice in general are welcome!

# To Start:

Here are a couple things I want to get out of the way first:

* I've been dealing with depression for the past 5+ years or so.  I have a therapist and a psychiatrist (and have worked with quite a few in the past) but I don't seem to be improving right now.  I think I need to accept that fixing my depression first just isn't an option for me, and I need to manage finding a new job despite that.  (Please feel free to disagree in the comments)
* I have some anxiety, but it's usually less of a problem than depression
* I'm suffering from burnout to some degree.  In the past few months, I've taken three weeks of vacation, and it hasn't really helped.
* My education was in physics and math and I sort of stumbled into programming by accident

# My Current Job:

I currently work at a defense contractor in southern California.  I work a 9/80 schedule (9 hour days, every other Friday off) and have about a one hour commute each way.  Honestly, I kind of hate this job and really only accepted it out of desperation.  My issues with it are:

* extreme guilt about contributing to war
* technology used is outdated
* limited tools to use (because the computer I program on does not connect to the internet)
* Requirements constantly changing (this is a big source of the burnout)
* Request for clarification on requirements is ignored--and then a big update comes later and changes everything
* Very slow development time (although I admit I'm a slow worker)

# The Job Search:

I've started sending out applications but don't get very many responses back.  Really, I think a lot of this boils down to me not having a lot of experience.  I know I should be doing side projects in my spare time, but the burnout has prevented me from doing very much.  And it really makes me question if this is the right career path for me.  I kind of just fell into it by accident in the first place.  I know I could go back to school, but my understanding is that I shouldn't do that unless I know for sure that this is what I want to do.  Not to mention, I think I'm too slow a worker to be able to balance a job and school at the same time.  (I could barely handle my schedule in undergrad, and I didn't work many hours then).

# My Resume:

Alright, here's the embarrassing part.  I really think my resume can use some work.  I put a lot of work into it, but I frankly think I'm just bad at Resumes.  Some notes about my resume:

* I used to have a picture above my name.  I took it off here for privacy reasons, but I honestly think it's just a bad idea to have it there in general.  That said, I don't know what to put in its place.
* The hobbies section can probably disappear.  Maybe I should remove it and add more whitespace?
* My bullet points don't show a ton of accomplishments in my past jobs.  Honestly, I don't feel like I accomplished a lot in my past jobs.  (more on this later)
* Color:  This is my hot take, but I personally cannot stand black and white resumes.  They just feel so boring to me and I'd rather be working on anything else than that (I'm probably exaggerating here)
* I'm listing every job I have on my resume because everyone tells me that large gaps will just get my resume thrown in the trash

&#x200B;

https://preview.redd.it/ter1kuc0k4a41.png?width=1700&format=png&auto=webp&s=9cea9c28b7791c4c5c0487db1127c516f9503857

# Past Experience:

I mentioned this earlier, but in my past jobs, I feel like I didn't accomplish a lot.  Maybe that's because two were research jobs and one was at an auto shop, but I didn't get a lot of measurable accomplishment out of them.  I could go into more detail there, but I don't want to make excuses--it's my fault for not taking more initiative.  There's a separate issue that I can't talk a lot about my current job, but I think I can probably still get points across while being vague--it's just weaker than it would have been otherwise.

# Current Struggles:

Also, I want to bring up that maybe this just isn't the right career for me.  When I look at job postings, I'm struggling to find things I'm interested in.  That could be the depression talking though--I struggle with being interested in things in general nowadays.  Either way, I need to figure that out quickly.  I lose my parents' health insurance in a few months, and if I need to be unemployed for a short period of time, I need to do it before that happens--my quality of life will definitely decrease if I lose my insurance.  Then again, I keep hearing that it's a really bad idea to quit my current job before I have another offer, so maybe I shouldn't do that at all.

&#x200B;

Either way, if you read all of that, thank you so much.  I'm feeling really lost, and could use some guidance!",1578766659.0,2020-01-11 13:17:39
495,Problems with team work,35,dxa85m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dxa85m/problems_with_team_work/,11,"I'm an experienced dev (ten years, for what the number is worth). I have joined a team with much less experience, for half this is their first year of commercial programming.

This is not a problem in itself, but the tech lead is very light touch. Consequently, a de-facto tech lead has emerged, and he has promoted a quick-and-dirty style and wows the juniors with his brogrammer attitude. Apparently not giving a shit about code quality isn't a bug, it's a feature. Meanwhile, the code base has become a rats nest.

At first I was relaxed, enjoying myself writing a ton of code. But now I have a problem. My stuff can't be an island forever. The more I write, the harder it becomes to keep it free from this onslaught of crap. Little couplings that undermine the architectural idea, or tweaky changes that are ill-thought out then reflect on me in some demo and lead me into a blame game. I'm pretty sure I shouldn't be feeling this attachment. Also, as you may have noticed, I'm getting drawn into the team dynamics in an unhealthy way.

As best as I can I'm doing the big picture stuff like pair programming and explainers, but it is a slow process at best.

Does anyone have any practical advice on this situation? I'm guessing it has happened before.",1573956210.0,2019-11-16 21:03:30
496,Why are some experienced devs being told to cut back some years out of their resume/work history?,33,cx32mg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cx32mg/why_are_some_experienced_devs_being_told_to_cut/,35,"I've seen in a few threads where experienced workers are advised to shorten their work history and their resume. Why/when would you have to look like you've been in the business for a shorter time? I'm curious how appearing less experienced would be a good look sometimes. I get there is some ageism here and there in this industry, but I'm not clear if these suggestions arise directly out of avoiding ageism.",1567124199.0,2019-08-29 20:16:39
497,In a pickle with my software development career,38,cqbdcc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cqbdcc/in_a_pickle_with_my_software_development_career/,19,"I'm in a bit of a pickle in my software development career.

I graduated from a somewhat well known Canadian university with a CS degree. I worked on a little start up and didn't work out, not mobile related in the software field.

I got a full time offer from 1 of the big 4 and left after over a year because I didn't like the team. I got a job at Amazon and it also didn't work out and let go in under a year. After that, I worked on a few of my app ideas and released them but it's no where close to generating a stable income.

I find I'm having difficulty finding a full time job. I can make it to the final stage of a lot of interviews but no offers. It's really hard to debug the problem when companies refuse to provide feedback. 

&#x200B;

Anyone was in a jam like this? And how did you overcome it?",1565825908.0,2019-08-14 19:38:28
498,Have you experienced bad development leads/ manager?,36,c6u401,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c6u401/have_you_experienced_bad_development_leads_manager/,12,"Not only experiencing it, but seeing the technical stack or product falling apart in front of your eyes due to poor technical leadership/ management.

What happened? Did you do something to inform these types of leads? 

What would your advice to some of us who may face something similar?",1561809170.0,2019-06-29 07:52:50
499,"What did I miss? Software Engineer (20 years of exp., Java), out looking for job, need interview prep advice",34,byu198,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/byu198/what_did_i_miss_software_engineer_20_years_of_exp/,41,"My last interview was back in 2008, have worked as hands-on Java dev, team lead, managed whole software department (software dev and DB teams) and reported directly to C-suite. Now looking for job and learning that world has changed a bit. Online coding exercises are common.

Should I join the bandwagon and do all the ""Cracking the Coding Interview"" book along with Leetcode, hackerrank and whatever else is out there?

I've been on the other side of the table where I was the decision maker and I never asked these kinds of questions and didn't even asked them to write code. I was able to gauge their technical know-how and experience by having them talk through real world scenarios that I would give them.

I recently attended an interview for a Java developer and I was NOT asked any algorithmic questions at all. Given the employer was small size software vendor and had their own product that they sell to other industries in the back office space. They offered the job but I'm looking for 100% remote at the moment.

I see that interviews at Facebook, Google etc type pure tech. companies are where they seems to prefer candidates who can answer the algorithm questions and can do online coding exercise..

Please advise what's the situation out there..what am I missing? If I want to work for Dell which I consider a computer seller, do I need to prepare for the interview the same way if I apply to Google or Facebook? Assume that job title is senior software engineer.

&#x200B;

I'm looking for 100% remote roles, should I be presenting myself as a senior Java developer who can code in his sleep? The reason would be the assumption that remote friendly jobs are mostly centered around actual hand on developer as opposed to team leads or senior dev/IT who code less frequently but manage/coordinate other aspects of IT/software dev.

&#x200B;

Thank you for your help!

PS: This is my first post in this sub! Would love to contribute in whatever capacity I can!",1560173798.0,2019-06-10 09:36:38
500,Quality of Life vs. Salary Increase,34,jxrrfq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jxrrfq/quality_of_life_vs_salary_increase/,56,"Hi all, currently work and live in London, UK. I have a job offer on the table which bumps me from 60K to 70K a year. I am interested in whether this offer is worth it.

Current job: remote for foreseeable future, good flexibility around work time (I work anywhere from 5 to 9 hours a day), good teammates. Financial situation is ok. I also get to fly and code from some random European country if I want to. Official contract 9-5 with 30 min lunch. 80 people. Can be stressful. I am free to leave London and live somewhere cheaper as well.

New job: remote until covid is over. A start up that is funded by founders and did not raise money yet. Only around 10 people in the company. Interview was long and stressful and I feel like the following might not be worth extra 10K: work hours are 9-6 with 30 min lunch (so extra hour on current job). The lack of flexibility is annoying. Was told they expect a lot from the devs.

In addition, recently my team of 4 has shrunk to 2. Leaving the company. I wonder if something is up and whether my role will become way more stressful.

I have some chronic fatigue issues that resulted in burnout in 2018. I feel like in office job would make me hit that point. I could stop earning money at all if I burn out.

I just have a bad feeling about new role and current role.

Any ideas experienced colleagues?",1605917176.0,2020-11-20 19:06:16
501,Our VP of product is constantly changing stories/features because he doesn't think we are executing fast enough. Yet this is just making everything so much worse.,34,ir0175,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ir0175/our_vp_of_product_is_constantly_changing/,12,"Company is very much a startup but has grown, my role is as a senior software developer. Our VP of product has been here for around ~4 months now, and frankly i swear he is schizophrenic when it comes to stories/features. 

The team i am on just spent 3+ weeks tackling a fairly large feature request, we finally managed to get the majority of the changes fully rolled out today, after a bunch of crunch. This is after requirements changed 3-4 times throughout the last 3 weeks. 

Yes there are some rough edges when it comes to cosmetic elements, but the core tech is working. He isn't super happy with the rough edges, but i explained the feature delivery date isn't until the end of the month, and we can hammer out the rough edges (basically wording/css/etc) easily by middle of next week. 

Suddenly he wants us to completely change how we are doing it, because and i quote. ""We aren't executing fast enough."" Instead he goes into this massive tangent about wanting to completely change how this feature works. That was yesterday, today he basically creates a ""version 2"" of this feature which he says will be simpler and allow us to execute faster, and better meet the requirements of our customers. 

It is a completely and utterly different architecture. I explain that it would basically require us to rework a huge amount of stuff and will take at least 2 weeks. He tells us that we are going to need to ""crunch"" to make our deadlines. 

So then this afternoon he tells us on Monday we need to have another re-group meeting because he wants to rework the requirements again however he needs time to decide on how to tackle this. At this point i have no idea what the hell me and the other people on our team are supposed to do. 

Our CTO is away right now and won't be back until November, and this VP has done this numerous times since he joined. However many of the changes he wanted before weren't huge, this is basically toss out a large chunk of work and restructure stuff. My manager is the CTO, so frankly i am at a loss for how to deal with this.",1599889641.0,2020-09-12 01:47:21
502,"Has anyone taken a sabbatical? I've got savings, but I have fears about that gap on the resume and getting back to a career aftwards.",35,i2e5x8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i2e5x8/has_anyone_taken_a_sabbatical_ive_got_savings_but/,31,"I'm a software engineer in my late twenties, and I'm a bit burnt out.  Not totally, but I can feel it trending that direction.  It's possible this is partially due to the wrench COVID threw into the gears, but I was feeling this was before COVID started.  It's also possible that I just need a vacation, I don't know.  I don't have an insanely stressful job or anything either—I work a fairly typical 40-hour workweek.

**I feel I've mainly been focused on my career since college, and not focused enough on myself and my happiness.**  I wouldn't even say I'm *unhappy*, just that I'm... **blah**.  I think I'm less fun to be around than I once was, less interested in things, and less social than I ever have been.  After work I just veg out and browse Reddit and Youtube, watch TV, and generally waste my time.  Lately I've had more small projects (due to COVID boredom) and that's been nice.  I'd like to do more of that.  I'd like to get in better shape as well.

I have enough cash on hand to live for more than a year at full-expense, and I think I could probably double time that if I were to cut back on spending.  I'm also always looking out for a side hustle or business idea, or to scale one of my preexisting ones.  Maybe something would come of that, but I'm not holding my breath.  I also live with my girlfriend, which changes the dynamics slightly compared to a single guy living alone.

I always hear that taking a sabbatical is an absolute **resume-killer**, that you get filtered out by screeners in the first round, and that when you finally do take a job it'll be at a lower level with lower pay.  That being said, I also know that the hiring market for developers is always pretty damn hot.  Even with all the cutbacks due to COVID, there seem to be plenty of companies hiring.

If it helps I think I'm personable, good at interviewing, and a solid developer to boot.  I think I make a good impression when I get in front of people.

I'd be *extremely* grateful if you could share your experiences with taking extended time off, interviewing/hiring people who took extended time off, or just general life advice surrounding these thoughts and feelings.",1596411995.0,2020-08-02 19:46:35
503,How to help grow a junior dev,32,gskgwo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gskgwo/how_to_help_grow_a_junior_dev/,15,"Hi everyone,
I have so far been a individual contributor , so don't have much experience in mentoring.

Recent a junior dev started to work with me and o was given feedback from management that his performance is poor.

Based on my interaction with him, he seem to depend too much on beeing told to do what needs to be done. His bad ratings are comming because he worked so far on vague projects or where ownership was flaky. 

Other than that he is too afraid to confront anyone if he is facing issue. For example, even when his task is blocked on some one he is not escalating. I see a severe confidence problem. 

I am also not sure if genuienly he lacks ability. When I assign him a task I have explain him multiple times what needs to be done at low level. This is effecting my productivity as well. 


I see some issue from management side as well, as there is severe micromanagement , as in people are very serious about estimates.

I wanted to check with you, what strategies can be followed to mentor and how to reduce redundant discussions with him but help him grow.",1590749083.0,2020-05-29 06:44:43
504,Unit tests as a part of career development,32,fx9era,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fx9era/unit_tests_as_a_part_of_career_development/,133,"I have been working as a .NET developer for going on five years. I have held three jobs in this time frame. None of these jobs has ever utilized any unit testing nor engaged in TDD.

I do have a side project where I have made a point to do some unit testing, but probably wouldn't declare the project TDD.

When it comes to future opportunities, how much should I worry about having very little past professional experience in unit testing? Would I eventually need to accept a job at a lower salary because of this? How might I go about overcoming this career deficiency?",1586391491.0,2020-04-08 20:18:11
505,"[Just sharing thoughs] 5 yoe, rejected by Google's phone screen",33,fjt61j,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fjt61j/just_sharing_thoughs_5_yoe_rejected_by_googles/,77,"Recently went through Big G's interview process *again.* Last time I failed at onsite in 2018.

Got asked a question about n-ary tree and finding min cost it takes to traverse. It was a bit of a cryptic question with wordings, but I answered with DFS and did come to a solution after couple hints. 

Got a call that I was rejected. Recruiter said that although there were positive aspects in the interview, they are not enough to warrant an onsite. No clue what to make out of this. Rejection always sucks but the interviewer was super-friendly, got a really quick update (within days) and the recruiter wants me to try again in few months.

I already work for an SV based startup but being an obsessed mofo that I'm, I'll continue to grind LT and try again as getting into Big G is my goal (I think just to validate that I can do it).",1584424244.0,2020-03-17 01:50:44
506,Should I start my own company?,35,fdygiy,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fdygiy/should_i_start_my_own_company/,59,"I am currently at a good job as a mid level - senior developer. I went to a good school. I feel like I am technically above average, and i have a passion for learning this material. That being said, I pretty much dread going to work. It just feels so beneath me, and a waste of time. The money is good, but I am not interested in it at all.

I don't feel like the 8 hours of work I do is worth the salary. I feel like a prisoner, and I always have. The idiosyncrasies and social dynamics of work feels like prisoner and prison guard.

I have never worked at a FAANG. That's my next goal, but I really just want to work at one to prove to myself that I can do it. I don't think I'd find the work interesting either.

I've always felt that perhaps I got into the wrong field. I have never had a burning desire to do this, but I was always good with computers, and I've transitioned to understand programming. But I have always enjoyed other more moonshot hobbies such as painting and films.

I don't want to quit my job or corporate work right now, but I am looking for the way out. I want to follow my passion. I've been in the real world for a while now, but I still have my dreams. I haven't been grounded into the dirt. I still have hope that this world isn't a global farmhouse pumping out energy units, and that one can achieve independence. Enjoy the good life. Despite the color of the skin or their socio-economic status. But perhaps I am still not old enough.

I love the idea of programming. I view the experiences that I have on platforms such as reddit, twitter, Instagram, as works of art. I don't feel that sensation of creating art at my work. This is why I've had an idea to start my own company. I don't know exactly what it would be.

I want to create a company in an attempt to give my life some meaning. To give my life some context of control. ",1583457250.0,2020-03-05 20:14:10
507,Asking for Time Off Between Switching Jobs?,34,eu9wb3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eu9wb3/asking_for_time_off_between_switching_jobs/,14,"1. I'm interviewing to switch from my 1st to 2nd job. However, I want to spend a month in-between traveling. Is this common or should I expect to get rejected for that request?
2. Do I ask for this after signing an offer or during negotiations? Will this negatively impact my offer(ie lower TC, flat out rejection)
3. What justification should I make? example: I already planned this trip months prior, not knowing I wanted to switch jobs, or I'd like to be 100% refreshed so I can give full focus the moment I start this new job, etc..
4. Does anyone have an example and how it turned out for them?",1580089427.0,2020-01-26 20:43:47
508,Frustrated at Bay Area startup - Bad management or culture shock?,34,eu0pm6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eu0pm6/frustrated_at_bay_area_startup_bad_management_or/,45,"TL;DR: venting about my frustrations at work, but I'd like to get your thoughts on my situation.

I'm a full-stack developer from Finland. I moved to the Bay Area about three months ago to work for a tech startup (quite established already, with around 100 employees)

The way how things are managed here are driving me insane, to the point where I literally have to run out of the office building in order to decompress. I'm seriously considering getting therapy now, since workplace frustration has been a reoccurring problem during my 4-year career.

Here's what's happened:

I was put on a project to develop a single page worth of UI for a backend API. I'm supposed to work together with five other developers (four of them offshore) in order to ""do things in parallel to save time"" and finish the project within two weeks.

In my opinion, this makes no sense at all. Although the UI is somewhat complex, I think one or two decent developers should have no problem to finish something in two weeks.

I get a bad gut feeling about this. **I would expect the senior engineers on my team, with around 10 years of experience, to know that this is not a efficient nor reliable way to develop software. Have they never heard of the Mythical Man Month?**

The project lead (who is also a senior developer/architect) gives a task to each developer in a seemingly ad hoc fashion. I'm left with a task which is basically impossible to complete at that point, due to dependencies of others. I raise this concern with the project lead. It's resolved by having me pair program with the local dev.

It takes like three days until we even get our first lines of code written. Pair programming constantly for days in a row is very mentally draining, together with the constant back-and-forth communication with the lead and other devs. It also doesn't help that there's unresolved tech debt which makes testing with the API even harder.

After about two weeks, the project is about to finish. At the standup, the project lead seems very enthusiastic about, getting the project shipped, and suggests we should make a deployment for testing during the same day.

Here's when I start to feel really bad. To me, it's clear that the project won't be shippable soon, but it astonishes me that nobody else seems to realize this.

Of course, it would make sense to raise a concern at this point, but I don't really feel comfortable doing so, due to peer pressure and being the new guy in the company, and saying that their management style makes no sense to me at all. I also don't really know how I would deal with it in a constructive way. The best I have come up with is to say that I simply prefer to do more individual work.

I casually asked my manager if we're going to have a 1-on-1 at some point, he replied ""next week"", and seemingly brushed off the whole thing.

Another thing that annoys me is how the project lead handles code reviews. He occasionally pushes **breaking** changes to the branches he is reviewing, the motivation being ""we simply don't have time to do it any other way"". He also gives suggestions with code snippets that literally make no sense (such as conditions that are always truthy). And this is from a senior developer with around 10 years of experience.

Then there also the ""constant rush"" (""things have to be ready today""); juggling around with story points and burndown charts (after having worked in a Kanban environment, all of this feels like BS to me), half-assed or non-existent retrospectives, sloppy communication etc.

One morning during the daily standup, my manager comes in and demands that all open PRs have to be merged within 30 minutes **on the spot**. What's the point of code reviews then if you aren't even given the to have a thorough look at the code? Anyways, this has only happened once so far.

\---

Is this common Bay Area startup culture, or am I in an exceptionally bad situation? (The company has a few negative reviews on Glassdoor which match quite closely with my experiences so far)

Is this the kind of situation where you would consider leaving the company? (Switching companies is non-trivial for me due to my US visa status.) I initially thought that I would just be able to ""go with the flow"" and not care so much about my job, but as it turns out my current situation isn't sustainable for my mental health in the long run.

I should probably have a talk with my manager next week. I would appreciate advice on how to handle this situation.",1580034437.0,2020-01-26 05:27:17
509,"Any courses (outside course aggregators like Udemy, Lynda, etc.) which you found very valuable to perform better as a senior dev/ architect?",34,ckpdtm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ckpdtm/any_courses_outside_course_aggregators_like_udemy/,13,"I am looking mostly for backend dev/ software architecture knowledge (but other suggestions welcome for larger good of the community).

Sites like Udemy does not have any impressive course for Senior developers.

I was wondering if anyone out there is personally selling such courses? Or is there any other way to find courses meant for experienced people.",1564699915.0,2019-08-01 18:51:55
510,Struggling with design of distributed service,35,bwew0v,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bwew0v/struggling_with_design_of_distributed_service/,19,"Not sure if this subreddit is the most appropriate for this post, please let me know where else I should post if not.

I have been tasked with building a large distributed service. I have no experience in this area and have no idea where to get help.

Basically the service performs calculations on our dataset based on user input. Due to response time requirements (<10 seconds) and the amount of CPU work required, about 10,000 servers are needed to run the service at the expected request rate. We are using AWS.

Ideally each server has a different subset of the dataset cached in memory. It is too expensive to retrieve data from the datastore on demand, in terms of latency and compute time (decompression).

This brings up several challenges:

1. How do I manage requests at this scale? Is there a better way than sending 10k RPCs every time the user clicks submit?
2. How do I manage failure? What if a server goes down halfway through processing a request? How do I detect that and complete that portion of the processing on a different server, all within the required response time? And then replace the failed server so that its subset of the datastore is again cached?
3. How can requests be terminated early? E.g., it might happen that 1 out of the 10k servers finds the answer quickly, so the other 9999 servers can stop their processing for this request.

Is there any existing software that could handle these challenges? I know [Zookeeper](https://zookeeper.apache.org/) provides distributed synchronization primitives I can use to build my own system, but would something like [Hadoop](https://hadoop.apache.org/) or [Ignite](https://ignite.apache.org/) alleviate handling some of these issues myself?

Are there any mailing lists, forums, etc. where can I ask for additional help?",1559619232.0,2019-06-03 23:33:52
511,Did I screw my career over? Can I throw it out and start over?,36,bu69ga,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bu69ga/did_i_screw_my_career_over_can_i_throw_it_out_and/,23,"Hi, experienced people. I'd like to know if I ruined my career or not, or is it possible to ""scrub it off"" your career history. I have been working at a professional capacity as a software engineer since 2007, at age 25. I graduated with a non-stem major, took my own ""personal bootcamp"" teaching myself web dev using articles from SitePoint, etc.

But since 2015 I have become under-employed with an imbalance of senior-in-years-only and junior-in-presentation and performance. I'm pretty sure it's impossible to spin this in a positive light. Not to mention I have never been paid close to the median salary. I started at $12/hr and the most I've earned was $35/hr, *as an independent contractor*.

My first job out of college was offered relatively quickly, three months after graduating. It was a contract-to-hire and the reason I took the offer was because of the promise of being hired full-time later down the road (which I still haven't found in my career to this day), but later I found out it later came with the provision that my boss wanted to promote me to project manager. I declined because my passion is in programming and another jr. SWE took the offer. Therefore he couldn't hire me full-time.

It eventually dawned on me that this company wanted to remain light on local SWEs while outsourcing the rest for cheap overseas and avoid paying employer taxes to the SWEs. And that's been mostly the case with every single company I've been to. My visibility is low and I have never been promoted anywhere as a result. None of these places are good place for a SWE long term career path. And the places that do pay well and have a better engineering background, they have such arbitrary rules on what makes a good fit that it's hard to guess what they're looking for. I never pass those interviews.

**Edit: I do have a Github portfolio.** You can view it here: github.com/ccajas

Most of my social interactions now happen with a local tech Slack channel which is how I got my last contract job incidentally. I still post there almost every day asking questions and while I imagine what my progress bar toward my first full time job will be. If it takes one good job offer to turn things around then my problem is I cannot measure how close I am to getting that job. *I want to know how close I am to getting a good job, otherwise I will always feel lost and hopeless*. **I don't have to be get better at interviewing, but I want to live a normal life otherwise.**

----

Now let me briefly explain my financial situation. You probably never had to run out of money several times in your career as I have. I live like a broke college student, with a single mom who herself is poor so we live together in gov't assisted housing.

In the past year I closed a bank account, opened a new one once I landed a contract job, ran out of money spending on bills, and had to close my account again. My mom is semi-retired and I am not financially self-sufficient. Right now my first goal is to get a FT job so I can be self-reliant for the first time in my 30s and begin my independent adult life anew.

---

Somehow with all this piling up on me, it hasn't motivated me to do more. For some people it helps but for me it just shuts me down more. Go figure ¯\\\_(ツ)_/¯ Given my very unique situation, I feel like I have screwed up my career. Several people have had other protracted career issues and their ability to assist them has also ended up proving to be lacking or fruitless. I don't know if I have truly screwed up my career? Can I throw it out and start over again?",1559109997.0,2019-05-29 02:06:37
512,Pools for temp programming jobs that people can work for the interim while searching for a full-time job?,35,bgzayv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bgzayv/pools_for_temp_programming_jobs_that_people_can/,7,"Posting in the Salary Sharing thread of this sub made me realize how much of an outlier I was. My salary is way too low for an experienced dev, even if you exclude all the people working at the big tech places.

It's not like I went out my way and said ""I'm going to do everything about my career in the worst way possible"". It just kind of happened without me thinking about it, like a problem that was hidden from my sight but became insidious in the long run.

So with that said, I still need to find work to sustain myself, in jobs that keep my resume relevant, so that I can stop freeloading off my family consistently. I don't want my resume to have a longer time gap of no work again, and I don't want any unrelated jobs that would also hurt my chances to get interviewed. 

I feel like applying to a temp jobs pool would be most suited for me in my situation. I already have experience with multiple contract jobs lasting a few months each, but it's more effective if I can at least automate the run-in of getting those types of jobs so most of the hustling to find clients is taken care of for me. 

People have said that consulting agencies match this kind of setup a lot but the ones I found still need their employees to have a relatively high level of skill. I've been rejected from a few consulting companies in the past due to lack of skills. And I have the problem where I've been deemed junior for mid-level jobs but too experienced to get hired for junior jobs because I have 8 years of actual software work. So I need to present myself as a hybrid of both in an attractive manner. 

So I'm looking for a temp jobs pool that brings you into multiple different clients like consulting, but is more lenient in job requirements at the expense of paying somewhat lower. Just to have something to help pay for my own necessary expenses, while at the same time being technical work that is much more relevant to my career and marketable than waiting tables or being a bank teller.",1556165117.0,2019-04-25 00:05:17
513,Developer to Manager: Interviews with seasoned developers on moving to management,35,a40x9w,ExperiencedDevs,https://devtomanager.com,0,,1544225563.0,2018-12-07 18:32:43
514,Does it help to be honest with your boss and/or HR?,34,k4waov,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k4waov/does_it_help_to_be_honest_with_your_boss_andor_hr/,46,"I am on the precursor to PIP, have started doing Leetcode and prepping for other companies. I actually want to be placed on PIP bc severance is generous (3 months). Tomorrow I have my 1-1 with my boss, I think we both know I am not a good fit for the team long term. Is it good to be honest in this situation? Can I ask to be placed on PIP and then choose the severance? ",1606892068.0,2020-12-02 01:54:28
515,"3 yrs in the industry, need insights on my current situation",37,k3b68x,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k3b68x/3_yrs_in_the_industry_need_insights_on_my_current/,14,"Here's my backstory:

My first job was a Service Engineer role (DevOps) and I stayed in the company for 10 months. I didn't manage to stay in the job for atleast 1 year due to the company having financing issues so I quit before I got affected by that. During that time, my passion is on theoretical machine learning stuff so I code ML stuff a lot on my free time.

Next job, I got hired as a Software Engineer with focus on Big Data Engineering. Mostly doing Scala stuff on Apache Hadoop, Spark, Storm, Hive and other Hadoop-related tech. I learned A LOT, company has decent coding standards (which I really like) but the work is so stressful and I feel a little underpaid so I quit after 1 yr and 2 months. Also, my passion on learning ML stuff on my free time eventually died down because I got diagnosed with carpal tunnel syndrome and myofascial pain syndrome. I had to lessen my time on the keyboard to recover.

Now, my current job, also as a Software Engineer but in a BPO company. I'm working for a year now but I realized that this is not my type of company. The context shift when switching projects in a small amount of time is not my thing so I'm looking for a new company that's more SaaS-oriented. That's aside from the fact that I don't like Java Spring as a technology and my teammates doesn't care much about standards. They just want to get things done, even with no documentation at all. So what I'm always doing whenever I'm onboarding on a new project is, fixing documentation, adding tests on the codebase and other improvements that I can do. It's fun to do the improvements but I hate it when I get assigned to a new project in a short amount of time, you have to learn a lot on the codebase again.

I want to leave my current company but I'm also worried that potential employers might question my stay in my previous companies (which is like, 1 year on average) but I believe I have valid reasons for leaving.

So, I wanna ask, am I just unlucky? Or am I just too sensitive on things? Should I just tolerate what I hate on my current company and hope that things get better or should I just leave?

I'm not sure if this should be asked here but I want to know what you, more experienced guys, think of my situation.",1606692519.0,2020-11-29 18:28:39
516,"Need some advice on my situation – Understaffed company, doing my best",30,jro8vd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jro8vd/need_some_advice_on_my_situation_understaffed/,13,"I've been working in a small, understaffed company for a bit short of a year. Prior to that, I was laid off by my previous company and was unemployed for about 3 months. I was hired for a fairly senior role building out a new team. Immediately after joining the company, we went into lockdown so I haven't actually been in the office since March. It's been rough but I am hanging in there.

It's an older company and the pieces I work on are part of an older system we are trying to upgrade and improve. My team was built around two long-time employees who know the 'legacy' system well. One is a fairly technical PM and one is (was) a senior engineer who was really helpful in getting things done.

Much of my work for the first 2-3 months was just learning the system. There are a lot of old components. The architecture has lots of issues. I made a lot of diagrams and sketched out a plan to improve the system and for a while was feeling confident that this might work out!

Unfortunately, the helpful senior engineer left. Their replacement then *also* left a few months later.

So now it's just me, a relatively new hire, and this PM who knows the system's limitations fairly well but cannot provide more than 10% of his time, plus a couple new junior engineers. Every day, I feel like I'm just pulling things out of my butt trying to come up with solutions. The system is old and it  is difficult to change. I have made some progress, but progress is slow.

I get the sense that the company isn't doing great, but I don't think my job is immediately threatened, since we are so tight on staff. As mentioned, the company is severely understaffed. We are down to a skeleton crew due mainly to people leaving voluntarily. The company apparently did layoffs last year and many long-time employees that have been at the company 5+ years are leaving or have left.

Unfortunately this now means there aren't enough people on other teams to make a change on my behalf, so I've had to take on more responsibilities just to get the ball rolling and show some progress to management, including:

* Fielding support questions, sometimes from other offices 5+ hours different from me, which means working weird hours. We also have privacy restrictions so I can't access system logs in other regions, *all* support work is supposed to go through a local employee, meaning I have to be online at the same time.
* Waking up at 3am to fix something from an alarm. This happens maybe once every other weekend.
* Doing most of the ops work for the team to get us unblocked, including getting the one ops guy to review my work.
* Working across different teams' stacks to make changes, which are often difficult to do due to permissions restrictions. I spend a lot of time waiting for the one guy on Team X to approve my pull request. Then I have to ask the ops guy to deploy it.. Etc.
* On-boarding 2 people to the team despite not knowing how things work very well myself.
* Finally, my actual dev work – upgrading the legacy system, slowly, one tiny step at a time.

I do feel fortunate to have kept a job this long with so many being laid off. The people are also nice and friendly. I don't want to make it sound like I'm being abused. We are just understaffed and it's getting rough.

I want to change jobs in early new year ideally. I don't feel there is much room for growth here and I don't like my daily work – I especially hate doing the additional support work. I also worry that the company is losing business as customers cut their budgets. I have seen some worrying signs that this is what is happening. I don't want another period of unemployment on my resume..

I'm also terrified of interviewing. I had a hard time getting my current position with difficult interviews that dragged on for weeks. I'm trying to get the ball rolling, with the hope of landing in a job I'd be a lot more excited about. But I'm running on empty these days. I probably won't be able to see my family for the holidays, which means i might not see them for up to a year. I don't want to put more pressure on myself... but I also don't want to be unemployed.

On the whole I feel really bad about the work I'm doing. I don't feel like I'm really moving the company forward or helping anymore. I feel like we lack the resources and focus to do our jobs, and it's really demoralizing. Even so, everyone I work with is great.. it's just tough circumstances, and I'm doing my best, which is unfortunately not a lot.

What do you think? Should I try to stick it out or interview now?",1605055107.0,2020-11-10 19:38:27
517,"New job, same bullshit",32,gkfs9m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gkfs9m/new_job_same_bullshit/,69,"It’s Friday - As I write this everyone at my company is off. They gave us every other Friday off to cope with the pandemic situation.


But I’m not off, i was asked to work today. I’m working on a critical customer issue. I’m rewriting an entire service and it has to be done by Monday. The dumbass that wrote this system didn’t design it for scale, didn’t write any documentation, didn’t perform any load/scale/e2e testing, didn’t do a proper handoff before he was fired. So our new largest customer can’t use the product they just bought and paid for because they are too large. My manager pushed me to take over his project and it’s clear to me that that now means i have to firefight all the shit he left behind. Right now i can’t even bring myself to open Vim, i just don’t fucking feel like looking at code right now.


This is my third job in the Bay Area tech scene. I’ve been in the field for 5 years now, straight out of college. I left my last job a month ago because i was overworked and unappreciated and this new job was pitched to me as a chill place to work on green field projects. 


Well that was a fucking lie. One month in and i’m already pulling late nights and long hours. I’m spending most of my time fixing critical/time-sensitive production issues for code i barely know. I told my manager I’m concerned about being overworked and they brushed it off saying that i can have an easy week next week. they keep saying that. I asked for more devs to help me and i get brushed off. I might be a bit of a pushover, or hell a brushover I guess.


I’m so tired of this. So so tired.


I used to love writing code, building things. It’s probably my fault that every employer has taken advantage of my talents and abused me, leaving me burnt out at the end of each job stint. Every time i try to draw boundaries they are maintained for a while then they deteriorate as the inevitable, ever-constant “critical” customer issues start piling up.


My strongest skill is my ability to learn difficult things quickly. In my five years i’ve worked across the web stack, both mobile platforms, and cross platform (native) desktop apps. I’ve worked deeply with a number of languages. I’ve made major contributions/improvements to every codebase i’ve been asked to work on. I somehow also found the time to own and maintain some of my company’s open source community projects. It’s becoming clear to me that this is the reason I’m always being pushed to work on everything. It’s my fault but what can i do? i enjoy being useful, i enjoy making/improving things, i just don’t want to be overused. Bringing up this issue has never helped with all my jobs and all my managers. My intention isn’t to sound like a smug ass but I think i may be too good at the purely technical side of this field. too good for my own good.


I’m done with this career and industry, it’s not worth it. So what if i make high six figures at age 26? Most of it goes down the drain to live here. I see my health deteriorating; my hair is graying already and i picked up stress smoking again.


What the hell do i do now? I know i’m going to leave this job soon because i value my health and sanity. But where do i go from there? I’m NEVER working another dev job again, never. I can already tell it’s going to kill me if i don’t stop. I don’t mind moving somewhere cheap for some office space-esque service job once this pandemic ends. I make art in my spare time but i’m not ready to start living off of it. My strongest skill is my ability to learn things rapidly, but i have no other transferable job skills aside from good soft skills.


Where does a software engineer go when they’re done writing code and done working in disgustingly inhumane offices/factoryfarms?


This ends my rant slash vent session. Thanks for reading and of course if you have any thing to contribute please do. Have a great weekend everybody.",1589599824.0,2020-05-15 23:30:24
518,What are the questions I need to ask a manager while joining.,31,fs4ynr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fs4ynr/what_are_the_questions_i_need_to_ask_a_manager/,12,I am recently going for a internal movement within the company. I am working in a lead position in my current team. What are some questions we need to ask manager before I  join. I would want to know if there is checklist of questions we need to be aware before making a movement.,1585651730.0,2020-03-31 06:48:50
519,Any other leads dealing with teams with plummeting morale?,33,fpgqnn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fpgqnn/any_other_leads_dealing_with_teams_with/,22,"Tips? How are you all handling it?  And for devs going stir crazy at home, how can your team help?",1585275911.0,2020-03-26 22:25:11
520,Study Advice for Senior engineer trying to leave toxic work environment,31,eooesl,ExperiencedDevs,/r/cscareerquestions/comments/eoo9l4/study_advice_for_senior_engineer_trying_to_leave/,30,,1579051905.0,2020-01-14 20:31:45
521,10+ years exp with outdated tech/methodologies. How to catch up?,34,ecdwfy,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ecdwfy/10_years_exp_with_outdated_techmethodologies_how/,40,"Background: been a dev since 2005 at a pretty nice company handling their CMS built in a not currently popular but solidly supported stack (don't want to mention specifics because that world is small enough)  

I recently had a weird ""midlife crisis"" where I realize I should challenge myself and so moved to another company... That is doing the same stack.  At least in this current situation I started handling some devOps stuff (helped retool their git merge/branching strategies, CI, etc)

I have been somewhat keeping current with modern methodologies, but honestly in my part of the world I'm not going to be able to incorporate a lot of this stuff (containerization, cloud, etc) due to regulations and big company standards.   I'm afraid of falling behind.   

What are my options? Should I just enroll in a boot camp for modern web dev to catch up?   I don't plan on applying to a big N or go freelance or even work at a dev house... This is really so if I can find newer tools I can use it w/o too much stumbling in the wilderness...",1576710960.0,2019-12-18 18:16:00
522,"What is your story of dealing with, in any way, Resume Driven Development in your life?",32,e5qngc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e5qngc/what_is_your_story_of_dealing_with_in_any_way/,10,"If you aren't familiar with Resume Driven Development, it also goes by the terms of ""Conference Driven Development"" and ""Blog Driven Development"".  They center around blog posts, twitter celebrities, and hype from conferences that typically results in processes that work, get replaced by newer processes to either make solutions more complex, or don't necessarily solve a problem that exists.

Not saying there isn't a case to know what is new and out there, but proceed with caution and don't throw caution to the wind.",1575447953.0,2019-12-04 03:25:53
523,"Burnout, Need to move. Long and sort of sad. Could use some advice.",33,chaloa,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/chaloa/burnout_need_to_move_long_and_sort_of_sad_could/,28,"I have a number of problems I'm hoping you can help me to think about.

&#x200B;

I'm burnt out (crispy, one might say) on my current senior web developer (full stack, LAMP) position. I recently took on the responsibility of helping with the on-boarding of a new hire, and they shared with me that their starting salary is only a few thousand dollars less than my current salary, and due to their seeking an H1B visa, they expected the salary to be even higher to match area averages if the company wants to keep them on and do the H1B. 

&#x200B;

I've been with the company for many years, and it's no shock to me that I'm completely underpaid, even for this area - I have looked at sites like Glassdoor in the past and been upset about it, but I felt like I had moved passed that until hearing about their salary recently - now I feel almost completely demoralized, disrespected, and demotivated that the newest member of the team makes $3k less than I do after so many years of service.

&#x200B;

My wife needs to move soon to be closer to family due to medical issues. This would mean moving a few hours away from my father, but that has always been a possibility. I've tried talking to him to get him to move from the area to somewhere closer to other family members, several live in the South already, but nothing ever comes of it because he's extremely stubborn. His health situation has deteriorated in the past two years, and he's older, but I need to be with my wife as her parents are going to be needing more extreme measures very shortly and we want to be there for them. 

&#x200B;

I'm doing remote contract web development work on the side for a different company. Earlier this year they offered to negotiate with me to bring me on full-time remote, but their work-life balance seemed almost non-existent: near start-up levels of hours worked expected, answering tickets at 10 PM, that sort of thing. As it stands they pay me hourly at nearly 1.75x what I make from my salaried 9-5 job, but with no benefits. I doubt that their full time work offer would still be on the table after the amount of time it will take us to move (fall of this year, probably).

&#x200B;

I'm not sure that the company I'm working full-time for right now would allow remote work, even though it's all work that could be done remotely. They're a traditional, butts-in-seats, backwards mindset around here. They have problems like that in many areas. So I'm thinking about a new job when we move.

&#x200B;

I feel like I don't want to use PHP anymore. The language has gotten better over the years, but I would really rather do something different. Being stuck creating marketing websites in Wordpress seems nightmarish at this point, but it's all CRUD in web development anyways. That would leave me with learning Java, Go, or C# as a backend language if I stick with web development. I'd consider Python or Node, but I would prefer to use a statically typed language. I have no professional experience with any of those languages, just tiny hobby stuff and learning I've done on the side. If I don't do web development, I see a ton of positions in our target city that require C or C++ but I have no professional experience with those languages - only what I learned when I was in college. I have my B.S. and years as a web developer under my belt, but I don't think that would transfer very well without massive study and contributions to open source / portfolio projects that I don't feel I have time for. I think I would enjoy working with modern implementations and uses of any language, but having no experience would feel like I was going back to square one with my job prospects. So that all makes me feel stuck.

&#x200B;

What I want is to eventually lead my own technical team and move even higher into management, but I would still like to do some programming even if only on the side or hobby work.

&#x200B;

So I guess my questions are:

* What should I do?
   *  Read books on different programming languages that I see companies in our target city are hiring for? Read books on software development in general? I have a copy of Cracking the Coding Interview 6th edition that I need to get reading regularly in any event to refresh on some software development basics. I also enjoy learning from YouTube videos when I have spare time like on the treadmill at the gym, so I could do that too.
   * Get a certification? Scrum Master? Project Management? Cloud? Something else?
* When should I start looking for a job / a new place to live? 
   * Will I be able to find a job that would let me start in say a month, and then give my two weeks notice at my old full time job and then take two weeks off before the new job?
   * We want to rent, for now, until we get the lay of the land in the new city.
* How can I network effectively to increase my chances of landing a job at a decent company?
* Anything I'm missing or not considering?
   * I realize I shouldn't compare my salary to anyone else's, but once you know the truth you can't really un-know it.
   * Anything else I should be thinking about?

&#x200B;

Thank you for reading. It was cathartic to write it all down.",1564015369.0,2019-07-24 20:42:49
524,"How do you negotiate from ""an offer letter""?",33,cf6nxf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cf6nxf/how_do_you_negotiate_from_an_offer_letter/,18,"Suppose you've gotten yourself an offer letter for job X. After revising the letter, several of the clauses or terms, say  A, B and C, don't seem to be attractive and undesirable to you e.g. clause A says ""*no OT if the employee works over 8 hours*"" or clause B says your salary is 100K but you've asked for 110K.

What would you do with this scenario?

1. Write ***on email*** that clause A, B and C are not matching your expectations and negotiates them on email?
2. ***Amend directly clause*** A, B and C ***on the offer letter*** (assume the letter is on .docx), and send it to HR and notifying them of the amended points? e.g. You strike-off clause A and added something like ""*OT will be paid if working hours so and so*""

Has anyone experienced something like these?

Any tips, advice, etc., is appreciated.

&#x200B;

EDIT: The OT clause example above is hypothetical. Not necessarily applicable to all devs.",1563566449.0,2019-07-19 16:00:49
525,"Experienced Devs who transitioned into Engineering Manager / Managerial roles, how did you do it with/without a Masters Degree?",34,blse5p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/blse5p/experienced_devs_who_transitioned_into/,6,"I'm a software engineer currently looking at similar engineering manager roles and they all require a couple of years of people management experience. I'm based in US with a bachelors in computer science from a school (not in the US). Since I don't have the people management experience required for these roles. I often get advice from family/friends in US, to pursue a Masters preferably an MBA compared to MS in the US because at the end of the day, I will meet the qualifications for future opportunities (5 - 10 yrs from now) in tech & other industries.  


Most engineering managers start out as project managers, lead or prinicipal dev roles.   


Please I have 3 questions because I'm at crossroads:  
1. What made you confident you were qualified for these type of roles apart from education? (luck/ age / life accomplishments)  
2. How did you gain prior people management experience? (previous job / mba / ms / alternative education / certification)   
3. 5 - 10 years later, how has it been so far and what's next? (any regrets / c-suite / career change)

  
Thanks",1557273399.0,2019-05-07 19:56:39
526,"Are you currently at your highest point in your career so far? If not, when was it?",37,b9j3ai,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b9j3ai/are_you_currently_at_your_highest_point_in_your/,20,"For me my highest point was actually 8-9 years ago when I worked at a web agency. The pay was crappy (paid less than even most other professions requiring a bachelors degree) but most of the co-workers were enjoyable to work with, really felt part of a team here. Also despite the low pay I was able to still afford renting my own apartment at least for two years or so. That's when I felt most like an adult and in control of my own situation.

Unfortunately I didn't learn the importance of using work relationships to help me out find better jobs in the future, so most of the time I've been wandering the industry as a lone freelancer just taking whatever I can get. I had to leave my apartment and lost ability to sustain myself independently. I am hoping to make this year better than any year I've had before in my career to return to a healthier work life balance.",1554444485.0,2019-04-05 02:08:05
527,How to ask the right questions during a software demo about automation software management wants to buy?,30,k2a54f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k2a54f/how_to_ask_the_right_questions_during_a_software/,12,"Most senior dev just left. This is handed over to you. Management follow up question, after tool vendor has installed the automation software: Can you feed it the required input? What do you ask during the demo?",1606541548.0,2020-11-28 00:32:28
528,Does this job history have any indications of being a job hopper?,32,jbo0sk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jbo0sk/does_this_job_history_have_any_indications_of/,75,"Started at job #1 right out of college - all have been software engineer > Senior Software Engineer positions




* Job #1: 7 years  (Govt contracting job that lost it's funding)
* Job #2: 2.5 years (Small ""mom & pop"" dev shop where I never got review or raises)
* Job #3: 3 years (High stress from the get go - learned a lot here - ultimately followed my boss to Job#4)
* Job #4: 4 years (Startup where the work & my Tech skills were beginning to grow stale)
* Job #5: 1 year (Worked for a company that outsourced devs as contractors - wasn't stable - but did get a big skill upgrade!)
* Job #6: 2 years 2 months (Big bank - My favorite job I've ever had, but work life balance is insane - just not not enough devs for the amount of work there is)
* Job #7: starting in 2 weeks!




Would anyone consider this coming across as being a ""job hopper"" just roughly based on the number of jobs and length at each one? Or is it fairly normal for a 20 year career? All have been my decision to leave and never been let go/fired..
(I have pretty decent reasons for leaving each job..)",1602799043.0,2020-10-15 17:57:23
529,Preparing for a plunge into a senior position,34,iznzow,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iznzow/preparing_for_a_plunge_into_a_senior_position/,43,"I'm a SWE with 6 yoe in technology: 3 in software development roles across multiple languages, and 3 as a Technology Manager and Technical Product Manager. I quit my job a few weeks ago because I felt my employer had shoehorned me into a career path with dead end.

I've been applying aggressively and getting a fair amount of responses...and reach outs from recruiters. It seems most of the roles that match my career track are likely to put me in a senior position. Should I land a senior job how do I got about growing into a capable senior.

I'm getting jittery as it is thinking I'll be flagged a fraud if I don't match up to expectations. 

TBH I'd have wanted to coast as a mid dev for a year or 2. Alas, life is throwing curve balls",1601084223.0,2020-09-25 21:37:03
530,need to grind C++ after mostly using C,28,iibz1c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iibz1c/need_to_grind_c_after_mostly_using_c/,16,"I have an interview possibly coming up for an embedded software position that mosstly uses C++. I knew C++ well back in the day, but my day to day these days is C and VHDL, and I don't know about you but for me at least, syntax falls by the wayside if I don't use it. Is there a good primer on C++ that doesn't start me off with ""how to if statement""? Since most of that is in C.",1598666240.0,2020-08-28 21:57:20
531,How do you guys manage designs specs?,35,hv8q15,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hv8q15/how_do_you_guys_manage_designs_specs/,27,"I'm having issues figuring out how do I keep everything up to sync (design mocks, jira screenshots, slack convos). I'm finding that when I'm working on a ticket (with one screenshot), I'll end up coding it up, reference latest mocks, realize it's changed.

Luckily the deviation, most of the time, isn't huge so it's a relatively short fix. However, this still slows down my velocity.

I'm thinking there has to be a better way to do this. I'm thinking that maybe it's drop the screenshots and solely rely on the mocks (so link to them instead of screenshotting), but then this creates the issue of written context being stale.

Has anyone else hit this issue on their team?

&#x200B;

Thanks so much again.",1595372045.0,2020-07-21 18:54:05
532,Anyone here with experience deploying CI/CD for embedded/HWIL testing?,34,hlh7q1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hlh7q1/anyone_here_with_experience_deploying_cicd_for/,20,"I work in embedded software, and CI/CD is all the rage, but most systems seem to assume that you are working with something like a webserver where you can pull the code compile it, put it in a docker container and run it on some magic cloud server where the specifics of what the server actually IS is irrelevent.

Embedded makes that all come crashing down. Sure you can pull my code, (cross)compile it, and run it in some emulator that (maybe) works, and definitely doesn't catch all bugs, on some server somewhere with expensive, either in $$ for CotS or time to build them yourselves, simulators, or you can build, cross compile, push to native HW, and run tests.

I have some ideas on how to do this well, but I was wondering if anyone else had done CI/CD for cross compiled embedded stuff, what worked and what didn't",1593954759.0,2020-07-05 09:12:39
533,Help me to understand a helpful vs. unhelpful development manager,34,gldpmt,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gldpmt/help_me_to_understand_a_helpful_vs_unhelpful/,29,"I've this development manager who seemed to be super blunt at certain things e.g.:

* *""You don't know Node.JS? That's dangerous - you'd be out of a job - what you know now is too small and insignificant"" -* during a 1 one 1 meeting with a developer with regards to learning new technologies
* ""*Just raised it as a bug - it doesn't matter if it's a story or a bug - get it done! - this is not the culture of the company*"" - issue of bug vs non-bug
* ""*I think the PR is too big, please raised this as an issue during retrospective*"" - telling the Business Analyst that the development codes' PRs are big, thus delaying the merge and testing - (if you wondering why the manager is telling the BA, well, it's probably to get the manager's ""point across"")

These are some of the things I've been observing or hearing from this particular development manager I'm working for - he seemed to have ""opinions"" on A LOT of things. Even the testers are not spared.

My question that I've been wondering (and a scenario that I'm quite frustrated), were the above scenarios deemed constructive coming from a dev manager? What is an example of a helpful dev manager?",1589742914.0,2020-05-17 15:15:14
534,Manager interviews,35,eykar3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eykar3/manager_interviews/,9,"I am a SDE that transitioned to manager. Lately I've been thinking about what other options I have outside of my current company. There is a ton of information on SDE interview process, but I've been struggling to find resources on what the interview process is like at the larger tech companies.",1580818932.0,2020-02-04 07:22:12
535,Is it OK to not negotiate an offer if it's already good but it's the lowest end of your expectation?,30,ehkg3b,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ehkg3b/is_it_ok_to_not_negotiate_an_offer_if_its_already/,35,"TLDR: The title. 

Hey there, I got an offer from an exciting company. The market for a similar job in Turkey is around 5,5-6,5k liras ($1k), the salary expectation I told them was 7,5k-8,5k knowing that the company pays above the market. They offered me 7,5k. During the talk she asked me what do I think about the offer, I said I am very well interested (not a strategic move I know haha). Since there's not many such good companies, is it OK to not negotiate this time? I don't want to lose it lol.",1577730353.0,2019-12-30 13:25:53
536,Question: How to deepen and sharpen my skills with both languages and systems?,33,ee0fyc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ee0fyc/question_how_to_deepen_and_sharpen_my_skills_with/,12,"We've all heard the classic ""when all you've got is a hammer, everything looks like a nail""

Recently I caught myself writing something like:

`object.prop1 = object.prop1.trim()`

`object.prop2 = object.prop2.trim()`

`object.prop3 = object.prop3.trim()`

I thought, ""wait a second, 10 years in and I'm doing that to save time?"" Obviously you could run through keys like 

`for (const key of Object.keys(object)) { if (object[key]) { object[key] = object[key].trim() } }`

but then I remembered that Ruby has a fancy `.inject()` for which there is no JS analogue. Or maybe there is in `map` and `filter`?

The more I work with React or Vue the more I forget about how to build services correctly and antipatterns kind of sneak in over time.

My question is, what do you guys do in terms of learning? Do you do some sort of drills? Are there resources that are halfway between academic and hello_world.js?

I know enough about my editor but am I using it to its full potential? Feels like I'm getting WORSE rather than better as time goes on. Seems like I know just enough to get just about anything working but it's not elegant by any stretch of the imagination and I should do better. Anyone else feel this?",1577017653.0,2019-12-22 07:27:33
537,Useful books for mid-level web developer?,31,edfuwr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/edfuwr/useful_books_for_midlevel_web_developer/,15,"What are some books that have been useful for you? 

I already have *Working Effectively with Legacy Code* and *REST in Practice*. 

Effectively unlimited budget.

I work primarily with Spring and Angular but open to learning about other technologies if the book's principles are more broadly applicable.",1576903867.0,2019-12-20 23:51:07
538,Changed circumstances after resignation,32,e37z0o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e37z0o/changed_circumstances_after_resignation/,10,"The company I was about to join informed me that they are in financial stress and could not continue with my offer.
At the current place, I'm serving notice period and rejected counter offers stating that I want a change.

I'm pretty sure that I'll get some other opportunities with equal hikes etc but I am also thinking about staying back in the current organisation as I have a good setup their, wlb, people etc.

What would you suggest in such situation?",1575021816.0,2019-11-29 05:03:36
539,Asking manager to put me on other dev team permanently,32,dq6iv6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dq6iv6/asking_manager_to_put_me_on_other_dev_team/,6,"I've been assigned to another team for 6 months now as resources are scrase; frankly, I like the dynamics of this team and hope I could stay there.

But my manager mentioned that I'd be transferred back to my original team soon as she needs more people. The team is a new team, which I'm not so sure of ...

Does it put a bad light on me if I ask the dev manager of my intention to stay with the current team? The work has been wonderful; team dynamics have been excellent; and all in all I'm happy. I don't want to ruin it but I'm also worried the impression that I'd be getting from my dev manager : /

Any advice is welcome!",1572654199.0,2019-11-01 20:23:19
540,Why should I write articles when every idea I have for a topic has already been covered by someone smarter/more experienced?,29,cxmrjj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cxmrjj/why_should_i_write_articles_when_every_idea_i/,14,"Honestly, every time I have an idea for something to write about, I start looking around for sources and end up finding articles that are articulate and concise, and I end up feeling like me writing the same thing would only add to the noise. So why bother?",1567227228.0,2019-08-31 00:53:48
541,How do you adjust your interviewing after bad hires?,32,ccw72s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ccw72s/how_do_you_adjust_your_interviewing_after_bad/,27,"Hire new people long enough and you'll always end up making an offer to someone who fails to get the job done or whose presence is a net negative to total team productivity.

When that happens, what do you do to reduce the likelihood of it happening again? What kinds of changes have you made to your interviews, and how did you arrive at them?",1563090219.0,2019-07-14 03:43:39
542,My career is taking a back seat. How's the part time world?,33,c5vipv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c5vipv/my_career_is_taking_a_back_seat_hows_the_part/,13,"Throwaway because reasons. We've made a decision for me to take a back seat career wise and stay home with the kids. Spouse has decided to keep her career as our primary income so I'm home with the kids (which is great, to be honest).   


However I'd like some sort of part time gig. I've been a developer either self employed or employed by others for 6 years (different tech stacks. Typically Java or PHP/webdev). Family details will keep me available for likely 10-20 hours a week of my own time/career time.   


Is there much demand for folks like that?",1561610343.0,2019-06-27 00:39:03
543,I am a front end engineer and need to pass a system design interview,30,bup05g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bup05g/i_am_a_front_end_engineer_and_need_to_pass_a/,25,"Throwaway, I am actually a frequent responder on the sub, but now I need your help!

I got myself an onsite at a big-n for an Engineering Manager position. I am currently an eng manager for a team of front end devs, and that's where my expertise is too. JS is my bread and butter. Got in it from a non-CS angle but still pretty technical.

So I am grinding leetcode, hoping to get away with easy-medium, but one of the interview hours is ""System Design""

Recruiter tells me:

>Prepare for questions around distributing a computation over multiple machines  
>  
> Don't say ""use a standard database and do queries against it;"" They don't want answers involving off-the-shelf products, rather how do you build from scratch

&#x200B;

I know jack shit about distributed computations and distributed databases. 

&#x200B;

How do I prep so that I at least don't make an ass of myself? Any books that don't go too in depth but hit the right notes? Any blogposts for an audience like me?",1559220228.0,2019-05-30 08:43:48
544,How do you use blind? (If at all),28,jh5hh3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jh5hh3/how_do_you_use_blind_if_at_all/,60,"Stumbled across blind and think I might be underpaid for my YOE/city/level by tens of thousands of dollars.  I haven’t switched jobs much in my career so maybe that’s a factor.

Just wondering how people know they’re getting a competitive salary (note, this isn’t about just trying to make more money... more just about making a meritocratic amount compared to the next person with the same qualifications).",1603556932.0,2020-10-24 12:28:52
545,Tips on managing a team when building a side project,31,jabiad,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jabiad/tips_on_managing_a_team_when_building_a_side/,12,"So I’ve started building a side project with two of my friends who willingly joined knowing that this is unpaid and something they can do on their free time. Since it was my idea to begin with, I’m kind of leading the team, which is an unknown territory for me since I’ve worked as an average developer my whole working life. Any tips on how to manage a team like this? How to make sure that things get done especially these are my friends and that they also have their own full time jobs? How do you set expectations? What tools do you use? How often do you meet? Things like that, thanks in advance",1602617330.0,2020-10-13 15:28:50
546,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,29,j5fl50,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j5fl50/ask_experienced_devs_weekly_thread_a_weekly/,79,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1601914324.0,2020-10-05 12:12:04
547,Need some advice for increasing my impact,30,izqi5t,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/izqi5t/need_some_advice_for_increasing_my_impact/,6,"Over the last few years I've been steadily increasing my scope of influence, taking on technical leadership of bigger and bigger projects. I feel like my biggest areas of weakness are the amount of information I can consume and understand, and getting stuck on unknowns.

What are strategies you use for:
1. Making the best use of your limited time
2. Having a strong grasp on areas you've never touched before
3. Driving down ambiguity and uncovering blockers before they become an issue?

Any advice is appreciated. Thank you.",1601091924.0,2020-09-25 23:45:24
548,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,29,iju40r,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iju40r/ask_experienced_devs_weekly_thread_a_weekly/,103,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1598890387.0,2020-08-31 12:13:07
549,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,31,ifkzjj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ifkzjj/ask_experienced_devs_weekly_thread_a_weekly/,42,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1598285598.0,2020-08-24 12:13:18
550,Should I accept a job I don't really want because I over my current job?,32,i8s4io,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i8s4io/should_i_accept_a_job_i_dont_really_want_because/,26,"I currently have 14 YOE, this is all at one company and on 1 project.  This company is in the Medical R&D space and while it was interesting I'm pretty over it at this point.  I don't think I've learned anything from the company for years.  It's just working on the same old stuff I have been working on for the last 10 years.

Anyways, there is a another local company in the medical R&D space and lots of my former co-workers work there.  The Director of SWE is my former boss and when I talked to him he said I can have a job whenever I want. I barely needed to interview as it was more of a conversation with some of the principle engineers.

So everything I've heard about this company is great in terms of culture and way better than where I am now, but i really don't want to do Medical R&D any more.  Though I'm over my current company as well and I think a change of scenery will be good for me.  The issue is I don't think I want to be typecast as a Medical R&D SWE and I really want to do something different.

I went though 9 interview rounds with Apple recent and was told no hire today.  The 9th interview was a last minute added 1 hour interview on Monday.  So they were undecided and I guess I didn't push the decision over the line.  I will say I thought I performed as good as I ever have on these Apple interviews, so it was very disappointing that I didn't get an offer feeling like I was really close.

All my family and friends live in NorCal and I moved east for school and stayed for a job.  I guess my goal is to move back to the west coast at some point, but NorCal jobs are extremely competitive and I get board with leetcode pretty easily.  I feel like my skills are being the slow and steady tortoise and not the speedy hare and 45 minute interviews don't really show off what I can do.  So feeling like I actually got all the problems completed in time for Apple was a huge high for me.

So I guess the question is should I take this new job and continue looking and applying for jobs back near family? I feel like it could be months before I find a job in NorCal.  I don't get lots of response to my resume as it is, and it's only the big companies that reply.  I don't really have a need to work at a Google or anything and I'm just as happy working at a smaller company as I find what I'm working on more important to my happiness.   

I don't want to screw over my old boss by taking the job and potentially leaving at the end of the year as he is a super nice guy, but I'm also super disengaged from my current job at this point.  Having WFH makes it pretty easy to do take interviews during the day I've found.  Just make a meeting and put it in your calendar as busy.

What does everybody think I should do?",1597316425.0,2020-08-13 07:00:25
551,Tired of being senior level,31,i4bwia,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i4bwia/tired_of_being_senior_level/,16,"Has anyone else demoted themselves from senior level to junior level (or want to do so)?  I am so tired of being senior level and all the responsibilities that come with it.  Being the point person, expected to make things work or fix things or figure out new systems all the time.

I am definitely getting burned out, but short of finding a new job, where the cycle will just start again, I don't know what to do.  I would consider a whole other career, but I've been in software development my entire 20+ year career and don't know what else I can do that won't be the same or worse.  I do not want to be management of any kind (people nor product).  Been there, done that, found it even more stressful and it didn't end well (I ended up in the hospital, literally).  Since then, I've been going out to  find another job whenever I'm made a tech lead or manager; I've done this twice already. I make it very clear I do not want to be a tech lead or manager, but I'm pushed into it anyway.

""It'll be temporary, help us out""  -- yeah, it's never temporary

""But you're doing such a good job at it""  -- maybe, but my blood pressure is sky high and I can't sleep

It's now getting to the point where I feel like finding another job when I'm merely senior level.

I think what I would like to do is go back to being, and able to stay, a mid-level or even junior developer, with fewer and less complex responsibilities; I'd be absolutely fine with the salary reduction.  But I feel like this would be viewed with askance, given my experience and age (mid 40's).  It seems like being ambitious and moving up the ladder are core tenets of this system we're in.  Anything else is heresy.  (Throwaway account because of said heresy and don't want to be burned at the stake.)

These thoughts and feelings have been in the back of my mind for a long time now. What brought it to the forefront is the current project I'm on, where nothing is working right.  I can't make things work this time and I just don't care.  I haven't made any forward progress in almost 3 weeks, but the pandemic and resulting chaos/confusion have been covering it.  I'm ready to be fired and be relieved from all this, though I can't bring myself to quit outright (yet).

Not sure what I'm looking for here.  Maybe just need to rant and get it off my chest.  Thanks.",1596684234.0,2020-08-05 23:23:54
552,What's the approach for learning the complex domain knowledge in a very big project with poor domain documentation?,31,hz3img,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hz3img/whats_the_approach_for_learning_the_complex/,23,"I'm working nearly a year for a very big project for a bank with complicated domain knowledge where the know-how for it is greatly valued.

Of course there are domain experts from the client side about it, but still is a great improvement if we also have the knowledge. 

I see that only the most experienced on the project have the most know-how for the domain.
From my experience, I do have some understanding but its fuzzy to me how the whole big picture of the domain looks like. 
I can see, that other new joiners in the project are also struggling with it.

I see that there are materials for learning how the project works but is still chaotic if you ask me.

There isn't any documentation going from the start walking through the whole project and explaining its domain functionality.

Also I think the domain knowledge documentation should not assume any previous knowledge for the reader (in our case software developer) and start from the fundementals on the topic. 

I really have no clue how to get better understanding of the domain knowledge other then asking the more experienced once on the project and wasting their time.

I would really want to sugest for improvement of the documentation but of course that will cost time and money for someone to do it. 

So what's your suggestions on this topic?",1595921581.0,2020-07-28 03:33:01
553,Is it worth it to take what will probably be a significant paycut to work with more marketable technologies?,30,hmdw85,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hmdw85/is_it_worth_it_to_take_what_will_probably_be_a/,19,"My current job is on the far right of the bell curve for my market in terms of salary. Unfortunately all of the work that I do is doing maintenance on legacy systems with proprietary or obsolete technologies. While I've got experiences with collaborating and things my technical skills really haven't gotten better over the last 2 years. I'm afraid that over time I'll lose marketability.

I've kept feelers out for other positions but everywhere would be a 20% or more paycut if I intend to stay in my area. Thats hard to stomach as a primary provider to a family with kids. Especially in these uncertain times.


Would that move even be worth it in the long run? I've tried learning on the side but in my experience nothing compares to the experience you get on the job. 

Thanks for any input!",1594090904.0,2020-07-06 23:01:44
554,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,32,hdo6sm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hdo6sm/ask_experienced_devs_weekly_thread_a_weekly/,175,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1592842366.0,2020-06-22 12:12:46
555,Anyone have experience going from Lead to Manager at another company?,29,g4z377,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g4z377/anyone_have_experience_going_from_lead_to_manager/,18,"I’m currently a lead and would like to get into management. I’ve heard all the negatives about management, but am still set on making it happen. My current management chain has been around forever. I don’t feel like a management position will open up any time soon, as all the managers have been around forever and are pretty comfortable in their roles.

Is it possible to become a manager at another company without having the official title of manager at a previous company? Any tips for doing so?",1587438573.0,2020-04-20 23:09:33
556,Do you find the life of an engineer to be harder than other roles?,30,fw8mrn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fw8mrn/do_you_find_the_life_of_an_engineer_to_be_harder/,19,"Lately, I'm feeling somewhat tired about the life of being a software engineer and that as a job itself. I feel like I never really knock off from work.

Often, when the working hours are over, my mind is still on what I was doing. Although I can just stop my thoughts and switch immediately to my own life, I know I'm going to spend more time the next day trying to recollect my thoughts to continue from where I left off. But if I don't stop right at the end of my working hours, I ended up working for more hours. It's not like I can work lesser the following day because most people would still expect me to be in the scrum meeting the next morning.

On weekends, my mind tends to still think about an issue I was having in my code on Friday. Very often, I would bring up my phone and start researching on my issue while I'm on the train or at the cafe while waiting for a friend on weekends or after work. 

Sometimes, I'm tasked with a larger mission, like setting up a new cluster with the pipelines in place and all. Perhaps I'm not experienced enough to be able to know what to do straight away. I usually find myself spending my evenings after work and weekends reading up on how to set those things up.

In an extroverted world, I'm expected to switch context every now and then when people come up to me, else I may be judged for being unfriendly/unhelpful/not a team player/a jerk. To many people, a 10-15mins slot can also be time for real work to be done. To them, it's easy to do context switching and yet have real work done. When the product manager looks for me for an issue he has with a user, he thinks he is only taking 15mins of my time before I can resume to my work after that. But to me, I usually don't have anything done in 10-15mins. I haven't even finished tracing the existing code to know what to do for a story after 15mins and then I have to switch context again to something else. By the time I come back to where I was, I have to restart again. But to him, I have already spent 15mins of work on the task and the remaining hour should be 15mins lesser. 

On top of these, it feels extremely sour when I see all the product manager has to do is copy some features as ideas from an app he used yesterday, put it into the sprint and call that his plan for the product. That probably took him 10mins to write the story in our backlog but it's going to be hours and days for me to implement it. 

When there is not a lot done by the engineers for the PM to demonstrate features during the review at the end of a sprint, being the lead of the engineers, it is usually my fault for doing things too slowly again. 

Every thing appears easy to a product manager too. His jaws drop every time I estimate that I need a couple of days to complete a story. I never understood how every one else on the team just estimate every task to take a few hours when they ended up taking a few days to complete. Yet this makes the PM happier. Somehow, as an engineer, I'm expected by a PM to complete a feature fast, by the technical managers that my code is testable, high quality, scalable, superb patterns, whatever, and by the technical interviewers that I'm a leetcode master who can easily churn out algorithm solutions within minutes the first time we meet.

In terms of wages, a product manager and many other non-engineering roles can also be very competitive and similar to what a software engineer is getting. Most importantly, they look like they can more time for themselves.

I don't think I picked up programming to live a life like that. I like programming but I still want to live my own life, not dedicate my life to a company or team. Many people rave about being an engineer and I don't know if I'm just weird to feel like it's really not as awesome as what many people think. Do you experience the same thing?",1586241456.0,2020-04-07 02:37:36
557,4 weeks into job searching. Morale declining. Help!,33,f4df6a,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f4df6a/4_weeks_into_job_searching_morale_declining_help/,30,"Background: 
- 6+ years experience, full stack, specialized in backend
- Bay area
- Latest experience is working at my own startup as CTO, did a bit of everything: frontend, backend, devops, even sales
- Previous experience of FAANG

Things I did:
- Craft a list of companies that I really like, all startups
- Signed up for A-List and Triplebyte
- Working with some hiring agency with certain specialization
- Found out some of the positions in my list filled really fast, panic a bit, apply to most of them, via online (either AngelList, or their website). Don't really have a way to warm intro to most of them.
- Got very few positive response (only one showing intent of connecting after two days), and a few rejections only after one day of applying. Most of them didn't reply yet

Thoughts:
- It seems that there's a big misalignment of expectation in the hiring market, meaning
  - When a recruiter reach out directly, it's like they're begging you and you can choose to reply at your pace
  - When you reach out directly to a company, it's very possible they don't care or things changed, and they can take their time to respond
- Recruiter seems to be a big blocker in the process
  - I got the feeling that a lot of rejections right away are done by recruiters. They don't understand the JD or you very well, just made some random choice without even talking to the hiring manager
  - The most delightful introduction calls I had until now are with hiring managers. Recruiter calls are all like very on the surface. 
- The candidate experience really sucks
  - Applying online is like shooting in the dark. I never know what's on the other end, and the only thing I can do is wait.

These are pretty negative thoughts mostly because I haven't had any success really yet and am feeling anxious and down.

My questions:
1. Is this supposed to be this hard? Or I just haven't given it enough time. I was expecting the process to take around 2 months.
2. I felt really down when one of the top-5 companies on my list said no or said the position is filled. What are some tactics here to improve the success rate to some dream companies?
3. A friend told me saying you're ""Full Stack"", showing I know a bit of everything delivers a message of ""I'm good at nothing"". Maybe I should change to looking for a ""Senior backend"" position and work my way towards that end?
4. I sorta get the feeling that working at a startup founder delivers the message that ""you're a failure and wastes some years doing nothing"" to recruiter. Maybe I did it in the wrong way, but the startup is in fact shutting down. Is it true that having this experience is a negative on the resume?

Thanks so much for reading, I could really use some help and suggestions to get back on my game.",1581820152.0,2020-02-15 21:29:12
558,How can I get a new developer job learning new things on the job that I haven't done before?,30,e0q7xf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e0q7xf/how_can_i_get_a_new_developer_job_learning_new/,23,"Explaining how I'm eager to learn the stuff the company's using and that I'm very good at switching contexts isn't getting through to people anymore. I think companies have gotten way too used to hearing it at the job interviews.

I don't want this lead to an inevitable road to learning how to pass the Big N interviews just to be employable for full-time again. Software development is so much more than just Big N, very open-ended, and I feel many other companies can offer other beneficial services to developers.

Just to clarify, I took a contract-to-hire job for my first software engineering job after college, with the expectation of going full-time later. But when the company rescinded on the full-time, I had to look elsewhere for career growth and I am still looking for that to this day.",1574581135.0,2019-11-24 02:38:55
559,Anyone willing to compare their personal experiences in a different field (or running their own biz) vs working as a software engineer?,28,dwsumi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dwsumi/anyone_willing_to_compare_their_personal/,14,"Feel free to skip the following and just answer the topic question straight up.

Junior software engineer here not in a tech hub, just an average city in the middle of America.  Software is not my passion.  However, every time I think the grass is greener, I realize life is pretty good, and most other work sucks by comparison.  Writing code is moderately fun and stimulating vs most other types of work, we are respected in both companies and even general society (people just assume I'm very smart), we generally do not need to prove our worth or value to the extent other job functions might, there's opportunities abound, salaries for so-so engineers like me are still decent, hours are relatively stable, it's introvert-friendly, fellow engineers are generally smart and rational people, etc.

(note: my experience may be biased as I like my company)

That being said, I would be much happier doing work I really really wanted to do, and work that I felt I was naturally suited for... I can do software work of relatively low complexity and pick up new things if I have to (though with much personal resistance, and I'm slow to pick up), and there's probably a place for me at larger companies/slower-moving teams doing ""boring stuff"", but I know I'll never be a star player, I have zero motivation to be a star player, and I consider myself slightly below average in this field (for any decent company, anyway).  A star player in this field to me is working in a desirable tech company, or anyone who can hack it as a senior engineer elsewhere.

And yet, I'll probably never be a star player in other fields, too (although I've more confidence in other fields vs software).  I can probably live a decent life as a so-so engineer for the next 5-10 years, which buys me plenty of time to play it safe and grow a side hustle/passion into a real opportunity, which is probably the end-game for me.  But for those days I wake up and don't have the motivation to write a line of code (it comes and goes), it eats at me that I could be spending all this time doing something else.

I've spent a lot of time thinking about this, and I did pursue an old passion in a previous life (was much happier and motivated back then... but gotta say life is comfortable now, and it's nice to not really ever have to think about money, give my family money if they need it, kick back and live life in autopilot when I need to, etc.).  I tried to career change into software thinking I \*was\* passionate about it (had some coding experience before college), but have come to accept that I'm not.  Ended up working in this field out of necessity.

So, I'd like to hear about any stories, experiences, input, perspectives from fellow software engineers who have done work in other fields at a comparable level (ex: marketing or running a side business, not your first summer job at McDonald's).

Thanks in advance.",1573862901.0,2019-11-15 19:08:21
560,How much interaction do you have with other projects in the company?,32,dtq891,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dtq891/how_much_interaction_do_you_have_with_other/,28,"I've been at my current job for 10+ years and have always been a top performer, but something that happened today has left a bad taste in my mouth and I wanted to get more opinions on the situation.  

First some back story.  I'm friends with people all over the company, but I had lots of shared interests with one guy, lets call him X.  He is big on board games and so am I.  We will meet up on the weekends and play board games with a group of people that are all involved in tech at some level.  X ended up being super smart and rose up the ranks in the company I work for quickly.  Anyways about a year an a half ago he asked me if I wanted to help him on a project he was heading up.  I told him it sounded interesting, but I wouldn't have the time with all if have to do with the project I'm on.

He said it wasn't like that and how a task he is leading up for work was to investigate process within in the company and see how things could be improved as upper management hates how some teams are not predictable and some teams just excel.  He said he just wanted to talk about my thoughts on process and to use me as a sounded board on ideas he may want to promote within the company.  He said I was a good person because I had been at the company so long that I knew a lot of how things work and what could and couldn't work.

Again I said I wouldn't have time at work and he suggested we could just have the conversations while we play board games.  There were no company secretes being aired as it was topics like would Agile work within the company, what would be the hurdles to implement it and what would be the implementation of Agile.  I said sure as we are always talking about Tech stuff anyways, some of the other guys were interested in comparing notes about how their companies operate and what works and doesn't work as well.   

Overall it was pretty laid back and just conversation maybe once or twice a month while we played board games.  I know some of you will say don't put in over time for free as you are devaluing your hourly rate, but I didn't care the topic is interesting and I always like to improve my knowledge and point of view. I didn't even really consider this work.  My direct boss knew of this and didn't really care since it was during non-working hours and I was still putting in my 40 for him.  In fact he encouraged it as he saw problems in process that he would love solved, but didn't have the time having kids and all.

Anyways fast forward to today and my boss talks to me about how his boss got wind that I was working with X and how I needed to stop working for other projects.  My boss explained how it was time over my normal 40, that it was on the weekends, and how my work was not suffering at all.  He even went so far as to say that he approved it last year to have my back.

So my bosses boss, who has been at the company since the early 90's, says that I still needed to stop AND if I wanted to work overtime that I should do it for the project I'm on and not for somebody else in the company.  My bosses boss then went on to say that if he had to speak to my boss again about this then nobody will be happy about what will happen.  My boss described his boss as super pissed off over the whole situation.

My boss and I agreed that I should just lay off helping X.  We also agreed that his boss was being short sighted about improving process and how this lowers our personal moral within the company.

Do my boss and I have the wrong perspective on this?  If I wasn't playing board games on the weekend I certainly wouldn't be working, that's for sure!  So it's not lost time on my project.  We think my bosses boss sees this as lost productivity, but we both agreed that he was wrong as I was never going to be working on the weekends.

Personally I didn't even see it as work, just conversation about our industry best practices and the pros and cons of different things while playing board games.

Oh well, thanks for any opinions!",1573296710.0,2019-11-09 05:51:50
561,Social skills you want in your tech team,27,d9jdt0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d9jdt0/social_skills_you_want_in_your_tech_team/,19,"A few months ago, we hired a senior developer who seemed to be bubbly and energetic e.g. one of the staffs got really sick and he arranged for some donations for the ill staff (mind you none of the team members even noticed as they are the typical reclusive type ...). During celebrations, he'd go to people and mingle around and even cheering people. 

Technically he's competent.

Compared to the others? The others are super recluse. Don't talk much. Don't care of their surroundings. 

As a lead/ experienced staff, what do you think of this new joiner? Is this some sort of rarity in the tech world? Do you like this sort of personality in your team?
What kind of social skills you want in your tech team?",1569531960.0,2019-09-26 17:06:00
562,What are your thoughts on take home assignments?,29,d56yfj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d56yfj/what_are_your_thoughts_on_take_home_assignments/,25,"My opinion: as long as they are not too large or demanding of your personal time then they are a good conversation starter during the final phases of the interview. I do not support wasting your time on building a large project in your personal time of up to a week.

Some backgound:

A friend of mine recently completed a ridiculous assignment as a part of the interview process for a full-stack position. They had to build out what is essentially a REST API with working backend, front-end, UI, fully unit tested etc; I also gave them a few pointers on how to go about what the hiring manager was asking for, this all had to be done within a week. Imagine their shock once the rejection email came from HR! 🤷‍♀️ 

Now of course the above example is essentially a waste of time (4 weeks), but on the plus side my friend and I now know a lot more about building out a fully functional APIs and javascript.",1568698026.0,2019-09-17 01:27:06
563,Is there somewhere to get professional code reviews to improve the quality of my code?,30,c7h7u6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c7h7u6/is_there_somewhere_to_get_professional_code/,18,I can't really find any place where I can get my code professionally reviewed. Does something like this exist?,1561945107.0,2019-06-30 21:38:27
564,All this time working it seems like I under-performed on the networking bit...,33,babvyn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/babvyn/all_this_time_working_it_seems_like_i/,6,"I felt that I carried some old habits from working in department stores and other mediocre jobs when I was in high school and college. In that I only did it for the paycheck. I didn't care about the informal meetings or getting close to my coworkers... the work made me too indifferent because we're in retail, so what the hell right?

So I brought this attitude into office jobs into my line of work as a programmer after graduation. But somehow I didn't learn that you can't approach co-workers like you did at your retail job and that it's more important to network here. 

Even though I do my job well everywhere I work at, I think I limited my prospects for future jobs by just giving co-workers the cold shoulder when all is said and done. And for real, nobody refers me to jobs or anything. I'm pretty much a lone stranger when I'm out job hunting. It's especially worse when you're in those jobs where the company wants to just keep a skeleton crew of programmers so you have few people to talk show with.

I'm planning on going to local tech meetups to see more of the faces in some of the local tech scene and businesses but I hope it's not too little too late",1554633069.0,2019-04-07 06:31:09
565,"About to leave my current job, but I have an unfinished project",30,kal1v6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kal1v6/about_to_leave_my_current_job_but_i_have_an/,20,"5 of my teammates left my team & company in the past 6 months. I'm in a late stage startup that's been forecasted to be going IPO for at least 2 years. Every year they push the forecast by a year. That's why most of my teammates left.

I'm also frustrated at my company's lack of execution and I interviewed and got an offer from a company that is on my top 2 preferred company.

Now I'd like to ask what you'd do in my situation:

I'm the longest tenured employee on my team as a Sr Dev, so the rest of my team don't have context in my work. It's heavily business logic oriented, not something one can know from common sense. I've been working on a big & critical project as the sole developer for a month. My ex-manager was my tech lead but since he left, it's all on me to finish this job. The scope of this project gets increasingly big as it's very complicated to test. It's code complete, but testing this end to end is a pain.

Would you just do this project at the normal pace and let the next person finish it when I give my notice or should I pull OT to try to finish it before I leave? I'd like to avoid burning any bridges as they're all good people.",1607654149.0,2020-12-10 21:35:49
566,Career prospects for 2 offers (Go vs Java),31,k005u2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k005u2/career_prospects_for_2_offers_go_vs_java/,40,"Edit: I accepted the Go offer. Compensation and company culture were fairly equivalent, and working with Go to support a biometrics system is more interesting to me than using Java to support a files and forms system. I will also have the opportunity to get a high level security clearance at the company I chose, which would open up a lot of opportunities in this area!

Hi r/ExperiencedDevs!

I have two job offers I'm deciding between and I wanted some input from those with greater knowledge/experience.

Some background about me: I'm a software engineer with 3.5 years of experience. I've worked primarily with just core Java, but no formal testing or CI/CD work. From an internship I have brief exposure to Spring, Hibernate, AWS, Mockito/JUnit. I also had a short project working with JavaScript, Node is, Vue.js, and MongoDB. I know of agile development but our small teams didn't implement any such processes.

Now to the positions I'm considering:

Position A uses Java, Spring boot, JavaScript, Angular, MySql, TDD, BDD, CI/CD, Microservices and RESTful API architecture, and they have a traditional agile process. This position would allow me to develop all the mainstream skills I need to be competitive as a Java developer while also letting me work on my deficiencies as an engineer (testing is a big one). 

Position B uses Go, AWS, Docker, and  Microservices, and also has a traditional agile process. I've never worked with Go before, but I'm very curious given all the hype. This position excites me more and seems like it would also offer exposure to the many tools and skills I'm lacking in.

However, I'm worried about future job prospects. Not being experienced in the traditional Java stack definitely worked against me while job hunting (as soon as recruiters/interviewers heard that I don't have meaningful experience with Spring, etc their interest noticeably declined). I know there's a million and one opportunities to work with Java, but Go isn't as widely adopted.

So I wanted some input from those who have more experience in the industry. Should I go for the position that's just a tiny, smidge more exciting, and completely unknown to me technology wise, or would that be a poor choice for future job prospects? 

Any insight would be greatly appreciated. Thanks for your time!",1606229991.0,2020-11-24 09:59:51
567,How are salaries and jobs for seniors developers during the pandemic?,27,jc8fbz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jc8fbz/how_are_salaries_and_jobs_for_seniors_developers/,56,"Hi everyone,

The year is close to wrapping up and I'm close to being in the market for a new job in 2021. I know COVID19 has flushed the economy, but for us developers specifically how has COVID19 affected pay rates, have they remained the same in the US? What about new job offers and those rates? 

&#x200B;

How long did it take some of you to land a new role and was it to your liking, were you able to negotiate better terms?

&#x200B;

\*\*Also bonus points for how things have been in the Atlanta,GA market.",1602877983.0,2020-10-16 15:53:03
568,"I took a year off from job searching, and I learned a few things.",29,iixpre,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iixpre/i_took_a_year_off_from_job_searching_and_i/,15,"In 2019, after ten years of being on the grind I said to myself this is the year I get into the 6 figure salary club here in Atlanta, GA! After lot's of phone interviews, close but no cigar, and missed final rounds later, that did not happen the way I wanted it to. 

I kept losing because of arbitrary reasons such as:

* Not ""senior"" enough for this position.
* We felt that a better candidate is more suited for our needs.
* Your take home test was coded good but not in the way we're looking for.
* You missed one easy Java related question every senior should know.
* Not enough knowledge for this position.

Honestly, I thought they didn't want to hire me because I was black 🤷🏿‍♀️

I didn't take these loses...well... and then I figured I would take 2020 off of job searching to focus on my current job... to claim the 5 year pension and then COVID happened. Regardless of COVID this is what I found out of taking time away from job hunting:

* I learned that I'm less on edge (less miffed that I didn't pass the final round).
* I'm more relaxed now that I'm not worried about getting more money or preparing for interviews
* I'm glad I'm no longer talking to 3rd party recruiters. Something about them just rubs me the wrong way.
* I'm more focused on my job and improving there my manager is starting to take notice.
* I'm more engaged with my teammates.
* I'm less stressed out over all.

I'm more happier now this year ironically than the last without looking for something else. Just wanted to share my experience :)",1598755226.0,2020-08-29 22:40:26
569,Do you get a sense of purpose from your work?,29,hs6hug,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hs6hug/do_you_get_a_sense_of_purpose_from_your_work/,115,"As titled really, a sense of purpose from my work feels like the missing ingredient for me, all other parts of my life I'm happy with.  I've built skills in dev and especially testing to be at a high level in my niche, I thought reaching this point would mean I'd have developed passion for the area.  I haven't.

Now I work in finance and it's purely an exchange for money.  I feel like I've lost the north star I once had or a deeper why for my work.  I feel like I need a decent reason to complete a work task i.e. implement some perf tests for service X - but I don't learn anything, I know it all already so it becomes a chore and I drag my feet.

I have worked in other domains and it felt like the same crap somewhere else, even when working toward a social good.  A few years ago I enjoyed my work, I felt driven to perform.  Now I have zero drive and it really concerns me, I'm not sure if this is a personal mindset problem I need to address (suggestions welcome) or I need to change career path entirely.

My main goal in the absence of anything else from work has been financial independence but single income with kids so this will take much longer.  Something feels a bit wrong to slog/grind to FIRE, doing a job I enjoy much more seems far more preferable, even if it takes longer but I don't know what that is.

Anyone been in a similar place before? Figured out different perspectives or solutions?",1594920143.0,2020-07-16 13:22:23
570,Two jobs at the same company. Which one to apply for?,31,hhnzd7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hhnzd7/two_jobs_at_the_same_company_which_one_to_apply/,11,"There are two jobs with the same small company I am looking at applying to. One is senior (5+ YoE) and the other is mid level (2+ YoE). The job descriptions are identical except for the following;

* **Strong** **knowledge** of  <programming language>, <web framework>  and RESTful API's
* **Knowledge** of  <programming language>, <web framework>  and RESTful API's

I have 5 years experience developing in the programming language but I don't have the other two. While I do have a lot of experience using a proprietary web framework its unfortunately isn't very transferable to the web framework they are asking for.  I have been doing tutorials on it but it's not the same as experience.

So I'm not sure which one to apply to? Do I apply to both? Do I apply for mid level seeing that I don't have two of the main skills they are asking for or do I apply for senior seeing that I've experience using the programming language?",1593412467.0,2020-06-29 02:34:27
571,QA or no QA?,26,gpncd3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gpncd3/qa_or_no_qa/,50,"Anyone here has experience in working in organizations which employ dedicated QA person/team or do not have dedicated QA person/team. What’s your experience? Do you prefer with them or not? Those who have worked in both types of teams, which one do you like better and why?",1590344266.0,2020-05-24 14:17:46
572,Passionate about your work vs. burning out from doing it,29,gk9i80,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gk9i80/passionate_about_your_work_vs_burning_out_from/,13,"During my early years, I loved programming; but during my first job, I hated the boss so much (he took advantage of dedicated people) but because I wanted to keep my job, loved my colleagues and loved the area, I persisted.

But not even closed to a year, I burnt out completely - how do I know I'd burnt out? Frankly now (this has been years), I won't even touch the area I'd worked on before - the area I had worked on  sounds all so interesting, but I feel exhausted even thinking about it.

Flash back to many years ahead, I started to enjoy doing programming again by accident (or maybe I'm just worried about job prospects that I may need a backup job ... just in case) - I started Android and iOS development - loving it. But then, the fear of burning out got to me. I feel that it's one of the reason I never ventured out so seriously to mobile development or any other development fearing burnt out. I'm so worried that I'm seen ""passionate"" or dedicated that people would use me to the point of burning out.

Senior devs, is there a way to handle this? Any advice?",1589579590.0,2020-05-15 17:53:10
573,Terribly Struggling to Get Things Done,29,flr77h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/flr77h/terribly_struggling_to_get_things_done/,24,"I am a dev with 10+ years experience, mostly in backend and java, but did bunch of small stuff in FE as well.  
A while ago, I have resigned from my 8+ year-old job and moved to a small startup company which develops mobile games. Originally, I was expected to deal with backend and server related stuff for the games, so things were quite smooth. But then had to support actual game development, which is something completely alien to me, not only the concepts but also the tools&language used to develop the games (unity&c#). I have been trying quite hard to learn and actually code useful stuff for weeks, but the whole process is incredibly painful. Although in general attitude is okay, that they are aware that the whole thing is sth new to me, they expect me to be on my feet in a short time, with tangible output.   
I have been following tutorials, but still no proper progress in terms of my skills. Asking people in office with more experience is usually ending up with ""you need to figure out/research/learn"" which doesnt help that much.  


Mentally, I am really tired as well. I have resigned because of technical stagnation from the previous place (and, coincidentally it kept me away from the lockdown - was in China ) and games appeared to be an interesting area to work, however, I have been struggling a lot.  


I have been checking this sub quite a bit (this is not my actual user, had to create a new one as the other one has details related my own name, location etc etc ) and saw quite good recommendations in the past. Curious if anyone has been through sth similar and/or any recommendation to deal with this situation.",1584719836.0,2020-03-20 11:57:16
574,Growing past freelance,31,ffk1ex,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ffk1ex/growing_past_freelance/,20,"5+ year freelancer here, primarily on front-end or building full sites for marketing agencies.

I’m starting to hit a wall where I am overbooked and running out of hours. While I am raising rates, I also see that long term this is unsustainable, where my business is based on the time I can put in.

I enjoy being primarily a developer while letting the agencies address design & client interactions but as a subcontractor myself I’m not sure how efficient handing tasks down another level would be if I chose to build up a team.

Looking for any words of advice from others who have scaled up their freelance business by changing up or hiring subcontractors/employees. Or if anyone works in a dev only shop employed as a resource to agencies/companies simply for development.

Thanks!",1583733863.0,2020-03-09 02:04:23
575,"Experienced Devs, what do you want from an Ops/DevOps/SRE/platform team?",31,f7s7lj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f7s7lj/experienced_devs_what_do_you_want_from_an/,22,"I'm trying to formulate a satisfaction survey to send out to the development teams in my company to find out how happy they are with the overall state of tooling as provided by my platform team. However, in concerned that I'm only seeing things from the point of view of the platform, which might colour the questions I ask.

As a developer, what do you think are good properties and features that can be provided by a platform team?",1582405049.0,2020-02-22 15:57:29
576,Is the “senior” in my title doing more harm than good in my job search?,30,f0jlss,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f0jlss/is_the_senior_in_my_title_doing_more_harm_than/,31,"In terms of just raw numbers, I have spent almost 12 years now working as a software developer. I currently assume a senior title role, and I’m beginning to think  that it might be doing more harm to me than good. When I applied for my current role, I really didn’t know what to think of the senior in the title, as there really isn’t a consistent grading scheme across organisations. All I knew was that I was not a junior anymore, and mid-level isn’t really widely used in job postings; when I search for openings, the filter is usually “mid-senior” in the seniority field. Back then, I thought I’d apply for the position, and see if I got hired, and I did. However, my current employer turned out to have a very low bar.

Now I’m on another job search, and I’m aiming for companies where my knowledge gaps will be addressed instead of essentially tolerated. Having the “senior” in my title seems to be working well for attracting recruiters, however it seems to be setting very high expectations, and I’m not really sure what to do about it. I was in a technical interview not very long ago about programming-language specific constructs related to concurrency and parallel processing, and I didn’t do very well on them. I felt like I didn’t completely bombed it, but based on the feedback they expected so much more (and understandably so). It was quite disheartening actually, but I learned something from it at least. I realised this is not because I’m bad at it or anything; I thought it was just that the projects I’ve so far worked on just never really exposed me to those sorts of things. I was never required to jump a higher bar so to speak; actually the opposite: I’m discouraged from making things more complex because these places never needed the constant factor performance boost by parallelising a piece of code (which does kind of make sense also considering how much more complex the testing would be as well). However, now that I’m aiming for organisations where it matters, I’m expected to be good at it; it’s like chicken-and-egg problem.

My question I guess is, how do I manage expectations around this during the recruitment process? I’m definitely willing to lose the “senior” in my next title if that means I get to work on more challenging projects where I can fill the gaps in my knowledge. I fear that talking to recruiters about this on first contact would make me lose their interest. However, even if I decide to open up to them about this matter, I think many of them would probably find it difficult to assess the situation because, like I said, there doesn’t seem to be a standard when it comes to seniority. I’m thinking of maybe opening up to the engineers who will conduct my next technical interviews as I assume they will understand better, but I’m not sure how to approach it. Thoughts?

Thank you very much!",1581149976.0,2020-02-08 03:19:36
577,"""What's the most innovative thing you've done?""",30,evo78g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/evo78g/whats_the_most_innovative_thing_youve_done/,9,"I'm not sure how to answer this question. I've got 7 years of professional development experience. I've done a lot of different things in that time. I'm not a stack overflow copy/paster. And I've been called innovative on my performance evaluations. But... I don't feel like I have anything to point to that I can say ""This was innovative.""

I feel like we all just build on the shoulders of giants (so the saying goes). I get some idea from somewhere else I've seen it sometimes. Other times when I have to come up with something on my own, it doesn't seem to me like something that someone else in my position wouldn't try. 

So I don't know what to say. How do I judge what I've done that's innovative?",1580339911.0,2020-01-29 18:18:31
578,"Company made me an offer based on Series A valuation, I accepted, board only approved equity grant after completion of Series B. What should I do?",29,entkv1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/entkv1/company_made_me_an_offer_based_on_series_a/,21,"The equity part of my offer was X amount of shares at Y strike price (it was an option grant, not a stock grant). In my experience the strike price always needs to be confirmed by the board at their next meeting, and if it's a public company it's based on the market price, which is fine. In this case the offer is for a startup.

5 months after I joined, the company completed its series B fundraising round. 3 months after that, my equity grant finally appeared in my inbox. I suppose I could have followed up on it earlier, but with a 1 year cliff and a long way to go towards IPO or acquisition, it didn't seem worth it.

So now that I have the grant, the amount of shares is the same, but the strike price is literally double what I was told at the time the offer was made.

Despite being double, the strike price is still pretty low, and frankly if the company ends up being worth anything, I think it this difference will not be particularly consequential, but I can't help but feel like I was treated unfairly here.

Has anyone had a similar experience? Any advice/options?",1578892501.0,2020-01-13 00:15:01
579,Is mentorship bullshit?,30,egmmty,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/egmmty/is_mentorship_bullshit/,34,"I left my job, hoping to find more mentorship and people who actually cared to review my PRs/MRs. What I ended up with is people even worse at programming. Literally just complexity for no reason that I was able to pretty easily cut away and fix. I am thriving in my new company, in the fact that I excel at looking at shit code and making it better, more reliable, readable, and simple. However, I am really disappointed and can't help but wonder - are there actually companies out there where people give a shit enough to read my MRs/PRs and give valid feedback absent of ego? Culture is great, people are open to change. But I just want more of a challenge. I want people to tell me what I'm doing wrong so I can learn and do better. 

&#x200B;

Instead, all I do is find mistakes and a sad state of code that I personally know how to fix to make better. It feels great to make an impact -- but fuck, there is a lot to learn, isn't there someone smarter to show me the stupid mistakes I'm making? I'm sure there is, but so far all the people I've thought are ""smarter"" really are just using concepts that they bastardize and don't seem to understand themselves.",1577538891.0,2019-12-28 08:14:51
580,How to engineers at facebook | Amazon | Google troubleshoot when site slow or down ?,32,e2jgm0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e2jgm0/how_to_engineers_at_facebook_amazon_google/,19,"**Situation:**

Lets say you are working on a site like facebook , twitter.

And users start complaining saying - Site is slow OR photo upload slow or Photo download slow.

**Question:**

How do you go about debugging this situation 

Are there system wide graphs that are viewed first before narrowing down to specific component or microservice? 

what specific metrics would you evaluate, and how would you use those to go down to the component that has problem?

Is there an article or video talk that you can provide for me to dig deeper?

&#x200B;

**My thoughts:**

figure out - What exactly is slow.

If service is global, have a chart of the world that shows service status across the world.

What is expected response time and what is the response time that users are getting.

Trace a user request thru the stack and check whether necessary hardware and micro-service the request is touching is responding correctly.

or there are alerts about those micro-services. 

&#x200B;

&#x200B;

**Reason for asking this question:**

I am creating a high level playbook for the team and would like to understand how do engineers at big firms, running highly scalable services troubleshoot their environment.",1574904875.0,2019-11-27 20:34:35
581,Laid off recently. What should I be looking for?,30,e1ao8m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e1ao8m/laid_off_recently_what_should_i_be_looking_for/,23,"I got laid off recently in a round that took out about 25% of the company. I hated my job, though, so it's all good. I just need to figure out my next step now. Can you offer any suggestions?

I've been doing a combination of backend engineering, APIs, and ETL. I've mostly worked with the JVM and a bit of Python, though I don't like Python very much. Kafka, Cassandra, Postgres, Spark with Scala and Pyspark. Also doing Terraform and Kubernetes both of which I think are fun. Configuration is tedious but I enjoy coming up with a scalable system and putting together the pieces to make it work. Terraform makes cloud computing fun.

I'm really more interested in working on backend infrastructure. I think web applications are boring – been there, done that in a previous life. I tried a React book out and just lost interest. Data problems are more interesting to me. I've worked on analytics and I might like to try that again.

Language wise, I really like functional programming, but it seems to be losing popularity. I did a lot of Scala and really liked it.  Clojure too but it seems to have no jobs. I'm interested in Go and might start teaching myself that in my time off.

Industry wise, I'm really ready to do anything except ad tech or social media. No surveillance capitalism. Been there, done that. I'm done with it. I'm interested in working on a platform, i.e. Databricks or something similar.

 What should I learn? Is Go the way to go? :)  

Any suggestions?",1574684511.0,2019-11-25 07:21:51
582,"29 years old, spent 8 years in various startups, need some advice.",33,dodhzw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dodhzw/29_years_old_spent_8_years_in_various_startups/,6,"I'm a senior frontend, and I've been working for small startups my whole career, I'm certainly good at developing, I'm consistently told I'm the fastest developer X designer has ever worked with etc. I teach javascript to refugees on the side for volunteering, I'm pretty involved in my local community.  I have quite a vibrant life outside the office, including an amazing SO.

However, I feel like I've peaked, nothing I've done the past two or three years contained significant learning, just novel stuff like interfacing with library x or y.  I have no management xp to speak of, nor would I likely want to get involved in that.  My biggest challenge is correctly estimating tasks, and even that is relatively mundane and I'm usually just about right.  It seems that this is the end of my career, as I do not want to do management.

 I've built several things outside of the office, and am making a couple hundred extra a month, but it's not enough to quit.   I have some projects I'd like to do, however, they would require real VC funding to have a chance at success. 

What else is there for me?  Freelancer/contracter forever?  What gets you guys through the day?",1572318331.0,2019-10-28 23:05:31
583,Anyone else feel stuck skills wise?,28,dgmwc4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dgmwc4/anyone_else_feel_stuck_skills_wise/,24,"I've been in the industry about 6 year snow, and at my current job for about 2. I've had my ups and downs, but at my current place, i feel like i'm not doing any sort of coding that's going to help my career long term. At some point i want to make the leap to Senior Engineer and after that i'm not sure yet, but I am not even close to getting to senior despite having 6 years of experience. I barely code at my current job (and sort of at my last one too). I'm on projects that are usually quite large, but i always need help from the senior devs for the more complex thing is work on, and i end up just doing small things here and there to contribute. Anytime a new project is finished by a different team, i have to spend a lot of time outside of work trying to understand what's going on in the code where some of my other coworkers have it down in a day or 2.

&#x200B;

I think the biggest reason i'm still at my company (and haven't been fired) is that everyone really likes me from a personal standpoint (i have great soft skills and have gotten pretty close to my boss/teammates), and i contribute in other ways outside of development (documentation as an example), but i really want to contribute more. The job is pretty cushy (pretty relaxed, i get paid very well especially considering how little i contribute code wise). Basically, how did people who were stuck in these kind of situations break out of their shell? Did you attempt more side projects outside of work to learn more? Did you just realize you weren't cut out to make the leap to Senior and move in a different direction career wise? I'm just kinda stuck and wanted others advice.",1570864380.0,2019-10-12 03:13:00
584,The perils of searching for work as a mid-level dev,33,cncpy2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cncpy2/the_perils_of_searching_for_work_as_a_midlevel_dev/,30,"*Caution, rant ahead. If you would like to commiserate, or even offer feedback, please read on!*

Elevator pitch on me: 4-year CS degree, 6 years pro experience across 4 companies, mostly using agile. 3 years in Java, 1 in Python, 2 in Magento/PHP, and maybe 3 years of JavaScript sprinkled on top. There were all collaborative teams, some teams I helped gather requirements and prepare stories, more consulting-like responsibilities. Domains included medical research, e-commerce, and a stint at a large bank. 

I've been actively applying for almost 2 months now. Maybe I am asking too much money ($50/hr or $90k annually - I'm in Cleveland) or applying to the wrong roles, but I am getting very little traction - plenty of attention from recruiters as well as a decent number of phone screens, but not too many interviews and obviously not too many offers. 

*(As an aside, I am pretty sure I am weak in interviews, especially behavioral interviews - tech is easy. Most teams around here go for general Q's, not implementing quicksort from memory or other such feats of strength. I've been slowly reading and improving on behavioral interviews, I think ... it's a grind, man.)* 

Quick play-by-play of my latest saga:

* See Python ETL role on Slack, reach out to recruiter. ""Hey I haven't worked with Python much professionally but it's my favorite language. Here's my resume, I'd love to learn more about the opportunity.""
* She is impressed by experience in a medical domain as well as TDD. Over the past week I've spent maybe an hour or two in total talking on the phone (initial screen, quick questions, etc.).
* I finish 2 code auditions (TDD katas, nice idea for a coding interview I thought). Obviously I knock them out of the park. ;-) 
* She calls back today - ""When did you last work with Python?"" Name of company I worked at in 2015. ""Oh ..."" 

I've been up front about this ... we went over my resume in detail ... sigh. Honestly it's just kind of frustrating at this point; I thought this opportunity was different, they were willing to train. Guess not. 

I ended up writing back and saying, you know, since this would be a great career move for me (better city, experience with Python, more experience in medical domain), I'd be willing to work for a lower rate during the contract (it's contract-to-hire) if that sweetens the deal at all. I figured, maybe we could ""double-down"" on the probationary nature of contract-to-hire - they could find out if I can ""climb the learning curve"" quickly enough, and contribute in other aspects (TDD + a little consulting & mentoring) in the meantime. 

Has this approach ever worked for you - underselling to get your foot in the door and negotiating a higher rate later? Otherwise ... are people just staying in the same tech tack their whole career? How in the world would you get that lucky to pick ""the right one?""",1565245832.0,2019-08-08 02:30:32
585,"Protecting yourself from the ""sneaky salesmen"" during offer negotiations - advice needed from the exp. devs",31,clsj7m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/clsj7m/protecting_yourself_from_the_sneaky_salesmen/,6,"I am confident some of the exp. devs have been through this!

I sometimes feel exhausted (or ""over it"") that I became somewhat lacking in focus during the offer negotiation stage. It becomes worst when there are the ***""sneaky salesmen""*** that are doing the negotiation!

What do I mean by ""***sneaky salesmen""? (basically ""snakes"" in disguise if I want to put so bluntly ...):***

1. They make you feel bad during the negotiations e.g. ""*we never heard that request before ...*""
2. They put words/ ideas into your mouth e.g. ""*10% pay increase is already high and the industry standard is not ...*"" or ""*it's common practise to give your prior pay ...*"" or ""*it's company policy ...*""
3. They make it ""sound"" forceful or making you feel you're wasting everyone's and your time e.g. ""*the interview has been going on for 3 weeks; we hope you can consider expediting ...*""
4. They make it sound as if something good is going to happen e.g. ""*I am sure the benefits will grow over time here ...*""

Jesus Christ ...

How to always be alert with these sort of things during this critical phase? I mean, it's probably been half or a month for the whole process; you're tired and your mind may not be able to focus during this time ... : /

Any advice and tip is much appreciated!",1564923375.0,2019-08-04 08:56:15
586,"How do you balance what your team needs you to be an expert in, and what you want to be an expert in?",29,c815it,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c815it/how_do_you_balance_what_your_team_needs_you_to_be/,9,"I've been bounced around between teams a few times due to reorgs in the past year. Instead of being in the fullstack role with an emphasis on backend which I interviewed for, I'm pretty much asked to be the front end expert on my team, being the only one with modern UI framework experience.

Now, I don't mind learning React/Redux, but I really enjoy doing a bit of everything. If I had to choose, though, I'd pick backend over front end. I've told my boss this, but it's clear they really need me for front end since no one else on my team understand React/Redux. Again, this has been made clear to my boss, but every time I get something I like, it's moved onto someone else's plate and I'm asked to take care of the UI. I know I'm not bad at backend, if anything, I'm worse at front end.

I know the common advice to learning things on your own is to learn what you need for work first. As all of you are probably aware, front end is a whole separate beast on its own. I can't balance my personal time learning both UI and things I'm interested in, and still have time to spend with family. UI is always changing and there will always be something new to learn. Not to say that the same thing doesn't apply to backend technologies, but I'd argue that it doesn't change as frequently as front end.

So my question is:

If your team needs you to be an expert in a specific domain, even though you don't want to be an expert in that domain, how do you approach the situation?

It sounds awfully whiny typing out. My company pays me to solve problems. But on the other hand, I can go out and interview for a higher salary with a few months of prep and can probably land a role which aligns more with what I want. Even if it's a similar role, it would come with a pay bump and signing bonus. But I'd like to explore any other options before doing leaving.

Edit: one really important detail I left out accidentally - we are technically two teams working as one. Most of my actual team is working on the front end while the other team (which more or less functions as the same team aside from the manager they report to) is responsible for the backend. My actual team is also responsible for another project, for which I was again asked to focus on front end.",1562049093.0,2019-07-02 02:31:33
587,Advice needed: How do I communicate when a product deliverable will slip?,29,buwbaj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/buwbaj/advice_needed_how_do_i_communicate_when_a_product/,22,"I'm an engineering manager and the logic baffles me.

&#x200B;

""You should tell them as soon as you think it's going to be late""

Then there's the usual ""Why didn't you tell me this earlier?""

&#x200B;

My response is always:""How could I tell you that it's going to be late unless I find that it's *actually* going to be late?""

""At what point is it okay to say it's going to be late?""

&#x200B;

It seems that people (Product, Project, and non-Technical Managers) feel they are caught off guard when a project is ""suddenly"" late and that this change requires immediate remediation.  I suppose I could continually say ""It's going to be tight but we're working hard to try to meet the date"" more often, but to me that's just lip service.  As an employer I wouldn't want someone to keep telling me ""We may not make it..."" unless they actually aren't and have done all they reasonably can to try and deliver.

Deadlines are a thing - ignore the possibility of Scrum's ""projected completion"" because I have yet to see any business truly accept that.  Engineering is usually coaxed with ""It's not a commitment, just tell me when you think it'll get done"" so this idea of setting expectations will never go away.

What am I doing wrong?  Do I need to raise the possibility of a late project at the first divergence from a plan (e.g. a Sev1 issue in prod or an unplanned sick day will always guarantee the next set of features will be late?)  Do I always communicate the project is at risk?  I'm baffled with the logic of when to tell others that a deliverable will be late.

As a side:  The best advice I heard is that if the project slips by less time than is remaining then it's okay (e.g. one month left but you'll need another 2 weeks), but if it requires a huge recast then there's a planning problem.  Not everyone gets this though.

&#x200B;

Edit:  For clarification, I'm not asking how do I avoid the conversation (I do a pretty good job planning and estimation), I'm asking what do I need to do to ensure a more understanding response in those infrequent occasions where we won't make it.",1559267832.0,2019-05-30 21:57:12
588,No major change in roles or positions in roughly 10 years. Possible red flag for many?,29,bp2c7c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bp2c7c/no_major_change_in_roles_or_positions_in_roughly/,6,"I have two main resume formats: a ""short"" and a ""long"" resume. They're both one page each, but the short resume lists my last three jobs only, and puts a greater emphasis on personal projects including some open source contributions. 

The long resume is more dense, includes my work history going back to my first professional developer job in 2007. This is the one I want to put into question. 

Because the majority of my work has been contract/freelance and I don't get work via referrals, I never really have been moved forward in roles or responsibilities as time went on. I've read many other resumes with similarly long tenures and they usually have at least a jump to senior or lead position, sometimes within one company. I never have lead teams, nor worked in an environment where developers create revenue.

So I'm afraid that I'm just giving employers sticker shock when they assume I'm demanding senior+ salaries for mid-junior skills. Should I stick with my short resume on this and target full-time work with it? If needed, I could post up my long form and/or short form resumes.

Technical skills-wise, most of my knowledge is closely related to full-stack programming languages and frameworks. I can set up a barebones server with Vagrant instances for development. I have not really focused much on cloud tools (like AWS), infrastructure or big data. But to me that all sounds like it's more sysadmin than it is software development, so I don't know if I necessarily need to learn much of that.",1557977465.0,2019-05-15 23:31:05
589,"I can't crush any interviews anymore, and have started losing any point of doing anything",31,b5tf05,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b5tf05/i_cant_crush_any_interviews_anymore_and_have/,17,"And I don't know exactly what proportions of deficiencies I have (soft skills, tech, algorithmic skills) I need to fix this problem.

It used to be from 2009-14 that I could find a programming job rather easily, in 3 months at the most.

Then, after that point, some unknown variable changed me for the worse. I could no longer get any offers for full-time work.

I somehow ended up being worse at getting a job when the market's improved than in 2009 when the overall unemployment was still pretty bad. That's weird.

All this extra stuff I've been doing- interview practice, side projects, learning new tech-  is not having an effect on the end result. I'm still getting no new offers. I'm applying to all sorts of companies big and small.

Despite the improving economy, companies seem to have gotten more... picky? Risk averse? I don't know what kind of excuses companies are inventing to keep their caution levels high now. 

But there doesn't seem to be much of a point to practice other things if the end result is the same. The only jobs I get are short-term temp gigs that don't pay much and once they're over. It's another couple months looking for a job and I go broke again.

Unless there is yet another alternative to interviewing for getting jobs (and I lack the connections to be that popular) I feel like I've outlived my use in the job market.",1553654179.0,2019-03-26 22:36:19
590,"When working remote, what do you use as your salary base point when company is based in a tech center",28,b5p4n6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b5p4n6/when_working_remote_what_do_you_use_as_your/,7,Do you use your local $ or do you use the rate in their area. In this case it is the valley is where the company is located which is significantly higher than COL that my area. ,1553632363.0,2019-03-26 16:32:43
591,Engineering managers: What tools do you use to manage your team as people manager?,29,k6a8an,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k6a8an/engineering_managers_what_tools_do_you_use_to/,19,"Hi,   
I was wondering, what tools/platforms people are using to manage their teams from a people manager perspective? I don't mean Jira/Asana/etc for task/kanban/project management but 1:1 notes/follow-ups, developing long-term perspective for reportees, team engagement, and happyness etc?  


Do you quantify such things in any way?   
How do you keep track of all these more people and less project-oriented angles?",1607071114.0,2020-12-04 03:38:34
592,Are startups a trap?,33,k0fj9y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k0fj9y/are_startups_a_trap/,54,"I have always worked at established companies, usually with more than 1000 employees, ever since I graduated.

Due to the toughness of getting an offer for senior roles either due to technical skills, leetcode, or leadership experience, I am finding myself only getting attention and offers from startups.

Since I have never worked in a startup, I feel that it is where entry-level people go to get more experience so they can get a job at a more established company, although there are people who are perfectly happy with working at startups.

I don't know if I am sabotaging my own career by joining a startup? While some people join for the potentially massive payout, I am not really looking for that. Just looking for interesting work and building that experience that I need to get into a high paying and stable job. But I don't know if I will be taking a step back by joining a startup that is more likely than not, fail, just because of the reality that startups can and tend to fail. I'm also not interested in sticking around for 10 years to wait for an exit if it ever gets there.

I'm stable in my current job but I have made up my mind to leave so I would rather do that sooner than later.",1606286421.0,2020-11-25 01:40:21
593,What is the problem that keeps coming up for you?,29,jg1u66,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jg1u66/what_is_the_problem_that_keeps_coming_up_for_you/,27,"Over the years, I've noticed the same problems repeat at different companies.  What is your repeating problem?

Here's mine.

Client: We have a full programmatic interface to our thing, but don't want to program.  Can you make it simpler?

Me: (warily attempting to reduce scope) So, you want it to do a preset list of actions, but nothing like for loops or if statements?

Client: Oh, no, it needs to be able to do anything we might someday think of.

Me: Okay, so you need... a programming language for your programming language?

Client: No, no, just make it simple!

Me: (contemplates retiring to a monastery)",1603409574.0,2020-10-22 19:32:54
594,What don't you know how to do,27,j6yu9o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j6yu9o/what_dont_you_know_how_to_do/,61,"I am an experienced full stack developer but there is an awful lot that I don't know. Even if I know about it, I probably don't even have the technical vocabulary to discuss it with an expert. Even if I have the vocabulary, I probably have never implemented it at work, so I can't even put it on my resume.

Here is a small list of what I embarrassingly admit to not know. 

* Css and html5. I can hack my way through it but I really don't understand why Css works the way it does. Html5 came out a long time ago and I still don't know what it is. I can write server code and build infrastructure but I can't even write a simple hello world website that looks decent and is responsive 

* I am very good at devops but when I go to reddit, people always mention cloud formation and ansible. I don't even know what it does

* agile. I have been in agile teams but I don't know what the goal is. Every agile team that I have been a part of struggles to get things done 

* sql/ORM I have wrote simple queries but get lost at writing queries longer than 100 lines. I have probably written one 500 line query once in my life. I can't even write a 10 line query if you asked me now

* I don't know how to build a computer. I don't think I even know what a RAM or CPU looks like. I don't even know how to configure my home router 

I know that all of these topics are easy if you spend the time learning it. But you have limited time. How do you claim that you are more knowledgeable than a junior developer if they know half the stuff that you don't know 

What are things that you are embarrassed not to know? Suppose that you are razor focused on mastering docker but don't even know what a Css or sql is , what are strategies that you use to admit to people that you don't know something and don't care to spend time on it. You may be able to admit to your peers, but how do you admit to your boss or your boss's boss without being afraid of getting fired. They hire you as a senior developer but how do you admit to something like ""I don't even know what a CPU"" looks like?",1602131662.0,2020-10-08 00:34:22
595,What should I do? will quitting my job get me blacklisted?,30,iye41p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iye41p/what_should_i_do_will_quitting_my_job_get_me/,21,"Im currently a contractor at Amazon,  I had accepted a 6 month offer back in January over another position that was 1 year because I didn't want to commit to a long term work thing.  my life is relatively unstable due to some personal issues outside of work (family stuff) and I don't want to stay where I am working for a long time, thats why I chose contract work over FTE.

I worked and at job for 5 months and they extended my contract 90 days,  then I worked an additional 90 days they extended me another 60 days,  also they started talking about converting me to FTE at amazon,  I did the 1st interview (to convert it takes 2 interviews) and I passed with positive feedback and they are pushing me to schedule the next interview to convert to FTE asap (I'm just L5, nothing special).

Problem is, I don't like my job... my job is a good job, I have a good boss and quality co workers, a good work life balance, making low six figures,  this is a great job for a lot of people, but its not a great job for me.  I am not motivated, I have no passion for my job, its just a paycheck and that makes it take a mental tole.

I want to take a break from software engineering and do something else,  I have a job offer in account management at another tech contracting company,  it pays about half of what i am making as a dev but I think I would personally have more work satisfaction and would enjoy my job more.  I want to explore this and see if its a valid career move,  but I'm worried if I do then I'll be blacklisted from Amazon and from the contracting company I'm working for, Amazon because Im not accepting their FTE offer, and the contracting company because I would have quit their contract job they got me.

my thought was that if contract management doesn't work out, I can always get another job in tech as an SDE, but Im worried that having taken a break it will be a black mark on my resume and I'll get recruiter blacklisted.

community of Experienced Devs, what are your thoughts on what I should do?",1600909258.0,2020-09-23 21:00:58
596,"People with WLB, what do you do during ""life"" time?",30,gs34mw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gs34mw/people_with_wlb_what_do_you_do_during_life_time/,28,"This might be a strange question to ask but anyway, I have a good WLB but during this pandemic time I can't go out to travel, dine out with friends/SO or go to the gym. How do you spend your leisure time? I was thinking of starting to play Dota but I am concerned if it will get in my work or will negatively affect my overall wellbeing in the long run (i.e. social skills, spending time with people that matters).  
What do you do if you have average 5-6 hours free time during these times?",1590687355.0,2020-05-28 13:35:55
597,"Non-CS majors who went back to school for CS despite having a successful career in software, what was your experience like?",28,ggv6u3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ggv6u3/noncs_majors_who_went_back_to_school_for_cs/,51,"Hey everyone! I hope this post is appropriate for this sub.

My degree was in Biology, but I took some introductory CS courses and did research in computational biology. That was enough to kick-start a career in software that has been fairly successful since then. I'm not a hobbyist or passion-programmer, this is just a job that I like well enough and seem to be good at, so I'm not coming to the table with a ton of experience outside of work and school.

I feel a ton of imposter syndrome about the fact that I don't have a formal CS education. And in some sense, I really am an imposter -- I didn't know how a computer really worked until 4-5 years into my career when I took the (amazing) Nand2Tetris course on Coursera. I feel pretty limited in my career prospects, as I don't see the possibility of being hired by a ""serious"" tech company without formal credentials. My career, despite being fairly lucrative, has not been very technically intensive. I've mostly worked for companies that weren't tech companies but had engineering teams.

While it's possible to just keep going along this way, I do feel that I don't have a very strong ""foundation"" to my career. If/when this current bubble pops, and Pizza Hut realizes that they don't actually need a 700-person engineering team, I get the feeling that I'll be one of the schmucks caught with their pants down. So I'm trying to shore up my career capital, and I think a CS degree would aid in that.

I'm trying to calculate the opportunity cost of going back to school, and seeing whether it's worth it or not. I can probably finish up my CS degree in 3 semesters - so roughly a year of tuition and foregone salary would add up to -200k in opportunity cost. This is a shit-ton of money, but if I can land a FAANG job or something equivalent I think that eventually it would be positive value.

Anyone been in a similar situation? What do you guys think?

**EDIT** Thanks everyone for the excellent responses! Has definitely given me something to mull over.

&#x200B;",1589115348.0,2020-05-10 08:55:48
598,Resources for transitioning from a senior engineer position to a lead position?,27,g03ye2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g03ye2/resources_for_transitioning_from_a_senior/,10,"I work for a less than 100 person startup in SF. The CTO of the company says that I show a lot of promise and would like to see me move to a lead position. Currently, I am a senior frontend engineer and have been with this company for approximately a year now. I should also caveat ""lead position"". At my place of employment, it's generally a dual role of technical and managerial duties, yet still leans heavily on technical chops.

He requested I provide some loose details on resources to chart my path forward. Frankly, I am not quite sure what those resources might be at the moment. I figured it would mean a mentorship in some capacity. Additionally, covering training materials more geared towards managing individuals and seeing where I can work that into new or current projects. 

For those who mentor senior engineers and need them to ""level up"" in the leadership category, are there resources you recommend? I do realize this is not a one size fits all situation, but hearing some suggestions might still spur some ideas on my end. 

Additionally, if you transitioned from a senior position to a technical/managerial lead position, what steps did you take to get there?

Thanks.",1586751572.0,2020-04-13 00:19:32
599,Best Way To Jump Ship,28,fwx7gd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fwx7gd/best_way_to_jump_ship/,29,"I have a little over six years of experience and currently for with a HFT firm in NYC. I joined the team just under a year ago. I'm not satisfied with the current work load and it is too much of startup for my taste. I'm looking to jump ship to another HFT firm. I was wondering if I should I apply directly to the HFT firms web portal or if I should work with a third party recruiter. My resume is pretty solid but I really don't want it to sit on someone's desk collecting dust. I'm not sure how useful third party recruiters are in this space. I'm also trying to do this as discreetly as possible so that my current firm does not find out (word moves pretty quickly in this space). I'm curious, to hear some your thoughts are how I should go about doing this.",1586338462.0,2020-04-08 05:34:22
600,Silicon Valley Has Ruined Work Culture,30,f8x8cf,ExperiencedDevs,https://www.wired.com/story/how-silicon-valley-ruined-work-culture/,38,,1582603737.0,2020-02-24 23:08:57
601,"Love current job, got even better offer, can't decide",25,extksg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/extksg/love_current_job_got_even_better_offer_cant_decide/,24,"Throwaway. So, I guess this will count as a great problem to have, but I'm really not sure what to do right now.

My current developer gig is amazing. Great projects, great team, good pay and benefits. Been there for 5 years now. Most importantly, super flexible hours & can work from home as much as I want. And frankly, I've gotten so efficient at my job that I often don't have to work more than 4-5 hours a day, and still, everybody's happy. I have a family and often leave the office as early as 2pm to play outside with my kids, then log in for a little bit in the evening to tie up some loose ends. Or I don't.

Now, there has been some cost-cutting at the company. The writing's been on the wall for a while, so just to be safe, I got my resume updated and applied for another dev job at another company. Sure enough, I made it though the interviews and ended up with a fantastic offer from them. 30% more pay, great people, great company. Similar flexible hours and remote work policy. 

Should be a no-brainer, right? I'm hesitant though. I feel like my current situation is very unique. Getting paid a full salary while effectively working part-time is amazing. The other day, I visited my son at school, and he was so incredibly happy to see me. Another kid looked at me and said ""I wish MY daddy was here."" Ouch.

Joining another company, I assume, will require me to work normal hours again, at least initially. Like, gasp, 8 hours a day! So, fewer afternoons at the playground with the kids, and stuff like that.

On the other hand, who knows if there's going to be more cost cutting at my current company. It would suck to turn down this great offer, only to get laid off from my current job a few months later.

I guess what I'm looking for here is some outside perspective on my situation. Has anyone been in a similar situation? Or is this highly unusual, and I should just count my blessings to be in this spot? What kind of questions should I be asking myself and others to come to a decision?",1580700306.0,2020-02-02 22:25:06
602,How should I think about Equity Compensation at Pre-IPO Companies?,29,ev6tso,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ev6tso/how_should_i_think_about_equity_compensation_at/,32,"I've always been confused about how to think about equity grants at pre-IPO companies that are clearly on the cusp of IPO (like Stripe, Airbnb, etc). 

## Current “Value”

I see large dollar numbers under “equity” for pre-IPO companies on sites like [levels.fyi](https://levels.fyi). How are those numbers actually determined? Are folks just using the last funding round and calculating: 

* `rsu_grant_value = last_preferred_price * num_shares_granted` 
* `option_grant_value = (last_preferred_price - strike_price) * num_options_granted`

Is that a reliable way of thinking about things at a mature pre-IPO company?

When you have multiple overlapping 4-year equity grants, do you divide them all up by 4 and add up the portions corresponding to This Year when figuring out your total comp for the year?

## Appreciation of Share Value

The (paper) values of most of these companies will go up between when you get a grant, 1/2/3 years into your vesting schedule.

How should this appreciation factor into the calculation? 

I‘m sure that you factor in present value of equity when comparing potential comp between companies, even if you originally got the grant at a lower value.

But what about past value of equity? Do you think of equity appreciation as ""retroactively"" increasing your comp for previous years, factor it into this year’s comp, or just treat it as new information going forward? 

Do you factor in likely future growth as part of your comp calculation?

## HR-Side Comp Calculations

When making equity grants at later-stage pre-IPO companies, does HR generally think about refresher grants in terms of cash-value at the time the grant was made?

What happens when the company valuation increases and the present-value of previous grants goes up?

Will previous grants be assessed against the new value? Or from a HR-side calculation, will they just consider the cash value at the time of grant?

If the company has grown in value by a decent amount (and thus, your previous equity packages have a higher paper value than when they were granted to you), can that negatively impact how much more equity/cash you get in a comp review cycle?

Are pre-IPO companies generally able to put together comp packages where their initial equity grant can actually compete with the trailing four years of stacked equity grants from other similar companies?


## EDIT: On the Inherent Risks of Equity

It is undeniable that equity in private companies is *potentially* worthless while salary is definitely real money.  We’ve all heard the stories, seen friends get laid off, or even seen companies “have an exit” benefiting founders/investors while leaving rank and file employees with nothing to show for their equity. 

But when comparing multiple relatively de-risked pre-IPO companies, equity is still a nontrivial portion of their comp packages.

Let’s say that each of these pre-IPO unicorns have their own probability `p` of disappearing tomorrow and being worthless. 

Like it or not, the expected value of your total comp is 

```
EV(total_comp) = salary + p*equity_value + bonus
``` 

Salary is guaranteed, equity and bonus is not.

Every company carries some risk. The farther a company is from public, `p` approaches 0 (and has a higher variance). Pre-IPO companies with unsustainable business models or internal culture problems have higher risk than those with sustainable paths. Even public companies have the risk that their share price goes down between grant date and vest date. 

You’re free to say that *for your personal risk tolerance*, you treat `p≈0` if the company isn’t public. There are plenty of folks who will corroborate that as a decent approach to risk management. 

**But I’m not trying to figure out `p`** or argue about what your risk tolerance should/shouldn’t be.

I’m trying to figure out how to think about that `equity_value` variable *before* factoring in the probability that shit will hit the fan.",1580253234.0,2020-01-28 18:13:54
603,"Senior (current, previous) Devs, what did your day-to-day ramp-up looked like as a new hire?",28,eqgd3o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eqgd3o/senior_current_previous_devs_what_did_your/,25,"At...

- 1 week
- 1 month
- 3 months
- 6 months
- 1 year",1579382821.0,2020-01-18 16:27:01
604,Is it possible to find a side hustle if I'm a C++ dev?,29,egcb6r,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/egcb6r/is_it_possible_to_find_a_side_hustle_if_im_a_c_dev/,34,"I'm a somewhat experienced C++ dev (~3 years), I have a full-time job, but I feel like I have time and energy for some work on the side. I kinda want more money too. However, most of the freelance jobs that I've seen are mobile or web related, and honestly I can't imagine that someone would outsource backend to freelancers. Is it possible to be a C++ freelancer? Does anyone have a first-hand experience of this?



INB4 getting into a big-N or similar corporation is not in option for be since I don't want to move out of my country (mostly for family reasons).",1577488524.0,2019-12-27 18:15:24
605,What’s your experience with full time remote work?,30,e3oife,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e3oife/whats_your_experience_with_full_time_remote_work/,24,"For the first time in my (11 year) career I’m considering full time remote positions. I was wondering if anyone could share their experience, especially those who transitioned from a tradition 9-5 office job in to remote work.",1575105797.0,2019-11-30 04:23:17
606,"Burnt out, have no ""voice"", and the work won't stop piling on. Should I ask for more money?",30,dq0dbt,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dq0dbt/burnt_out_have_no_voice_and_the_work_wont_stop/,21,"*Update* : I appreciate everyone's advice and I am taking it all into consideration. I don't have a close network of engineers to have these conversations with so your input is very valuable. Thank you all again for your thoughtful responses. 

*Original post* 

I don't know if i qualify as an ""experienced"" dev but I have 1.5 years of experience.

About six months ago I received a promotion in the form of a counter offer. I mainly was looking to jump for a salary increase and going remote, but at the time I would go a few weeks at a time with no real direction or anything to do. I found myself not growing as an Android developer and I was worried about growing stagnant. I also don't like sitting around doing nothing.

Fast forward to now: 5% of the company (large corp) was laid off and two developers within my ""team"" quit (I get passed from team to team often, I don't really have a home team anymore) right before the lay offs. While the lay-offs didn't directly effect me, losing the devs sure did.

I was given a massive task for a huge new feature that was poorly designed. Every level of management within the division is talking about this feature so it is something they are going to be pushing very hard to people all around the world.  It was so hard to code because the UX was so bad (and is still bad), but nothing I said or how many times I stressed this was terrible mattered, so all I could do is chug along. The only people on the project were myself, a contractor, and another dev, both of them were basically part time. I architected everything and wrote a shit ton of code in six weeks.

After it became clear we couldn't deliver by the projected deadline (which when we started was two months out, then it got pushed up to the end of November. Essentially we lost two months.), they decided they would give us another sprint.

Directly after this conversation, I was pulled from this project to work on another massive undertaking in existing code to completely redesign a number of critical features. Basically they gave me 15-20 days of work to do in 8 days. One of the views literally has 17 buttons with different states... I worked 60-70 hours for two weeks to get most of it done. Not only did they give me more work than would most likely be possible, I didn't get to see my other project through and had to trust the contractor could complete the work, which is wishful thinking at best.

Before both of these projects, I was never involved in any planning as I was told I wouldn't be working on any of these projects and I was slated to be on a different team, but when you have no android devs, it is pretty slim pickin's and they literally had nobody else to do the work. I also moved into a new home I purchased in the middle of all of this and only took one day off to pack.

After everything was merged I was finally able to breathe again and feel like a normal person. And then they change things on me AGAIN and I had to completely rip out things and create new things. Luckily I wrote the code in a modular manner so it didn't take me a day, just a few hours. I honestly didn't know whether to laugh or cry at that request, I feel like I am going insane.

My  bosses boss called me today and said ""I have more last minute work for you!"" I honestly didn't know what to say. I was honest with him and said I am so burnt out. I literally don't even feel like myself. Of course I will do it for him, but this is becoming ridiculously last minute.

One senior engineer said ""The work they are giving you with the time frame given, is a Senior level work load and they aren't paying you at that level.""

I push 100k with a bonus which I feel is pretty amazing since I could barely scrap together 500/month two years ago, but I wonder if I should ask for another 10-15k in a few months? If I am going to be treated like someone with years of experience, I feel like I should be paid for it.

I get tons of ""Thank you so much!"" ""You kicked ass on all this last minute work!"" ""Everything looks so great!"" which feels nice and all, but it doesn't seem like enough. It doesn't get back my years off my life I spent on this shit. I'm almost 32 and I started programming at an older age than most. If I was 22 years old I could code all day and night. I feel like a robot. /end rant.",1572617496.0,2019-11-01 10:11:36
607,Got a few weeks off and don't want to spend money on a trip. Would an AWS certification be worthwhile?,29,dnhjkv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dnhjkv/got_a_few_weeks_off_and_dont_want_to_spend_money/,31,"Senior dev, 10+ years. Node, React, Svelte, Docker, mix of front and back end.

I want to do some professional improvement in my time off. Would it be worthwhile to pick up an AWS certification?",1572142457.0,2019-10-26 22:14:17
608,"""Backup candidates"" if main candidate rejects offer - what's the procedure for hiring a dev?",29,ckw1we,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ckw1we/backup_candidates_if_main_candidate_rejects_offer/,4,"Suppose candidate A rejects the offer, how do, or what is the normal process like to have ""backup candidates""?

Do you just keep a list of candidates you've interviewed and sort based on priority? Does the final phase of the interview (e.g. interview with the owner) get to interview them prior before putting them as a backup as well?",1564730690.0,2019-08-02 03:24:50
609,"Pretty basic question, but how do you effectively interview with multiple companies at once?",30,cdbxbg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cdbxbg/pretty_basic_question_but_how_do_you_effectively/,10,"I've only been job hunting a couple times so far in my career and both times I took the shotgun approach of finding several places I was interested in (I think both times it was 8-12 positions) and applying to all of them over the course of a couple days. I did this because of reading about how it can be valuable to have one or more offers when interviewing for a position and can be used as leverage with the position/salary/perks/etc. (which makes sense). In practice I have found this incredibly difficult to actually pull off. Some places will respond within a day or two, some will take a week or two, and others may take a month or more (or just not respond). Even when they respond close together, they're all companies with people who have their own schedules, so one place may want to interview you before the end of the week, while another asks if the end of next week is fine.

&#x200B;

So, I guess my questions are:

1. Have you found that having an offer on the table helped you?
2. How have you successfully condensed interviewing with multiple companies into a short span of time?
3. How amenable to your schedule have you found companies/interviewers?
4. How do you handle the disruption it causes at your current place of employment (being out for phone interviews can be done over a lunch, but in-person interviews are often more time consuming)?

&#x200B;

I live in an MSA in the 40s ([https://en.wikipedia.org/wiki/List\_of\_metropolitan\_statistical\_areas](https://en.wikipedia.org/wiki/List_of_metropolitan_statistical_areas)), so the dozen or so places I've applied to in the past are a pared down list of the couple dozen places that offer tech jobs in my area, as opposed to the several hundred that likely exist in larger areas. I'm wondering if for this to work you need to apply to far more places than I have.",1563187568.0,2019-07-15 06:46:08
610,How to talk to the manager about my career goals?,30,cac8h1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cac8h1/how_to_talk_to_the_manager_about_my_career_goals/,19,"I am a Software Engineer with 5 years of experience and I am currently pursuing a Masters which I will finish next year. I would like to talk to my manager about getting promoted to a Senior Software Engineer next year once I am done with Master. The problem is that I don't know how to bring this up to my manager and the other problem is that I have not been working on anything big that I can point towards for a promotion.

Edit: Thank you everyone for you responses and feedback.",1562563701.0,2019-07-08 01:28:21
611,Salesforce,28,c8q3eg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c8q3eg/salesforce/,13,"I have an opportunity to interview for a Salesforce role. I am currently a full-stack dev with a somewhat hodge-podge skillset (a little Java, a little Angular, a little SQL, etc). I am concerned that the investment in Salesforce's proprietary language Apex and their sandbox cloud platform will leave me more-or-less where I am today - having difficulty justifying my value to a potential employer because I don't have 3+ years of experience in any given technology. 

The only reason I'm on the fence is because there are a few Pros to go with the Cons... here's my understanding right now, though naturally I am curious about your feedback.

Pro:

* As long as Salesforce is around and used by large companies, which seems to be the case(?), I can make a killing with pretty solid belief that the platform will stick around
* The firm I'm talking to is a third-party dev for Salesforce. They would provide paid training on the platform. Additionally, if there are times between projects where there is no client work, I would be paid to study (probably getting some kind of SF cert, or playing around with some random tech like a frontend framework).  
* Commute is good

&#x200B;

Cons I am predicting:

* Developer capabilities are limited by arbitrary (business) reasons (as opposed to technical reasons); e.g. if there's no API to call, you cannot do it (no access to the filesystem or DB I assume)
* Dev community is(?) a walled garden. It may be difficult to find help because fewer people are working with this platform. 

&#x200B;

Am I on target with those pros and cons? Do you have anything to clarify or add? Thanks all.",1562199761.0,2019-07-03 20:22:41
612,Applying to multiple positions at medium-to-large-size companies,29,c1omyf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c1omyf/applying_to_multiple_positions_at/,13,"Simple question. This may be completely obvious to most people, but:

1. Is it poor etiquette to send multiple simultaneous applications to the same company, with different subject-lines / for different listed positions?
2. If ‘yes’, how about *sequential* applications? i.e. is it poor etiquette to apply for a different position, if turned down for the first one?

----

Context: I'm a developer with something of an unusual skillset / background. Sometimes, I'm completely dismissed for a position which I strongly believe I'm overqualified for (i.e. something I chose to apply for to due to location, culture, tech-stack, or some other non-compensation reason) … and other times, just as often, I get a lot of excitement from the management of a position that I worry I'm *underqualified* for during the application process. Due, largely, to this; my last few months of job-hunting have been a really especially-stressful time.

In many cases, a company might be attractive to me for above-mentioned non-compensation reasons (they use OCaml, or they're in a beautiful scenic state without a lot of tech jobs, or the culture seems strongly aligned with something I care about …). Meanwhile, I usually apply to jobs optimistically: I see a listing for ‘compiler engineer’, for instance, hell yes I want that job; or perhaps they'll be listing an opening for a senior. Thing is, my interest in that job *isn't* just the stuff in that single job-listing. I'd probably be equally happy working at some of these places in a different capacity, or with a ‘lower title.’

What do, Reddit? How do you choose *which team* at a given company to apply to? Do you apply to them all?

(**Edit:** A good, timely example of this is [Ahrefs](https://ahrefs.com/jobs). There are two listed jobs that are extremely relevant to my interests: a backend / low-level ‘OCaml developer’ listing, which is more the direction I want to take my career, and more the sort of work I want to be expanding into; and a separate frontend ‘ReasonML developer’ listing, to which my recent work and demonstrable experience are far more related, and for which I feel I'm more likely to be accepted.)",1560812902.0,2019-06-17 19:08:22
613,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,29,jmjp6s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jmjp6s/ask_experienced_devs_weekly_thread_a_weekly/,74,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1604333542.0,2020-11-02 11:12:22
614,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,28,iwwatc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iwwatc/ask_experienced_devs_weekly_thread_a_weekly/,56,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1600704754.0,2020-09-21 12:12:34
615,Test automation keeps on breaking - needing to maintain than finding bugs?,29,h8us61,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h8us61/test_automation_keeps_on_breaking_needing_to/,37,"Have you ever experienced the test automation, be it UI,  API or Unit Test keeps on breaking, and you needed to fix all these each time a new feature is introduced? Instead of it ""finding bugs"", you keep on needing to ""maintain it?""

I've 5 Scrum teams and last week, 300 of the API tests failed because a team needed to drop 3 tables (came from the requirements). The other week 100 of the UI cases broke because we change ld the UI/ UX design. And these automations are built in Java so it's quit tedious to debug. It feels like for each Sprint (2 week) we are just fixing test automation codes rather than ""it"" catching bugs for us.

Has anyone experienced this? Care to share how you've managed, especially when you're pressed for time?",1592173704.0,2020-06-14 18:28:24
616,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,29,ghjiqp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ghjiqp/ask_experienced_devs_weekly_thread_a_weekly/,92,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1589213582.0,2020-05-11 12:13:02
617,How does your team ensure requirements are being accurately communicated from spec docs to Jira tickets?,29,gfnt9r,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gfnt9r/how_does_your_team_ensure_requirements_are_being/,38,"Hi all,

My team is experiencing challenges with missing requirements for features. Our current system is as follows: product prioritizes and scopes the next epic(s) we need to take on as a team of ~6 full stack engineers, a lead, 1 product, 1 UX, and 2 QA. After epics are scoped, product runs us through a grooming session where we ask questions and understand the scope of the feature. Typically before this happens, our leads will fill in suggested ticket breakdown / rough suggested implementation tasks in the doc. This is mainly to help understand how we’d go about achieving our requirements, since our product is very complex, and also primes us for the engineer’s grooming. Later in the week we have engineering grooming, where the engineers and leads work together to hash out implementation details / approach & write / point Jira tickets as a team for the following week’s planning where the tickets are picked up for the sprint. 

QA / product is getting frustrated that engineers are missing requirements. We don’t really have any systems or rules for writing tickets other than specifying ACs. We try to break tickets into manageable pieces. The ticket basically has a description with varying levels of detail. Title is usually like the title of a pull request might be. If it’s a front end ticket, we include mocks. For some reason, during engineering grooming we get fried mentally, weighing implementation decisions and often struggle to get to writing the tickets until towards the end and sometimes need to carry over into an additional meeting. As a result, the tickets are always inconsistent and may fail to consider some requirements. And since we consider the ticket to be the source of truth at this point, we rarely go back to the spec, since the whole team has basically vetted them already at this point. 

In your teams, who writes the tickets? We don’t have product owners or scrum masters. How do you ensure 100% of the spec is communicated in the tickets? Who is accountable for that mapping? Are there any specific rules / formats / systems for writing airtight Jira tickets? How do you effectively use Jira?

Edit: we don’t have business analysts.",1588948067.0,2020-05-08 10:27:47
618,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,30,gd7jin,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gd7jin/ask_experienced_devs_weekly_thread_a_weekly/,73,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1588608757.0,2020-05-04 12:12:37
619,"My career didn't go anywhere I hope it would go, stuck without certain experiences",25,gcv6mq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gcv6mq/my_career_didnt_go_anywhere_i_hope_it_would_go/,33,"Of course no career plan goes 100% as expected, but for me, it went way off the mark. I graduated college but it wasn't in STEM, and I self-taught my way through some web development topics that were good enough to get a job at a digital agency. It was a perma-temp job. I knew that it didn't pay well, but I was hoping that would be corrected within a few years. That didn't happen, and with all the companies I've been with, I'm still looking for my first W-2 job in many years.

I have only worked at small companies, but ironically I never felt like I made a big impact in any of them. I was just a rank-and-file worker, take the next ticket off the list and then submit the code, wait for the QA  to *visually* confirm that the bug is gone but none of the senior devs bothered to implement testing. And because I'm a contractor I did not bother pushing aggressively for it because they just didn't want to listen.

Also, I don't have broad experience on the full life-cycle of software anymore. It used to be that I could finish up a website, upload it to the remote live host, configure DNS, the Apache conf file, config databases, and usually would be ready to go. Nowadays, I'm not involved in the deployment part and teams are so small that I don't really interact with other developers often. I have become the solo developer that is contracted to do specific thing without needing to interact with other devs. I am no longer a team player.

There's also a bimodality in contract work that I have experienced first hand. Most local contractors with my years of experience that talk to me say they get paid $75-100/hr working in specialized firms and consultancies. I get paid nowhere near that. I get maybe a third, $25-30/hr for digital agencies and startups. I'm a contractor because the company doesn't want to spend full-time pay/benefits, not the ""highly paid specialist"" kind of contractor. And when I do pursue these higher paid jobs (contract or FT), I always get rejected.

Questions that I have: 

Is there something peculiar about someone's personality if they have trouble getting FT offers? Maybe I am one of the worst negotiators in the world? Are there any particular kinds of contracts that do let me work with many other people on a team?

Also, I am not good enough in the fundamentals to pass the highly sought after companies, but the lower tier companies also expect a lot for me, what companies would be the ""missing link""? I'm thinking maybe the large typical consultancies like Accenture or InfoSys (not Revature though, that's too rough). Is it true that their questions are so basic that almost anyone can work for them?",1588558128.0,2020-05-03 22:08:48
620,"Ask Experienced Devs (Week of March 23, 2020): A weekly thread for inexperienced developers to ask experienced ones",29,fngdcl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fngdcl/ask_experienced_devs_week_of_march_23_2020_a/,51,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1584980011.0,2020-03-23 12:13:31
621,Software Engineer or Solutions Architect for experienced hire?,29,f86g0g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f86g0g/software_engineer_or_solutions_architect_for/,10,"I've been interviewing after my last endeavor and I'm expecting two offers, one as a solutions architect at a very large cloud provider, and the other as a software engineer at an up and coming storage company. Not sure on the total comp yet, but I expect both offers to be in the ~300 range. I have about 10 yoe holding senior/staff engineering roles at a bunch of bay area tech companies (not FAANG), and most recently founded a startup that is doing reasonably well.  

I was wondering what is a better long term choice for career growth. I'm leaning towards the SA role because of the high level of visibility and customer facing work, but I spoke to some colleagues and they were advising me to stay away. Accordingly, SA roles are terminal and it's hard to see where to go 'next' other than another SA role, and SA managerial roles are far and few in between. They recommend grinding leetcode for another 2-3 months and making the interview circuit at a few FAANG/FAANG-like companies at an E6 target level.

Frankly, I'm don't think I'm smart/qualified enough to grab an E6 spot, and working as a terminal E5 seems like a downgrade to me. I also haven't done any significant coding for almost an year, and mostly worked on business development type work for my startup. I don't really have enough engineering managerial experience to make a jump to either.

Any advice on what to do in this situation, especially for a later career stage individual?",1582472399.0,2020-02-23 10:39:59
622,Reasons why candidates didn't get the dev lead role,29,f28l5b,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f28l5b/reasons_why_candidates_didnt_get_the_dev_lead_role/,16,"As in candidates that are in the top 5 or even top 2 - could the folks here share (if they have been the interviewers) why the candidate didn't get the dev lead role? 

Was it because of overconfidence? Asking too much money? etc.?

I asked because I'm gonna try out for an interview and am a bit anxious : /",1581457875.0,2020-02-11 16:51:15
623,Is it common/acceptable in the US for devs to be asked to be ready to pull all-nighters?,29,ezf257,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ezf257/is_it_commonacceptable_in_the_us_for_devs_to_be/,18,"This is an update to [my previous post about my workplace](https://www.reddit.com/r/ExperiencedDevs/comments/eu0pm6/frustrated_at_bay_area_startup_bad_management_or/).

Just the thought that this is how the company handles production changes disgusts me.

I can't imagine staying in a place like this for the remainder of my visa period. I don't think there's anything I can do or say to my manager (other than leaving the company) to solve my situation. It has already caused me loads of stress and anxiety.

**Am I right in that the following behaviour from a manager is considered very bad, even by US work culture standards?**

In short:

A couple of weeks ago, my manager told my team to be ready to stay in the office for the night, since we were about to do a migration of our production environment to another cloud provider. This week I realized how bad my situation really is.

The migration was supposed to happen this week. ""You can bring a sleeping bag to the office if you need to"" the manager told us on Monday.

The whole dev and QA teams are called into a meeting room without warning (no meeting in calendar) in order start doing some kind of regression testing for our upcoming production migration. I was coming back from the restroom, and it seems like even my co-worker sitting next to me doesn't have a clue what the situation is about.

I'm given a windows laptop in order ""play around and test"" out app in the new environment. We're supposed to document the bugs we find. I try out a common flow in our app, and it doesn't seem to be working. Apparently it's already documented.

The next minute my manager tells me ""the-computer-guy, please work on this ticket"" and gives me a ticket with a generic bug that isn't even related to the migration, even though the ticket is filed as such, just because it was found during this ""testing session"".

However it turns out that we weren't able to do the migration due to contractual reasons, so the ""crunch week"" was cancelled. ""Now we don't have to be in this room for the next 48 hours"", my manager said, and brings out some bottles of beer to ""celebrate"".",1580960368.0,2020-02-05 22:39:28
624,I know a little about everything but I have no in depth skills.,29,ewaqq2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ewaqq2/i_know_a_little_about_everything_but_i_have_no_in/,10,"This topic was inspired by the post about being scared of doing software from scratch.

Does anyone have the opposite problem? I have done numerous from scratch software projects in a variety of languages. I've had production code in 8 different languages and 3 frameworks. My specialty at this point is just picking up new environments and languages fast and pumping out features.

I lack depth, though. When I get involved in conversations online I have no idea what people are talking about. I'm vaguely familiar with best practices and paradigms, but I don't really think about them or use them in my job. I couldn't tell you anything about what makes each language a good choice, compilers, performance, O(n), or anything like that. Conversations about enumerables and transpilers go right over my head. 

I'm worried because at this point I've been in management and technical mentoring for several years, but I don't feel qualified. I have great soft skills but I'm worried that I'll have a technical conversation one day and just look like a total idiot, and people will write me off as a non technical BSer.

Does anyone else have this problem? I'm wondering if I should keep increasing my soft skills or just sort of go back to technical basics.",1580441122.0,2020-01-30 22:25:22
625,How to list a project on my resume that I can't really talk about right now?,27,em2y06,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/em2y06/how_to_list_a_project_on_my_resume_that_i_cant/,22,"I'm working on a data sciencey project for the last 4-5 months and I'm noticing that I can't quite explain what I've been doing on my resume without talking about the details of the project. I have something like ""utilized clustering algorithms in scikit learn to ..."" and then I basically don't know what to say without giving away my employer's intentions which I don't think they would be happy about. What could I do on my resume to talk about my experience doing actual technical data science/engineering the last ~ 4 months without spilling the beans?",1578564640.0,2020-01-09 05:10:40
626,Has deadlines in software ever worked?,26,dqi685,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dqi685/has_deadlines_in_software_ever_worked/,38,"Since what is actually ""done"" software is a very floating concept, is having deadlines for projects of any use? 

We are going to switch to this apparently after a more sprint based approach the last years, and I voiced my opinion how pointless it is since if the team says no about what they can deliver, any date set in the future will just negatively impact the customer experience and expectation

To me it just feels like a project manager feel good strategy, so they can have their ""roadmaps"" and whatever stuff to present on their powerpoints

There is a reason most successful companies have an iterative approach, and we all know(?) that  90% of the software gets written in the 10% of the time. But of course this seems to be forgotten for each new product cycle

Do you have any succesful examples?",1572717813.0,2019-11-02 14:03:33
627,Contractors vs. Full Time - what are your experiences?,30,didxkx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/didxkx/contractors_vs_full_time_what_are_your_experiences/,9,"I’m currently a full time engineer with a decent pay but am planning to move states soon. There are some non-CS things in life Id like to focus on, but would still need some income to get me by. 

Is going from full time to contract work worth it? What are people’s experiences in this area?

[Reposting from /r/CSCareerQuestions]",1571200268.0,2019-10-16 00:31:08
628,I put my foot in my mouth at an interview. How could I have handled this better?,27,buytlg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/buytlg/i_put_my_foot_in_my_mouth_at_an_interview_how/,30,"First of all, I feel compelled to defend myself - this was at the tail of an hour interview. I was pretty tired, my mojo and patience were running out.

The question was something along the lines of, do you want to follow a technical or management track? My response was, management, because I will not be as sharp as I age.

Admittedly I worded it pretty poorly, and I have written an apology at the suggestion of my recruiter. Evidently they told her something like, ""we're not offended but it was a strange comment."" 

I thought it was pretty uncontroversial that we are not as sharp as we age. By contrast the strength of older devs & managers is wisdom, as opposed to the ability to acquire and retain new skillsets quickly. 

How would you word this better? Or, how can I avoid the topic in the future? Thanks.",1559280575.0,2019-05-31 01:29:35
629,Pointless Technical Interview Preparation,28,awan56,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/awan56/pointless_technical_interview_preparation/,19,"I have been looking for a new job for four months, after being laid-off. I am applying to senior engineer roles in different sectors, but I feel exhausted and see no hopes after the last and only onsite interviews.

The 1st role was for a C# senior developer (Job posting mentioned Web API, WCF and relational DB), somehow the questions asked were focused on database internals: for example what is index fragmentation? Database deadlock? Although my resume did not mention any SQL server experience. Although I explained what an index and a deadlock are outside the context of a database, the guy was not happy... I was expecting questions on LINQ, SQL, queries, transactions, stored procedures, .NET framework but none of these, nope... got a rejection letter yesterday.

&#x200B;

The 2nd role was for a senior SWE to help a shop expose their object detection algorithms through APIs, (Job posting required C++ **or** python experience). Somehow the 1st interviewer in this 5-hour long interview marathon asked me to code on the whiteboard the k-mean algorithm in an actual programming language. My issue was, I did not know Python (in fact my resume does not mention Python but C++ and C#) too well, but more C++, so I was puzzled because of the number of lines of code that would have been required. I struggled a bit to remember the detail of the algorithm (I graduated more than 12 years ago) but was able to walk him through the steps of the algorithm and the design that I would implement; nevertheless, the guy was not concerned or cared he kept repeating: ""just code!"", ""just code!"" So I coded it in a pseudo-language, I was not really in a mood to focus and implement this kind of algorithm in 20 min on a whiteboard. After that, the remaining interviewers asked to solve some leetcode-style questions in Python...

&#x200B;

After these two interviews, I am now worried, how much information do I need to shove in my head to get a new job? I studied a lot on different topics that I thought was enough for a senior dev, but every time somehow the questions are a bit weird and out of my scope. I mean I am not a dba, and I find it a bit pointless to ask candidates to implement on a whiteboard certain kinds of lengthy algorithms in a programming language that they are not familiar with. I feel like some companies are too tool-focused and that one needs to be lucky to find an opportunity that is almost identical to the last one to ""appear"" confident enough. I mean, I really don't know how to prepare for technical interviews, the domain is so large you never know what is going to happen in fact...

&#x200B;

What is your opinion? What is your experience? Any advice?

&#x200B;

&#x200B;",1551508435.0,2019-03-02 01:33:55
630,How do you lead?,28,khq2u7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/khq2u7/how_do_you_lead/,7,"Curious how you leads out there lead your team? If you are new to a team, and new to a product... how do you become a lead of the product, especially if a team already knows/exists and you are new to it? What constitutes a lead engineer or tech lead or whatever the term is as there seems to be a few variants. Is it basically around the same level as an architect, especially if your team/project doesn't have one? 

What if team mates are as knowledgeable or more than yourself... but they are junior devs? How do you manage to become a lead in that scenario?

What if I am in China and my team is in USA? How do you lead a remote team that mostly work together while being the only person on a 10+ hour different time zone? Is it plausible?

What about how you get mentored? If you are a new lead.. previously a typical mid to senior level developer, how do you expect to be ""taught"" how to lead?

I am hoping to make lead one day.. so wanted some input on what sort of changes I might see day to day, what expectations for the team I lead and what I should expect from my boss(es) in terms of onboarding/teaching how to lead.",1608613137.0,2020-12-21 23:58:57
631,What are your normal work hours?,27,keh2sv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/keh2sv/what_are_your_normal_work_hours/,58,I'm curious what everyone's work hours are like.  I'm an 8-year full stack dev currently in the Healthcare industry.  I normally work 7:30-4 or 4:30 with an hour lunch.  Others on my team don't start until stand-up time (9:45) and leave at 5.  So what's a normal day for you guys?,1608178925.0,2020-12-16 23:22:05
632,What questions can I ask to evaluate this startup?,25,jnvgxk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jnvgxk/what_questions_can_i_ask_to_evaluate_this_startup/,35,"I have \~5 years working professionally in various roles within software development in Sweden. Currently I have been working as a Site Reliability Engineer for a little less than a year (\~9 months). I have gained a lot of knowledge from this position and the compensation/package is very good.

Through my network I was recently offered a tentative position at a start-up working on a SaaS platform within the dental industry (established 2013, but recently received a significant investment). They have so far been outsourcing all their software development needs to a consulting firm with no in-house tech staff. It is an office of 4 full time (non-technical) employees and some sales staff.

My current position seems to have a reasonable amount of growth potential, and while it is not a very large company, they still have a decent amount of interesting problems to solve.

How can I evaluate if this would be a reasonable risk to take?

I will likely have a more in-depth interview with the dental company soon. I want to ask the correct questions and assess if they are ready to have an in-house tech lead - and also to make sure this would not be a ""step down"" for myself in terms of growth.

Thanks for taking the time, you all are awesome

EDIT: Thanks for the replies!",1604519950.0,2020-11-04 14:59:10
633,Unit Tests with lots of Mocks/Stubs - Why?,28,i4hazg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i4hazg/unit_tests_with_lots_of_mocksstubs_why/,20,"I have read some posts about the ""testing pyramid"" (where unit tests >>> integration tests >>> e2e test).

One thing I've been seeing a lot of in my current job are many unit tests with many mocks. It's up to the point where it looks like the test is just checking that all the mocks were called, and that the return result of the function/method being tested is as expected. The problem I feel is that it doesn't look like the unit tests are really meaningful most of the time. Especially when majority of the mocks are basically database calls.

I dislike these types of tests primarily because in the past (and even in my current job) I've had issues where I had to work on a legacy system and make some changes + fix unit tests related to that change (usually just changing expected method calls + return results), and yet when put in a higher environment the feature broke.

I'm not saying unit tests in themselves are bad. I enjoy unit tests with few to no mocks. But the majority of times, the code I'm working on has lots of other code dependencies that need to be injected/mocked in order to even test the function/method. I prefer integration tests which have general data properly setup in a datstore, so that if I make some sort of code change, I can more confidently know that it works.

Can some experienced devs explain to me why I should be valuing unit tests with lots of mocks/stubs? The only thing I can personally think of is that unit tests are fast to run.",1596702129.0,2020-08-06 04:22:09
634,Frustrated with team lead,27,hwt26w,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hwt26w/frustrated_with_team_lead/,31,"Our team had a hostile takeover and me and two other guys are the only people who survived. Our new manager is also not kind or nice, but is generally not well-aware of what is going on in our team. The new culture is on-call 247 and my team lead gets most of the external contact with issues that happen so needless to say he's adopted an approach that minimized our exposure to things breaking. There was once that I merged something at 6pm and caused the dev environment to break. I was eating dinner and when I came online he had already taken care of it, but I got chewed out by my manager. After that I noticed he is very slow to respond my request to get my code reviewed. We also have a 2 approval to merge policy and since we were down to 3 people, I basically need his vote in order to merge.

Things have gotten so bad that I have two tickets that I have opened PRs for for over a month and he hasn't reviewed them. It's not like there were issues and he requested changes. He just didn't even looked at it. I haven't let it go either. It's not like I opened it and then never followed up. I have followed up over and over again. I even had a zoom session to walk over the code changes and after that he said looks good, he would approve it but no action at all. I asked if we can get more people added to the approval list since we added a few newer guys and he said that sounds great but never followed up on it. I've told him that I know not to merge late at night or on a Friday but I just need to have the approval so I don't have this anxiety hanging over me.

I'm honestly tired of covering up for him and basically being a part of this game he is playing. On the other hand he is right that our lives will be easier the less we expose ourselves to criticism by our managers, but he doesn't care that I spend a lot of time on each of these tasks and doesn't care that we should be fixing tech debt and improving our performance and code. The only thing cares about is only working on things that have external visibility and do nothing else. He's even moved those tickets that I have PR for to the next sprint, and the next sprint so it doesn't show up on the sprint board during our standups so my manager isn't even aware of what needs to be fixed. I'm just so fed up. Should I not care either? Follow my TL's lead and play the game? Or blow it all up and go to my manager and tell him I'm getting blocked or ask him to allocate more devs to the review team?",1595584820.0,2020-07-24 06:00:20
635,Importance of resume length for senior technical positions job search,27,he9188,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/he9188/importance_of_resume_length_for_senior_technical/,80,"Hi, everyone! I'm currently between jobs. In preparation for next phase of my job search, I have just reworked my 5-page resume (which, essentially, was a resume-CV hybrid due to my recent academic experience) into an industry-focused two-page one. (My 5-page resume has listed a larger part of my experience, whereas the 2-page one now contains only recent and more relevant one.) It was quite an excruciating exercise, but it's done already anyway.

My questions are: 1) would you recommend me to spend more time and effort on compressing my resume even further into a single-page one, considering that I am targeting senior technical positions (e.g., CTO, enterprise/solution architect, software engineering manager, product owner, principal/lead engineer) and have 20+ years of experience; 2) is it necessarily always better to have a shorter resume for such positions (I mean 1-2 pages vs. 4-5 pages)? Thank you!",1592920379.0,2020-06-23 09:52:59
636,Effective team structure to handle a large number of small projects,25,hcew0j,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hcew0j/effective_team_structure_to_handle_a_large_number/,12,"I'm a developer at a small company (10 devs, 25 total employees). It's the only place I've worked as a full-time dev outside of a couple of internships, and I've been here for 6 years now. We do a lot of short one-off projects, the odd longer project, and have a few pieces of software we sell licenses for. On average, I'd guess we have at least 6 or 7 projects on the go at any point in time. Overall, this results in a chaotic developer resourcing problem, where on a monthly basis people are reassigned and reallocated as projects come in. And some problematic things have started happening. An important project came in at a time when no senior devs were available, so the team assembled was woefully inexperienced and went way over budget. We have people frequently reinventing the wheel, unaware that someone else built the same thing on a similar project 6 months earlier. And we have poor standardization of tooling because people end up siloed and solving their problems in isolation.

I think this could be mitigated somewhat by creating more stable, long-lived teams that each take on multiple projects at a time. My rationale is that by having the same people collaborate repeatedly, each team could do a better job standardizing on its own tooling and stack. And having someone experienced to lead each team would give the more junior devs someone to lean on for the parts where they're in over their heads. They'd also serve as the ""adult in the room"" when planning projects to ensure we scope them responsibly. And then the team leads could meet to ensure knowledge bridges the gap between teams (""hey, so-and-so found a great way to automate deployment, you could use that on project X"").

What I'm struggling to define is how teams should be broken up, what they should be in charge of, and how to manage that. I've read a lot about ""cross-functional teams"" that each own a vertical slice of the company. The problem is most of the companies you read about have stable, long-lived projects, and a much higher developers-per-project ratio. When you have 100 developers building a single piece of software, it's much easier to have a team of 5 take charge of a single set of features. If you divide our company into vertical slices, each one oscillates from needing zero developers to needing 5+ depending which projects come in. I see people recommend against dividing by capability (i.e. the front-end team, the back-end team, the database team), but that honestly seems more effective in our case.

TL;DR: I'm looking for ideas for how to go from one developer:one project to a team of developers:multiple projects effectively. Thanks!",1592652338.0,2020-06-20 07:25:38
637,"In your opinion, should an experienced programmer just leave the industry if they are failing to stay employed in a good job market?",25,gykwdg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gykwdg/in_your_opinion_should_an_experienced_programmer/,51,"Recently I've been seeing experienced people unable to find work, or in some cases not even manage an average salary. And we can't all chalk it up to COVID-19 as it has been occurring with them before that ever happened. Is it really a point where you must say the sunk cost fallacy is real, you must move on to a different industry if you are failing hard as an experienced dev on multiple levels? 

As developers, we have it better than many other STEM fields like biology and chemistry. As from what I hear, it's not as rich in jobs as software and definitely won't pay as much. So what do you think? If someone is doing poorly in a ""easy to manage"" field like software (Many developers know jack about basic stuff that still work and get paid well regardless) are they actually too clueless on basic life skills to work in the field and should they leave?

As an addendum I ran across a thread outside Reddit where someone posted recordings of some of his pre-screens/interviews. Says he's been unable to find work for years as an experienced developer. General commentary in the replies were saying that he's doing far from a good job at presenting himself. So I wonder where, at how much of a failure, do people draw the line between ""can be improved"" and ""beyond being able to improve""",1591593821.0,2020-06-08 01:23:41
638,Getting my first interns!,27,gfimmd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gfimmd/getting_my_first_interns/,15,"Hello!

So I've been working in the industry for almost 3 years in the DevOps/SRE space, mostly as an individual contributor. Our team has grown pretty quickly in the last few months, and I had been having conversations with my manager about taking on additional responsibilities and potentially starting to move down the path to being a technical manager. 

Fast forward to today, I found out that im getting my first opportunity to be responsible for our two summer interns! I have some ideas for projects for them that I think are both achievable and add value to the broader team, but I was hoping that the community had tips for any first time managers! Thank you!",1588925999.0,2020-05-08 04:19:59
639,Is it wrong to give no notice during these COVID times?,25,fzn4d7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fzn4d7/is_it_wrong_to_give_no_notice_during_these_covid/,23,"Tough situation. Supposed to start a new job soon but can't afford to give notice and then have new company freeze hiring. New manager assures me they won't however it's a huge corporation and he doesn't make the decisions when it comes to this stuff. How bad is it to wait until the day of? Don't want to burn any bridges but these are crazy times and have to put myself first.

Will be potentially be creating a bad reference but I feel like I don't have any other options.

Do you consider this reasonable?",1586682511.0,2020-04-12 05:08:31
640,Demotivated team member,27,f3y50e,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f3y50e/demotivated_team_member/,28,"A team member of mine is seen demotivated recently. He said that since person A has been managing the project, he's no longer seen as a contributer. Also, he felt that he's looked down on. From my experience working with him, he's known to be good and overall competent.

Recently, he has raised his concerns to his own line manager (which I think it's the right thing to do).

For person A: there were complaints about person A being generally difficult to work with it e.g. too sure of themselves, their way or the highway, etc. But these complaints were done by mere small talks; nothing formal to upper management.

From the perspective of an experienced staff member, what should we do in this situation? Is there a way to motivate this team member and get him back on track?",1581740531.0,2020-02-14 23:22:11
641,Becoming a good interviewer,28,eysy8t,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eysy8t/becoming_a_good_interviewer/,16,I’m looking for resources on what makes a good interviewer and how to effectively interview SWE candidates. Obviously practice makes perfect but I’d love some book recommendations or online reading if anyone has them. Thanks!,1580863906.0,2020-02-04 19:51:46
642,How do you deal with a bad teammate?,26,euvzds,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/euvzds/how_do_you_deal_with_a_bad_teammate/,51,"I on a dev team with a 8 devs, there are currently 2 open positions. There is also a product manager, product owner, technology corrdinator, and another business role I'm not sure of the title though. It's too large in my opinion, for the most part we all work well together and get features completed. Except there is one extremely opinionated/absent dev who is hindering our progress offer.

He shows up to work maybe 3 out of 5 days a week. Usually after standup. He has not worked on any story work in the past few months. We can never get him to tell us what he's working on. When he shows up he tries to influence design decisions and design the most aspirational product imaginable all while preaching about iterative dev cycles. He doesn't do support work because he's not reliable enough to be at work. He pulls code and literally huffs and sighs because we didn't follow his suggestions. I'm at a loss because I know he has valid opinions, but I can't work with someone who doesn't do or say anything productive.

I've considered about opening up to my product manager about how I feel but am conflicted. I've thought about an internal transfer to a different team, for the most part my team and I work well together. The other devs and I are essentially building a product that is actively being attacked by this rogue dev.

What would be some options for approaching this issue?",1580194124.0,2020-01-28 01:48:44
643,Big feature estimation in scrum,25,el7ku6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/el7ku6/big_feature_estimation_in_scrum/,22,"We recently moved to Scrum from Kanban and now need some help:

1. How do you estimate big features? For example, business team wants to know how long will it take to build feature A but to give them estimation we should get design and break the feature down into small pieces, then assign story points and based on our velocity tell them how many sprints it will take. Is this the right approach? What if BT doesn't even want to start making design without getting rough estimation, what should we do then?
2. Sometimes I feel like Product Owner makes big or middle size tickets which hard to estimate and they can be easily broken down into small ones. Who is responsible for that PO or a team? Should we ask PO to do it or we can do it ourselves?

Thank you!",1578406865.0,2020-01-07 09:21:05
644,Do you find having cloud certifications beneficial during a job hunt?,26,eiti9h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eiti9h/do_you_find_having_cloud_certifications/,15,Or will experience always be preferred over certifications?,1577969301.0,2020-01-02 07:48:21
645,Need advice on switching jobs after 6 YOE,28,ed7b38,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ed7b38/need_advice_on_switching_jobs_after_6_yoe/,6,"I started out as  a college hire  in my current company  as a web app developer and later on I applied internally and got a different role.I like my current team ,and the type of work that my team does  is also related to my interest. The tech skills that they utilize is also cutting edge and in-demand (AI,ML,etc).   Overall , I have around 6 yrs of experience as a developer.

I really want to look for better opportunities but I fear change.  The main issue is the compensation  which is the probably the biggest  factor which doesn't motivate me to give my 100% .  I know for a fact that I am getting paid way below the  market  salary . Despite knowing that, I  fear change that I might end up with something worst (incredibly challenging  work  or no work life balance,etc..)  

Eventhough alot of the factors  (company not doing too well as a whole, layoffs,etc,) currently do provide a sign that I should start looking elsewhere, but  I am struggling to decide on what to do and it's affecting my  health due to stress and anxiety. Should I start looking? If so ,how should I prepare? Do i need to practice programming fundamentals? Are there any  large/midsize companies  that usually has a  decent wlb and pay relatively well?

&#x200B;

&#x200B;

tldr; I am confused on what to do, i am struggling to decide whether to continue with a low pay job because i have a good team or start looking elsewhere. If i apply elsewhere ,,are there any good mid-size/large companies that have a good wlb and pay well?Will i need to revise all the programming fundamentals and coding questions to be able to do well in interviews?",1576858580.0,2019-12-20 11:16:20
646,Will going down the .NET tech stack pigeon hole me?,27,dyp01f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dyp01f/will_going_down_the_net_tech_stack_pigeon_hole_me/,20,"I am very early in my software engineering career (less than 2 years of experience). I recently joined a team which heavily uses .NET Framework with the goal of migrating over to .NET Core. For the more experienced devs, if I start developing skills in this specific tech stack, will I be stuck with working only in .NET shops?

I do not have much experience with this software engineering industry and didn't want to go down the wrong path which may make my future job search harder.",1574219253.0,2019-11-19 22:07:33
647,"Need your thoughts on a ""career opportunity""",29,dj7vci,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dj7vci/need_your_thoughts_on_a_career_opportunity/,15,"Hey guys/gals, 

This came up on extremely short notice and is moving fast.  I could use help wrapping my head around it.

I'm a SWE with my primary experience in Linux/C++ working with sensors and embedded applications.  I regularly use Python and a long time ago did some web, databases, backend stuff, etc.  However, my interests and what I enjoy working on is code that detects or manipulates the physical world.  My job is awesome, work in interesting, team is solid...internal politics are happening.

An opportunity has been presented (aka we've chosen you) to build a team and work on an technology application, but in a way that doesn't line up with my current skill set or interests (services that talk to fun devices).

My personal career goal is to be a principal engineer leading a small team to build interesting things.  I'm not sure I want to go the full people manager route since I enjoy being involved in code/architecture.

* Don't take it - why would I get chosen for the next opportunity when I couldn't be relied on.

* Take it and fail - good effort, continue investing in career while building skills

* Take it and succeed - show ability to take ownership, build team, and deliver.  Possibly have impact on future direction and which parts of the technology I want/enjoy working on.

Pros: 

* The long term goal of the system is awesome, but getting there means stepping out of my comfort zone.

* This is a heavy swerve from continuing to develop my existing skillset - back to being a sort of jack of all trades.

* All embedded devices need some form of communication/cloud nowadays, this would give me the opportunity to learn that domain and how it's evolved.

* They have mentors chosen to help coordinate with other teams and develop leadership/management skills

Cons:

* I have little interest in frontend or being the ""app guy"".  It looks pretty and shows you data after the fun happens.

* Limited to platforms I wouldn't necessarily have chosen myself.

* I can see this leading to more of a systems engineer or pure management role after building a team to cover areas I don't have technical expertise.",1571354432.0,2019-10-17 19:20:32
648,Never been a interviewer before,26,cfk3ih,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cfk3ih/never_been_a_interviewer_before/,17,"Recently my company has amped up its hiring in Tech and Product, and I believe as part of my learning and growth my Tech Lead has asked me to take the lead on the first phone screen step. Now I have been part of onsite interviews where I have shadowed my senior engineers, but never taken lead in the interview process.

I am looking for advice from other engineers here, on how they go about phone screens. Here is how I was planning on going about the phone interview.

1. Introduce myself, explain my role and what I do. Go briefly over what the company does, our broad goals.
2. Ask the candidate to tell me a little about themselves, and go over their recent projects briefly. Look for what they are looking for in their next role.
3. Do 15-20 min code screen share test \[ **I am still not sure what's a good question to ask** \]
4. Leave the last few minutes to answer anymore questions the candidate has.

Thank You in advance appreciate your advice.

PS: I am a Front End Engineer",1563644846.0,2019-07-20 13:47:26
649,"Need some real advice. Burned out on web dev, need job asap but am behind on what I need to know. Also, learning native mobile.",31,bzh69g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bzh69g/need_some_real_advice_burned_out_on_web_dev_need/,21,"I am burned out completely on web development.  I've been doing it 24 years, and have had burnout before and managed it, but this seems to be sticking, especially as it becomes harder to find work.

I've specialized in the LAMP stack, and added to it.  MVC frameworks, Python, JS, a little React.  Of course, jQuery and some older tech as well.  

I'm having the same problem a lot of others are having, I don't come anywhere near fitting the unicorn ads that are out there.  If there's an MVC framework, it's one I don't know.  If it's one I know, the frontend uses a JS framework I don't know, etc.  I apply anyway.

I get callbacks and interviews, and have had a few offers that fell through due to a disability that prevents me from traveling or really going too far from home.  The offers I do get a lot of times are legacy code, which isn't ideal but I'd gladly take it.  But I have to work 100% remotely at this time.

While looking for web dev jobs, and not knowing which JS framework, library, server side whatever I need to learn and not being able to know them all, I started learning Android development.

I adore it so far.  It's awesome.  The tools, the language, the process, I don't know why, maybe it reminds me of why I started programming.  A great IDE, compiler, great debugging and testing.  I also have done a little iOS and found that I really like Xcode and that process as well.

But I need a job asap.  And I don't know if I'm going to be able to do that quickly with mobile.  

On the other hand, I don't think I can come up quickly on some key technologies to stay in web dev, such as Vue, Angular, more React, Node, even PHP frameworks like Laravel and Symfony, because I chose ones that turned out to be less used.

I'm not sure what to do, what to learn, whether to go all in on mobile not knowing how long this is going to take, or learn more web dev since I have so much of it on my resume, even if it is hard to get up to speed and get past the burnout.

Be brutal, I need real talk here.  What do you think?",1560310968.0,2019-06-11 23:42:48
650,"How many hours is ""full time"" for remote/freelance?",26,b9siz8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b9siz8/how_many_hours_is_full_time_for_remotefreelance/,17,"When working 40 hours a week in an office, most people probably only actually work 30-35 hours. But when I'm freelancing, I don't run the clock when I take breaks or do other stuff, so I'm clocking fewer hours for the same amount of actual work. I adjust my rates accordingly, but often times employers who hire me for contracts want me to work a full 40 hours, which I find a little exhausting since it's a bit more like working a 50 hour week in an office. This is a discrepancy that I haven't ever seen people talk about, and I'm just curious what people have to say about this and how they handle it.",1554506606.0,2019-04-05 19:23:26
651,Why are Microsoft's recruiters very flaky? Do they use spray and pray tactics not unlike low-rate recruiters?,28,b7gxl9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b7gxl9/why_are_microsofts_recruiters_very_flaky_do_they/,11,"I've had a few instances where once in a blue moon, a recruiter from Microsoft contacts me and asks me if I would be interested in a position for a department they represent. And every single time they are very slow at following through or completely ignore my emails with questions (despite them saying, feel free to ask questions).

I would be interested in working for MS if it were actually possible for me to advance to the interview round but they always drop contact and usually leave me hanging.

Their e-mails share the same format. They invite you to sign up to a hiring event or interviewing event, for a pre-selected group of teams or departments (I've seen Amazon pre-select a team for you too), usually filling out a short form. And then accompany that with a direct job application on their corporate website. Then they'll later check if there is a position match or vacancy for the event and follow-up.

The follow-up happened only with the first recruiter from MS that contacted me, which was in 2017. They simply told me that the event sign-ups have been closed and there are no more vacancies.

The second, third and fourth recruiters that contacted me didn't even follow up with a status update. No rejection, no advancement to an interview round. Wouldn't even answer my questions about the jobs, usually, even though they would say things like ""feel free to ask me any questions"".

Which is why I asking if Microsoft recruiters are overwhelming themselves by sending out more emails than necessary and just playing the numbers game more than other in-house recruiters. Because when it came to other large companies that contact me, their recruiters are actually very responsive. Amazon reps usually replies back in the same day. Does anyone else have this same experience of given the cold shoulder by Microsoft? Are they spamming candidates no less than any average third party recruiter? Any ideas of what they're doing to select people to actually respond to?",1554014395.0,2019-03-31 02:39:55
652,Staying Sane in a Fast-Paced Environment?,26,aq1n31,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/aq1n31/staying_sane_in_a_fastpaced_environment/,24,"Short of quitting or not caring and getting fired, what's the best way to stay sane and continue to advance your career in a fast-paced work environment? I'm finding opportunities to focus for more than a few minutes at a time rare and have to juggle a series of interruptions and context switching. Product and management are constantly reminding us speed counts, and it's written into our performance goals too, so there's not much wiggle room to cut scope or push back deadlines.

I'm doing heads-down coding for feature delivery, troubleshooting, providing technical guidance, and higher level design and coordination. Deadlines are always tight, and there always feels like there's more work than people. I'm constantly jumping from trying to do a few minutes of heads-down coding or code review to dealing with a prod issue to answering questions to getting pulled into meetings. There's newer code, and we're trying to hold ourselves to a higher level of quality there, but there's also a ton of legacy code and poorly designed crap that's been around forever. Even with the newer code, there just isn't time to fix things at the cross-system or infrastructure level, and we end up making the decision that lets us hit the deadline. Or there's just no time to think.

If we weren't dealing with the tight deadlines and trying to coordinate work as we're slamming into merge conflicts, trying to figure out what should go into testing first, and so forth, technically, the work would be a sleep walk. It's business apps. That's not to say there's no opportunity for deeper technical challenges, but the features the business prioritizes are just boring CRUD.

Are the culture values just too drastically misaligned with my own? Is there a way to make work seem like less a stressful, career stagnating grind? It seems like changing jobs isn't necessarily the answer because re-orgs happen, and the next place I join could sound great and become a high-stress fake ""startup"" 6 months later too.",1550054367.0,2019-02-13 05:39:27
653,Feel like management is only option,27,ag2sum,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ag2sum/feel_like_management_is_only_option/,18,"I don't think my situation is unusual.  Successful career so far as a software engineer (10 years) and now there's a branch.  Either IC (principal engineer) or management (engineering manager).  I would prefer principal engineer and could definitely become one at my current job.  But the main thing pushing me to manager is tech interviews if I need to leave the current job.  I'm confident in my actual software engineering skills.  But I just don't have the time or energy for the crazy interviews these days.  Months of studying?  After a demanding day at work, I'm busy with family life (2 kids).  There's just no time.  The only way I could find time is to quit or a layoff.  But not having a job means no income and makes you far less attractive to companies hiring.  

So the only safe path is management.  They won't ask those tech interview questions.  There's also the contractor route but I need stability and don't want to keep worrying about finding new projects.  Anyone else feel this way?  That the crazy tech interview is forcing experienced engineers to become managers?  I've heard non tech companies don't do this, but here in California the tech interview disease seems to have infected any company hiring engineers, doesn't matter if they're a SV startup or a bank.

It's ironic that recently I read Netflix doesn't do this.  They give you a take home and then you have to defend your decisions during the interview.  I would much prefer this.  Unfortunately their work life balance is horrible and they like to fire if you're not a workaholic.  I wish companies with better work cultures used this type of interview.  

",1547542919.0,2019-01-15 04:01:59
654,I just went through an interview that will make me take into consideration the interviewer from now on,27,8wqdov,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/8wqdov/i_just_went_through_an_interview_that_will_make/,7,"So I have been working in the IT industry for over 5 years mostly working with Java, standard javascript and jQuery, SQL, UNIX servers and VB6 so my CV consist of all stable and  established  organizations (Enterprise, Public Sector) which mostly work with technology stacks such as Spring, Struts2, Oracle.

I have been wanting to find new career prospects and have been wanting to break into MEAN stack development. Although all those technologies are well established in the enterprise, I feel it is safer career wise to pick up additional technology stacks.

So I was invited for an interview with a very well funded startup. Their role description includes a whole bunch of different technologies of which the only relevant one I had was Java with a heavy emphasis on the mobile side. They gave me a written test that was non technical but it did include a section where you have to draw a diagram explaining how you would design a online retailer/eCommerce application. 

It was a bit of a turn off that they seated me their big open pantry to fill in their application form and written test where not far from me were two developers sitting there having a discussion and random people were coming in and out while chit chatting so I had a little bit of trouble trying to focus. I understand that maybe their conference rooms are fully booked but at the same time I am not convinced as they took me into a conference room later on anyways to conduct a face to face interview.

Anyways it not a big deal but for me the face to face interview was a big turn off. I started introducing myself and my past experiences and I found myself being interrupted very often which really disturbs my train of though since a have a lot to talk about after 5 years. However it is still tolerable since they probably fully read my CV so they just want to focus on what they want to know. But what really turned me off was when the interviewer started becoming erratic and ultimately had a poke at me and said many things like “VB6, Struts2, that is so ancient” and he started challenging me on the designs for one of the projects I was involved with and mentioned some sort of technology or program out there that would solve my problems without needed to reinvent the wheel. He would cut me off before I can even form a complete sentence to explain to provide a rebutal. In the end I had no offer for obvious reasons.

Just some final thoughts. I have no idea why I was even invited for an interview. I attended because I was genuinely interested but they made it seems like they are willing to waste 2 hours of both our times just to get a kick out of dismissing my skillset. The interviewer seems to over look the fact that old projects still exist because some organizations just haven’t come up with a justification to switch due if they still have a whole bunch of enhancement request waiting to be fulfilled, the cost of development, the fact that it still fulfills their needs and the potential risk of disruption to the organization. Plus I don’t know why the interviewer can be so sure that his solution would fit my previous projects when he did not even show much interest in hearing the details in understanding the facts first. And lastly, I think everyone should show some respect for older languages and frameworks because they are well established and new and trending frameworks are inspired by old ones. Why? Again how do you build something new and better without first understanding how it was done before.",1530964182.0,2018-07-07 07:49:42
655,"How much effort to do you spend navigating ""Rube Goldberg machines"" built by other devs?",26,kf5xah,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kf5xah/how_much_effort_to_do_you_spend_navigating_rube/,30,"I've been asked to prototype a new feature and I'm on day 4 of navigating my way through a rats nest of scripts and custom data files created by two other developers on my team. Several times I've asked them for clarifications on some of the code. Some times they answer, but with holiday vacation looming they have just started ignoring my IMs. The feature that I'm working on is not related to those other scripts, but I do need to move data through them.     

(This code is bad. Uncle Bob could write a whole new book using just these scripts. Obviously the long term solution is finding better coworkers, but for various personal reasons I'll be sticking it out here a bit long.) 

On one hand this is the work the company needs done right now and it's been assigned to me. Reporting back to my manager that I can't navigate code written by other team members is going to reflect poorly on me. My manager thinks he's technically competent (he is not) and previous discussions I've had with him about code quality have been dismissed out of hand. 

On the other hand, the hours I've spent on this have not made me a better programmer or taught me any new skills. If I took the credibility hit and said ""I can't do this"" I could move onto something more intellectually rewarding.

**This is a questions that's popped up several times in my career. Relatively simple tasks grow in complexity due to poorly written legacy code. I'm looking for some long term advice, not just a solution to this specific example.**",1608266929.0,2020-12-17 23:48:49
656,What are your opinions on how much we should listen to twitter tech celebrities?,27,jlha71,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jlha71/what_are_your_opinions_on_how_much_we_should/,32,"(subject of programming tech twitter celebrities)

I equate them to the 24 hour cable news channels where they tell you what to think and do, instead of looking at your situation and making the decision yourself.  

Learning other ways to accomplish tasks is great, but dogma is not.",1604174892.0,2020-10-31 16:08:12
657,Have you ever worked in a really high quality code base?,28,iv50t2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iv50t2/have_you_ever_worked_in_a_really_high_quality/,34,"So I have about 8? or so years of experience at this point in my career. I've worked multiple full time jobs as well as jobs as both a consultant at a consultancy and a freelancer. Almost all of that work has been in the mobile space (iOS, Android, and a bit of React Native).

I've never walked into a codebase where there wasn't some level of apologizing by the engineers there. The general sentiment is always ""Yeah it's a bit of a rough codebase. We're trying to add abc technology but it's slow. Sorry about that"".

I've come to the conclusion that all medium to large codebases are ""rough"" - and I'm totally fine with that. But I'm interested in hearing alternative viewpoints.

I think I'm less interested in the specific qualities that make for a ""rough"" code base. I'm more interested in the _sentiment_ among developers at that company. Have y'all ever worked in a code base where you really felt good about the code?

EDIT: Another thing I'm interested in exploring is how that idea that they're working in a rough code base corresponds to the idea that other codebases aren't rough. What's particularly striking to me is most of those experiences where developers are apologizing or griping about their code base comes with this sort of implicit embarrassment about the code base. But that assumes that this shitty code base is somehow unique, or that _most_ codebases are clean, and this one happens to be shitty. IME, the exact opposite is overwhelmingly true. Almost all codebases are ""shitty"" (i.e. normal), with a very, very small few being ""clean"" (i.e. abnormally...good? easy to work in? logical? What even makes a ""good"" codebase ""good""?)",1600460500.0,2020-09-18 16:21:40
658,Get too nervous in interviews - is it fixable?,25,ilwh2n,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ilwh2n/get_too_nervous_in_interviews_is_it_fixable/,35,"I have between 5-10 years experience. Even though the roles I apply for match my skill set and I'm sure that I'm capable of doing well, I still get way too nervous which most likely makes me sound like an idiot. I've done my fair share of interviews, and I understand that there's nothing to worry about, but it still happens?

Has anyone experienced this situation?",1599178381.0,2020-09-03 20:13:01
659,I’m a bit bored at FAANG. Is that normal?,24,gvaqwm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gvaqwm/im_a_bit_bored_at_faang_is_that_normal/,19,"I started at FAANG less than a year ago and I already feel like I might be a bit bored. I came from a small startup. I was basically the most senior dev there and I got to lead teams and architect and implement custom projects and it was very fast paced. I supposed I liked wearing a lot of hats and having a lot of responsibility and variety, but I also felt like I was underpaid for my responsibilities and contributions to the success of the company. I was also often frustrated at the extreme pace and cutting corners in quality so I ultimately left for FAANG where I’d be paid over 3x more and could write higher quality code.

The first little while was great. I got to design and code a new service from scratch and spent a lot of time writing high quality, well tested code. I finally got experience with unit testing which we did not do at my last company. By now, I feel like I’ve ramped up to speed (My first performance review was excellent) and I’m feeling a bit bored and unmotivated to work. Maybe things have just slowed down because of COVID or I get distracted easier while working from home, but I will spend entire days doing absolutely nothing, and then I will spend a few hours on Friday making progress on my tasks which are still on track to be completed on time.

Is this normal? The advantage is that I get paid an astronomical amount of money to basically relax and work a couple of hours a day so I can’t complain there, but I have this guilt that I’ll be discovered as a slacker even though I make progress on my tasks and I got a great performance review. I think might have been hired at a lower level than I should have been, but even with a promotion or two, I still wonder if the pace is that slow.

Is it normal for pace to be this slow at large tech companies? Should I feel guilty for only actually productively working about 20-50% of my day but still completing my tasks?",1591144913.0,2020-06-02 20:41:53
660,"Taking a job with ""lesser"" title and pay but slightly better duties",26,f5k4go,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f5k4go/taking_a_job_with_lesser_title_and_pay_but/,22,"I've been working as a ""senior"" developer for a startup for a few years now. The startup has failed to attract better funding to grow so I have been looking for new roles.

I'm trying to move into a technical or team lead position with some more responsibility and reports where I can help mentor newer developers and have some more input into product or project direction.

I recently interviewed with a company for a senior developer position, but the job duties would include what I'm looking for and the pay is more than I am currently on so I was ok with the same title.

However, the recruiter informed me that they thought I wasn't senior enough for them, but they would be happy to bring me on as a ""developer"" on slightly less money than I am currently on, but with the olive branch of being the ""most senior"" in a team of grads, and a view to becoming officially a senior dev in 12 months or so.

I like the company, it's culture and projects, and on the face of it it seems like a pathway to a lead position. On the other hand it feels like either a backwards or sideways step, as well as doing the work of a senior without the title or pay.

Has anyone been in a similar position and decided one way or the other?",1582020380.0,2020-02-18 05:06:20
661,A list of must-have features for any Enterprise-grade system / application?,25,eek9ab,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eek9ab/a_list_of_musthave_features_for_any/,41,"Hi all, 

I'm working at a small-sized IT company and we've started to develop a product meant for bigger companies (300+ employees). From market research, previous experience and business knowledge we gather that there are some features which are essential for an application to be useful in an enterprise ecosystem, for example:

* **Scaleability** \- the ability to satisfy demand and new clientele without downtime, delays or performance deterioration 
* **Integrations** \- to integrate with popular systems already used by the clients and become part of the bigger picture. The information created within the application you offer doesn't bring value if it can't be connected to all the other data the company already creates and measures.
* **Reporting** \- managers need to track relevant metrics in real time, and also have access to aggregated data from the usage. They need to track how every decision impacts the progress of the KPIs.
* **Import / export capabilities** \- the solution needs be able to start functioning within the company with a low-effort action like running an import of existing data, not to have to re-enter or create entries manually.
* **Single Sign On** \- to not force the users to create additional accounts
* **Increased Security**
* **Multilingual support...**

I'm looking to expand this list, or have a discussion with someone that has more insight on this subject. I realize the requirements are different depending on the industry the company operates in, but I think there is some generalization that can be done.

So - experienced devs that have worked in these environments - what are, by your opinion, features that are needed for an enterprise-grade system or application?",1577134402.0,2019-12-23 15:53:22
662,"Those of you who wear progressive lenses, do you use them when coding?",27,e780ua,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e780ua/those_of_you_who_wear_progressive_lenses_do_you/,21,"Because I'm kinda hating my new progressive lenses. They are fine for the desktop but suck when I use the laptop.  Thinking of getting some glasses just for coding. I have astigmatism, so cheap readers don't help. 

Just curious if others have the same experience.",1575711904.0,2019-12-07 04:45:04
663,"Mid-career crisis: Focus on Dev, Business or Finance?",27,dy7icc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dy7icc/midcareer_crisis_focus_on_dev_business_or_finance/,14,"Hi, as someone with 8 years on working experience, I'd like to share my thoughts and hopefully get some feedback.  
I began my career by doing IT consulting for a big4 for 4 years, mostly developing enterprise web application and managing the lifecycle and improvements for them (telecom finance and banking risk management).  
My latest years have been on a physical trading company's IT department developing the modules for the Pricing, Risk Management, Data capture and processing modules.  
There is no management advancement and the corporation is pretty flat, so no advance is in sight.   
  

Would it be wise to focus more on IT specializations? Focus more on this industry and get more certifications? Study business and possibly apply for MBA in finance?   
  
If else fails, I'm considering to quit and go solo (freelance) for a period to know what I should do...",1574132048.0,2019-11-18 21:54:08
664,Offer in London - without relocation package,26,dmz4lp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dmz4lp/offer_in_london_without_relocation_package/,31,"I am an iOS Developer with about 2 years of experience. I currently live in Greece and I have been searching for a job in London for about two months now.

I got an offer for a Junior iOS position 2 days ago. The company is a Fintech startup that is scaling pretty fast and is getting tons of funding. The pay is £38k / year. I also get 100 stocks (which at the moment are worth 3k) with a 3 year vesting period.

Now, I think the salary is livable but, they are not offering me any relocation package or signing bonus. That would pose a problem for me since I don't have the cash needed for relocation.
To my estimates, I would need about 3-5k just to get an apartment (1st month's rent + deposit) and to relocate all my stuff and not starve there. That's about 1/3 of my yearly salary at the moment.
They told me that they haven't relocated any employees to date, so there's no relocation package issuing procedure in place. My recruiter spoke to one of the co-founders and he offered to give me my first months' pay at the start of the month instead. I think that would just move my problem to the end of the month.

I asked if they would be willing to give me some money to cover part of my relocation costs but the co-founder wasn't willing to do that, which is understandable considering they don't know me yet. Today I asked if they would be willing to cover either my costs or part of the costs at the end of the 1st or 2nd month. They haven't gotten yet back to me but my chances of getting that are slim.
Do you think I am being unreasonable? Is there anything else I can do or ask that might work for both of us?

I might be able to take up the offer using the cash I have saved up if I live in a house share situation for a month or two. Would you even consider that?

EDIT: I just got word from them that they won't cover my relocation costs even after 1-2 months after I started as that would require investor meetings to get approved, which takes time.",1572046509.0,2019-10-25 19:35:09
665,"""We'd like to schedule for another interview"" - when the interview should have ended a month ago",26,cn3t9t,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cn3t9t/wed_like_to_schedule_for_another_interview_when/,31,"So finally, this *big-very-known-company*'s development manager (who's in charge of everything apparently) finally got back from his leave, finished his project, and finally ... could make a hiring decision.

But, I got a message asking me to go back to the company ""for another face to face"" with *his boss now* \- Jesus Fucking Christ!

The person who messaged me (have no idea who the heck she is) said she's scheduled it tomorrow if ""I'm okay with the time and place"". The fuck?

Has anyone been through this? I was very close to just lose it right now to be frank but, for some miraculous reason, I didn't!

I haven't replied and I am ""this close"" to just withdraw from the whole process; but if some of the experienced dev folks here can talk some sense into me, I'm all ears!

The reason I don't want to walk away from the company is that the company is quite well-known (though old and bureaucratic - probably like Microsoft I suppose? I'm not sure but it's big and old), and I've made it this far, so ... might not be a good idea to lose my cool. But I also don't want to be naive and think that ""company brand""'s going to blind me from what I should have known better : /

Experienced devs, please, has anyone been through this? Need your views - any advice is much appreciated ; (",1565200804.0,2019-08-07 14:00:04
666,Experience starting a side business to make some pocket cash?,26,c1cqcw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c1cqcw/experience_starting_a_side_business_to_make_some/,4,"I originally started building out a side project which after working on awhile I've decided to lightly monetize to add some side income. I'm not expecting it to blow up or anything, but I know there is an established market and that what I built vastly improves the solution compared to the competitors.

 Has anyone done something like this? Is there anything I should be looking out for? Thanks.

edit: I should add. I work full-time currently. Fairly relaxed schedule with a so-so commute. Plenty of time in the evening to work a few nights a week.

editedit: I am located in CA, USA",1560736369.0,2019-06-16 21:52:49
667,Resources for learning about team building,27,bzxtdn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bzxtdn/resources_for_learning_about_team_building/,12,"I’m looking for some resources (books, podcasts, blogs, etc) to help me better learn how to build out a team of ~5 people. Ive been recently made the tech lead / manager for the project I’ve been working on and this team is going to expand.
Some topics I’m interesting in learning more about:

-	Interviewing candidates effectually
-	how to construct proper team dynamics
-	How to foster an environment in which everyone on the team is happy and makes them want to stick around
-	ways to properly provide feedback to my team, as well as them to provide feedback to me


Any ideas? Thanks!",1560407837.0,2019-06-13 02:37:17
668,"Experienced Devs with MBAs, what was your experience like?",27,blg5kz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/blg5kz/experienced_devs_with_mbas_what_was_your/,8,"I'm currently at 4 years of experience and working at a big tech company, big 4/5/N or whatever you want to call it.

I have a BS in a non-technical field. I graduated with a BS in Psychology and then later decided med school wasn't for me (strong focus on Biology during my undergrad). So I don't have a degree in CS but it is going fine for me so far. I also have taken classes up to Data Structures/Algorithms, and Assembly.

My current employer will pay for part of my education, and I'd like to do something to help my career outside of work. I don't think a MS in CS will help me much, since I'm not too interested in fields like AI/ML or other CS related research, and already have a good stable job. The next thing I considered is an MBA.

I'm not particularly a people person, and I don't know if I'd want to go into management. I don't know if I'd ever want to be a PM either. I would be interested in an architect role, or some role where I still got to do some hands on technical work while having control over a project. I've met directors in my career who were pretty technical, and were really good at architecting systems.

For those of you who have done your MBA (and are not PMs), was it worth it? Should I pursue an MBA if I'm not interested in a PM role and *maybe* interested in management in the future?",1557198042.0,2019-05-06 23:00:42
669,"10+ years at the same company w/ multiple titles, now it's time to build a resume",27,bizgil,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bizgil/10_years_at_the_same_company_w_multiple_titles/,16,"I've worked at the same company for 10+ years, starting as an Intern, then as a Software Engineer, then as a Senior Software Engineer, even though my roles and responsibilities have stayed the same.  I'm looking to update my resume to look for new work, but I'm not sure how to format my resume regarding timeline / titles?

&#x200B;

Should I only include my most recent title and all my years at the company?

* 2007-  Sr. Software Engineer

&#x200B;

Or break it down by title / years?

* 2007 Intern
* 2007-2017 Software Engineer
* 2017- Sr. Software Engineer",1556629483.0,2019-04-30 09:04:43
670,Tips for a Slow Engineer,27,axffjn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/axffjn/tips_for_a_slow_engineer/,5,"Hey all,
I'm looking for tips on overcoming or dealing with being a slow software engineer. I believe for me, part of it is I haven't found a good way to manage time, to show I am making progress in things. I asked my lead for tips and he gave me suggestions like making a spreadsheet or something like that and writing down things you have to do. Then knock out some of the low hanging fruit everyday to show progress so that all that's left are the really hard or lengthy tasks. I will be doing this this week.
I've also received feedback to put accomplishments I made into my weekly status to better convey my progress. 
However I fear that may not be enough for me. Throughout college, in cases where I knew exactly what to do, I'd reach the same solutions or close to my peers way after they've completed their work.
So I fear that's what will happen to me in the near future when I'm more comfortable with the software on my current team, even after I make the aforementioned changes to my work day and follow that for the next month.

Any tips for an engineer like me? Just looking to get ahead on things. ",1551779198.0,2019-03-05 04:46:38
671,"30+ years of experience, haven't interviewed in ~25.",26,al5ffe,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/al5ffe/30_years_of_experience_havent_interviewed_in_25/,12,"What do I need to know about interviewing?  Is it all online testing now?  Do I need to go practice ""leet code""?

I'm an IC with no interest in management.  The last 25 years I've been in applied research, which was fun.  I *have* worked on a large variety of different things, despite being in one place for so long.   But I can't  tick boxes like ""Agile"" and I haven't had real deadlines in a long time.  

But the org is a mess and I'm tired of the company, so I'd go back to product dev if someone will have me.  I *like* coding.

I've done lots of back-end and embedded work, small amounts of front-end and DevOps. 

Thoughts or suggestions?",1548828580.0,2019-01-30 01:09:40
672,How do you review your own code?,25,kcxs6y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kcxs6y/how_do_you_review_your_own_code/,25,"I'm soon starting on a new project at a new client where I would be the sole software engineer for the foreseeable future. 

In the past 3.5 years working as a software engineer, I've always had coworkers who would review my pull requests and vice versa, but this time I would be on my own. 

I've been thinking of opening my own pull requests and leaving it open for a day, so I can review this the day after with a fresher mind. Another option is to ask my coworkers from my own company to do my reviews, even if they're lacking the full context.

What would you suggest? Any other ideas?",1607981966.0,2020-12-14 16:39:26
673,Would you be mad if someone took PTO during a tight timeline?,27,jxgrx7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jxgrx7/would_you_be_mad_if_someone_took_pto_during_a/,56,"I'm out for a week (planned in advanced 3 weeks ago) and I'll miss the entire push to production (taking time off during tight timelines) Thanksgiving next week and all.

Would it piss you off if there was all this work that had to be done yet someone took an entire week to miss the deployment. 

Would it piss you off if multiple people in your group did this leaving you holding the ball and not miss the deadline?",1605868177.0,2020-11-20 05:29:37
674,How to stay motivated when you know you're ready to move on?,25,jp6fjp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jp6fjp/how_to_stay_motivated_when_you_know_youre_ready/,11,"I've been at my current company for 10 years, my entire career. During that time I've had natural FOMO regarding switching jobs and trying out new tech stacks, but they have treated me and paid me well for the most part, so I never seriously considered leaving.

Unfortunately, I was asked to move to a completely new team, to work on an uninteresting product, with some serious legacy stack. This team is stressed and overworked (I was moved to provide a ""boost"") so they basically gave me a solo project and told me I could just take my time and figure it out on my own, which has been an incredibly frustrating experience. My productivity has dropped dramatically and I am hating every minute I have to work. I have expressed concerns to my manager, but his general message is ""I'm already stressed, I was told I could count on you, please don't add something else to my plate.""

So I am now ready to find a job elsewhere. However, I have a significant share of RSUs and bonuses coming in around March next year, and I don't feel like leaving those behind when it's so close. But it is so incredibly hard to imagine working on these conditions for 5 more months, and I would hate to become so unproductive that my reputation at this company is damaged.

Has anyone been in a similar situation? How do you keep yourself motivated to keep going? Have you said ""fuck it"" and left the money on the table to get to something better?",1604703177.0,2020-11-06 17:52:57
675,At 20 rejections: what's helped you?,26,j2wyfe,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j2wyfe/at_20_rejections_whats_helped_you/,23,"I'm at about 6-7 years of experience, currently a high senior at my company and I've recently gone through about 20 interviews in the past few months, and they've ranged from ok to really good to god awful, but never ending with an offer. What's helped you the most? I keep getting feedback such as:

\- Skilled, but not a fit at the moment

\- Skilled, but we had a lot of interest for this role, sorry

\- Thanks for your time.

Luckily have a job at the moment (for now), but almost at the point of just pausing and refocusing my efforts and actually seriously thinking about doing something else because I'm not getting anywhere.  Any advice other than grind Leetcode until I satisfy the algo gods?

Edit: Thank you for all the advice. Since I'm newer to the area, I've started to approach this more in a frame of networking than I have previously, and that helps reduce some of the anxiety surrounding the process.",1601536262.0,2020-10-01 03:11:02
676,Got hired through a (proxy) consultant company? Red flag?,25,j23za3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j23za3/got_hired_through_a_proxy_consultant_company_red/,62,"So a multinational company I've been interviewing with gave me an offer. But I'll not be hired directly as staff there, but through a local consultant company, and then assigned to work in the main company as 1 year contract. From what I've known I'll get less benefit than the permanent staff there.

Is this a red flag? Is this a way so that they can fire you easily? What should I consider and ask them before taking the offer?

Update: It seems some people get it wrong. I'm not really a contractor that is paid hourly rate. I'm full-time hired to the consultant company (with universal healthcare and all the working hours, vacation laws applied), and then I'll be assigned to work in the main company. In paper I'm signed as consultant but in practice, all the applications, interviews, salary negotiations, my future working manager... is through the main company (there's hardly any office or personnel in the proxy company). That's why I used the word ""proxy company"".",1601429534.0,2020-09-29 21:32:14
677,How to deal with management who won't admit their schedule is absurd?,26,iqdpnk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iqdpnk/how_to_deal_with_management_who_wont_admit_their/,20,"I started contracting at a company who wants to take a moderately complicated standalone electronic device to certification testing in a month.  All they have is now in terms of computer hardware is an in-development microcontroller board that spits out a complicated serial data format.  I told them that the best bet for achieving a short timeline was to postpone all mobile connectivity and other planned features and focus first on just getting the science working as a standalone device and getting through the certification test.  They agreed, but then the certification test was delayed 2 weeks, and they decided to add all the other features back without talking to me, which is probably at least an extra 45 days of work to an already crazy schedule.

When I try to tell them the schedule is unrealistic or give them detailed task/time lists, then they bomb my email and Slack setting up meetings to figure out how they can hire more people or figure out some fancy trick to do things faster, which just takes more time and doesn't really help (I am trying to divvy up some work to hand off, but it's not easy when there are no specs and the timelines is weeks).  But if I lie about how much there is to do, then I'm just setting myself up to fail.  It seems like some people have taken the approach of just being vague about  the scheduling questions and not always responding to emails about it.

Ultimately my plan is to start looking for another place to work because it's one of the most dysfunctional workplaces I've been in.  But I wanted to see if anyone had any tips about how to deal with this situation because I need to stick with it for a little while longer.",1599805184.0,2020-09-11 02:19:44
678,"7 years in, pretty sure I dug myself into a career hole",26,in3wj3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/in3wj3/7_years_in_pretty_sure_i_dug_myself_into_a_career/,28,"Senior engineer with 7 years’ experience. I have a CS degree. I’ve used Java and the Salesforce platform (first Aura then LWC which is basically a ripoff of Angular) for most of these years. I’m so bored and I fear I’ve dug myself into a proprietary platform hole that I need to get out of to branch out to other jobs. 

My ultimate goal is to be full-stack and I’m willing to put in the time and effort. React sounds very interesting. I hardly had to do any systems design (again, bored out of my mind). 

My inner circle consists of mostly Salesforce devs (who share similar concerns). I don’t want anything to do with the platform anymore. It’s not of any interest to me, not to mention how wonky it is. Any suggestions on where to go from here?

[Edit] In case anyone was curious, Salesforce is the third most dreaded platform according to StackOverflow’s [2018 developer survey](https://insights.stackoverflow.com/survey/2018) . Curiously, Salesforce seems to have disappeared from their 2019 survey entirely.",1599351590.0,2020-09-05 20:19:50
679,Is it a bad thing that I'm not good with junior devs?,25,him5in,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/him5in/is_it_a_bad_thing_that_im_not_good_with_junior/,48,"
   I've been away from my previous company for over a month now.  And I haven't looked back.  I much enjoy my new company.  The communication is better.  Everyone is pleasant to work with.  Everyone gets things done and we we work better as a team.  But the key here is that everyone I work with now are older/more established developers.  They're all fairly senior, and everyone acts and conducts themselves like an adult.  Even so called problem cases are usually pretty easy to deal with.  

  My previous job I was the only senior dev on a team of 3 junior devs.  I was brought in to save a project and I did save it.  But I've come to realize that working with juniors is beyond frustrating.  They were know it all, premadonnas, made things worse than they were and no one was mature.  I don't begrudge them for this.  But I was given no authority with them so they ran wild.

   With companies going cheap, I'm finding that they're quickly filling their ranks with junior talent.  And it's becoming more essential for senior devs like me to mentor or more ""babysit"" these developers.  Because companies really want to be cheap, they give junior devs way too much leverage.

   When I was a junior I was on a team full of seniors.  Majority of the staff had many more years experience than me.  Most weren't great with junior talent.  And they didn't need to be.  I knew my place, and I knew I had no business questioning or talking back to my seniors.  And management fully supported them, because they had shown their value to the company and the team.

  I just find that nows days it's not uncommon to find yourself surrounded by nothing but juniors.  Many will question you all the time.  And you get no support from management.  Yet you're expected to swoop in and save projects or cover the junior people's mistakes. 

  After my last job, I had almost convinced myself that I was bad at working with people.  But now that i work with adults, I'm finding that I'm pretty good working with people.  And that the situation in my last job was just horrible.  But maybe I'm just bad with juniors.  Like I said when I was a junior, you felt lucky to have a job, and seniors weren't expected to baby you.  And questioning the direction of a senior person was absolutely not tolerated.  Even if the senior made mistakes, they still knew significantly more than I did.  And it was an opportunity to learn and soak in knowledge.  So maybe from my own formative years I havent developed a knack for coaching junior talent.  But is this bad in the long run?",1593547826.0,2020-06-30 16:10:26
680,"How to interview better for the kind of job you want, not necessarily for high pay or big name ?",26,gofjoe,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gofjoe/how_to_interview_better_for_the_kind_of_job_you/,16,"Hello all,

I  read somewhere on this sub a dev mentions that they have always managed to get the type of job they wanted as a comment to this post about ""not having it all"" is normal (there were metrics such as challenging work, good pay, good manager/boss, good cohort etc.).

My particular problem is with making sure hiring manager tells the truth at least most of the time. After two jobs, it is my experience is that during hiring both parties can lie a lot, I mean a lot.

At both of my jobs, I have been either too anxious to either get in or get out. During interviews, I was always open and clear about my expectations, what is not working for me at my current company and what I am seeking etc. However at the end the offer made a big difference on what I accepted.

Now, I am searching more intentionally for my 3rd job. This turns out to be harder than I expected. Companies are at an advantage judging me since I have a CV, maybe a github that shows my projects etc. and all I have is skewed data on glassdoor to judge them. Most companies hide behind brand names and a job description that seems to be for the entire department not a role. Again, the initial phone interviews are all about me and no chance of asking questions until I successfully pass tests and finally meet with the technical people.

So in my opinion, getting a job is a very time consuming blind date.

I would love to hear some advice on how to get better at judging companies up front, what to ask to a manager, how to weigh their answers etc.

Thank you",1590165295.0,2020-05-22 12:34:55
681,What kind of interview at the L7/L8 level?,26,e58eme,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e58eme/what_kind_of_interview_at_the_l7l8_level/,26,"Basically I'm at the point where I'm at three levels beyond new grad, and am looking to interview somewhere else since promotions are not forthcoming where I am due to arbitrary limits on the number of people at that level. That generally translates to what FAANG is calling L7/L8/Staff. 

How do interviews look like at this level compared to early career? Do leetcode/whiteboarding things still come up? Is it more about big system design? More about explaining actual experience and projects I've worked on? Do companies care about non-technical leadership and soft skills? Should I prepare more for behavioral questions?",1575361462.0,2019-12-03 03:24:22
682,Experienced devs - your views on freshie boot camp candidates,25,cy4a2w,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cy4a2w/experienced_devs_your_views_on_freshie_boot_camp/,31,"I just got myself some resumes and I do wonder what other senior devs would think of freshie boot camp candidates; *freshie* here can mean:

1. They are young e.g. in their 20s with no degree 
2. Mid to late 20s have a degree but unrelated to IT - attempting to join the IT world - have gotten themselves one or two boot camp certs
3. Any age, with or without degree unrelated to IT - attempting to join the IT world - have gotten themselves one or two boot camp certs

Honestly from my POV, boot camp candidates would have an astronomical competition against degree holders related to IT (e.g. CS, IT, SE, CE, etc.)

I'm not saying that the CS/ IT graduates are ""automatically better"", but I ""know"" that the foundation may be ""somewhere"" within them and it's just a matter of them to refresh those fundamentals. 

I had the experienced of hiring an engineering graduate who attempted to test his waters in the IT world. He didn't have any boot camp cert but due to his ""tech"" background, I decided to give him a chance; honestly ... it was actually difficult to manage him. He didn't quite grasp the fundamentals of  race-conditions, OO and those sort of things we do, which made me more and more worried for his future growth. He didn't last long, and I hated the fact that I made the decision to hire someone just because they had a ""techie"" background. Due to boot camp grads having very fast churn from their schools, I do wonder if they would suffer the same? (i.e. lack of fundamental knowledge).

My questions:

1. Generally, within the context of my thread, what do you think of this situation experienced devs?
2. Would you hire boot camp grads over IT related grads?
3. Any experiences managing them?",1567332255.0,2019-09-01 06:04:15
683,Why is it so hard to find a good SDET?,26,cuo6yx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cuo6yx/why_is_it_so_hard_to_find_a_good_sdet/,56,"I've been given the unfortunate challenge of trying to find a Senior SDET for a middle sized company (~100 people, engineering heavy), since my company believes in having dedicated developers to manage CI/CD pipelines,  create/maintain the automation suites, make internal tools to help with development, and the like. I'm a Junior-ish SDET (just shy of two years), and I'm helping my seniors interview candidates. And well, it's been a nightmare, for quite a few reasons:

1) Most of these developers cannot code their way out of a wet paper bag. Yes it's leetcode, but they fail HARD on for loops and fizz buzz. These are people with 10+ years of automation development experience! The senior software architect says that these are the people that make it to the interview stage, and the rest of the candidates can't even answer basic questions about languages they claim they know (difference between == and === in JavaScript, is python strongly typed, etc ).

2) Many Senior SDETs don't care about their work. One candidate said to our faces ""I hate development"", and many flat out refused to do the basic coding problems. These weren't white boarding problems like ""invert a binary tree"", these were problems directly related to the field,  like ""Could you write some automated tests using your favorite language/framework to test a random number generator?""

3) We're offering market rate (~$150,000 base, Los Angeles) for this position, and STILL get a stream of bad candidates from third party technical recruiters. Benefits are pretty standard too (good healthcare, ok 401k matching, etc). Is this enough to attract even decent talent?

4) The company doesn't have a bad reputation. It's a ""work 8 hours, care about your work, have a life outside of work"" culture with 4.X stars on Glassdoor, business is doing really well, and there's a healthy mix in the tech stack (AWS/react/node for a cash cow webapp, Java 8 and 11 for a large backend Business to buisness service, tensorflow / python /Scala / etc on the data science team, among others). And yes, the SDETs are embedded in the small (5-10) sized teams.

Are we doing something wrong? We've interviewed and failed about 15 candidates so far, with a whoooole lot more that have failed the phone screens. It's demoralizing as heck. Where are all of the good SDETs at?",1566645160.0,2019-08-24 07:12:40
684,Have you been a victim where the purpose of the interview is to know the landscape of the industry/ market value of the job and not to hire?,25,cige0h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cige0h/have_you_been_a_victim_where_the_purpose_of_the/,12,"These companies who advertised the job adds probably don't know the technical current landscape, or unclear with their own technical needs; so by interviewing the actual technical people may get them insights they need. Or they can even make modifications to improve their adverts from the interview process!

So literally the interview is just one big scam.

Have you been a victim or seen something similar whilst job hunting?",1564255523.0,2019-07-27 15:25:23
685,Asking for additional money if they want me to work weekends temporarily. Has this been done before?,25,bxhian,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bxhian/asking_for_additional_money_if_they_want_me_to/,15,"Without going crazy in depth, my client likes to ""shove"" new high priority projects in front of the old ones.

&#x200B;

In this situation, they wanted a system overhaul by the 6/1/2019. This was entirely doable but they shifted me from it for 2 weeks, so I said ""I need 2 more weeks. This will be fine *unless* you shift me somewhere else again."". Needless to say, I got shifted again and anticipate finally working on it this Monday. They don't want to change the deadline.

&#x200B;

I'm planning a vacation on 6/28, so I'm perfectly fine working more hours to meet the deadline *if* they pay me for the extra hours. In short, I'm tempted to say ""I'll work weekends for an hourly rate we both agree on. I'm going to use this for my vacation, so I'd like to be paid for these hours before 6/20. If not, the overhaul will not be met by the date you would like.""

&#x200B;

I'm paid by the company I work for and not by the client, so I'm not sure if this is even heard of to suggest something like this? I'm willing to sacrifice my weekend time for a better vacation lol

&#x200B;

Thoughts?",1559860969.0,2019-06-06 18:42:49
686,Need advice on leading a team and potentially job hunting for team lead positions,24,bw5wxd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bw5wxd/need_advice_on_leading_a_team_and_potentially_job/,12,"I've been a senior developer for a little while at a company that doesn't have a team lead role. Before becoming a senior, and a little while into being a senior, I would mentor more junior (and sometimes senior) developers with our tech stack and business/industry questions. I would do more than my share of code reviews and usually had a considerable hand in design decisions.

A few months ago I was moved onto a team that has a mix of skill levels, but is overall the most inexperienced team I've been on thus far in my career. I find myself code reviewing literally every pull request because if I don't issues will slip through (and this isn’t me being controlling, bugs, duplicated code, etc. had happened early on). I'm also carrying more than my share of the development work so that deadlines are met. In addition to the day-to-day work, I find that I need to be essentially leading every design discussion because if I don't the team tends to make very narrow decisions. Say we need to do X this sprint, then Y in the next sprint, and Z two sprints from now, they will tend to create separate solutions for X, Y, and Z when a more generalized solution could be done that solves all three.

Despite not having a team lead role, senior developers are held accountable for how well the team does in addition to their own work. Managers can be over several teams, so they often don't know what individual contributors are doing on any given day, or even in any given sprint. I find that I have to follow up with my team members to make sure work is getting picked up and completed in a timely fashion. Since I'm not a team lead I have no authority over these team members so instead of being able to say, ""I need you to pick up Y because you finished X and haven't picked up a new task"", I have to ask if anyone doesn't have work and let them know Y is available to work on.

I think this hasn’t been an issue on previous team’s because I’ve always had at least one other really solid person on my team that could help split the load and with whom I could have conversations on possible improvements, as well as frustrations. I think this group is also unique to my past experiences in that the learning curve seems so slow. I enjoy mentoring people and I often find it rewarding. In the past year I had an intern who picked things up quickly and would have blown past this group of people who have many years of industry experience.

This doesn’t seem like an ideal setup and I’m starting to get a little burnt out (I think primarily due to the slow, to no, learning curve). I’m hear asking for advice on my current situation and about potentially job hunting.

- How do you deal with developers making similar mistakes over and over?
- How do you deal with just a general lack of thoroughness in developer’s work?
- How do you deal with developer’s moving slowly, in part because of technical knowledge, but also because of a lack of accountability (it’s not uncommon for a developer to finish a task and not pick a new one up for a day or two)?

I try and explain things thoroughly in each code review and provide documentation when appropriate, but short of continually sending emails to managers I don’t know how to actually enact change.

Regarding job hunting:
- What are team lead interviews like? Either when you interviewed or how your company interviews?
- Is the expectation that you are at a technical level of senior or higher and have the desire and ability to mentor?
- My assumption is a team lead role is a lot of what I’m already doing, plus some more managerial tasks like approving vacation time and possibly performance reviews. Is that the case?",1559560291.0,2019-06-03 07:11:31
687,[Update] Company gave an offer then ghosted me after telling them about my disability,25,bn60dv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bn60dv/update_company_gave_an_offer_then_ghosted_me/,39,"Original:  https://www.reddit.com/r/ExperiencedDevs/comments/bko1zu/given_offer_then_ghosted_after_telling_them_about/

I finally got in touch with the company.  I called the main office and got who I think is the owner.  He's related to the hiring manager.  I made him aware that I had gotten an offer, made the hiring manager aware that I couldn't travel or meet in person due to a disability, and hadn't heard back.  That evening, I got an email from the hiring manager that they were still deliberating.

After a few days, I wrote again asking if the offer was still valid.  I got an email rescinding the offer, because I was ""unwilling to accept any of the accommodations we offered"".

Unwilling?  No, unable.

This was advertised as a completely remote job.  No travel was mentioned in the ad, and was not mentioned in any of the interviews.  And I spilled my guts to them about my disability, agoraphobia, and explained that it meant I couldn't go a mile down the road or 1,000 miles down the road, it's all the same.

Per suggestion, I posted over at /r/legaladvice and they tore me a new one.  I was advised that since they offered to come to my town, (EDIT:  The offer to come to my town was part of the discussion about my disability, and a lot of ideas were tossed out there, this was just one, was casual, and wasn't a solid offer, more of an idea he was thinking about, along with doing the onboarding remotely.) that was ""reasonable accommodation"" and I would lose any court battle.  Despite the fact that the ""reasonable accommodation"" was no different in essence than the original travel request, due to the nature of the disability.

So I have to let this one go.  I want to fight because I feel as though people with mental disabilities are treated differently than people with physical disabilities.  And I feel that both are already discriminated against, and I really want to drive the point home that this is not acceptable.  But I can't, because I have to find work somehow and can't spend the money.  And /r/legaladvice says I'll lose anyway.

The lesson I've learned is to ask about travel up front, regardless of what the ad says.  And I will be going back in the closet with my condition.  Which is a shame, because I shouldn't have to.  Happy Mental Health Awareness Month.

Anyway, thanks everyone for helping.

EDIT:  Let me clear two things up.  As I edited above, the accommodation was never formalized.  I don't know if the company would have even approved it.  Who knows.

Secondly, there were only two people who would come to my city.  They both live on the other side of the country.  I live very near where they were going to have to fly anyway.  It might have even been cheaper to come here.",1557563660.0,2019-05-11 04:34:20
688,Is it reasonable to ask to be taken off a critical failures call sheet as a Software Engineer?,26,bkdtmv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bkdtmv/is_it_reasonable_to_ask_to_be_taken_off_a/,27,"My team has being dealing with critical failures every 2-4 weeks due to some terrible infrastructure that the company is just not fixing. It sucks its stressful and it wasn't exactly what I signed up for when they hired me. Is it normal to expect engineers to respond to calls at 4:00AM? At my last place we had a team that was responsible for being on call. That doesn't exist at this company and it seems like they just expect the software engineers to do it. 

&#x200B;

It feels like if I ask to be taken off of the call list I'm throwing my team under the bus. Is this just something I should expect from the job? (not a newb here just used to having devops/SREs)",1556948247.0,2019-05-04 01:37:27
689,Tips for smoothly leaving a job,26,ipg0kh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ipg0kh/tips_for_smoothly_leaving_a_job/,21,"I'm looking for advice about how to gracefully leave the company I'm working for.

I'm currently working in a contract capacity for a large company. The contract isn't project-based and is due to expire or renew in a couple of months. I've already decided I do not want to continue working for this company and have begun to interview for permanent roles.

I have two projects that are winding up. I'm basically waiting on other teams to finish their work and am supporting them with troubleshooting and testing. My part is finished.

I have a third project for which I did some preliminary work. It has been stalled for the last four weeks because a permanent employee has cancelled or serial-rescheduled meetings about getting me access to the things I'll need next. I'm the only developer actually working on the project.

If I were to continue at this job, my priority would be to somehow get this third project moving again. However, I'm planning to leave in a few weeks, so it doesn't seem that that would actually be in the best interests of the company - causing a fuss to get the project going and then leaving without anyone else assigned to the project.

Should I just stall on the third project and ""work"" without anything real to do? Is that responsible, or is that just an excuse I'm using to be lazy or concentrate on interviewing? How would you handle this sort of thing?",1599687430.0,2020-09-09 17:37:10
690,"Senior programmers, What do you do when total years of experience jeopardize the job opportunities ?",25,i6fded,ExperiencedDevs,/r/AskProgramming/comments/i6eszh/senior_programmers_what_do_you_do_when_total/,14,,1596986781.0,2020-08-09 11:26:21
691,Applying to external companies for your first management role. Any tips or guidance?,23,i5ajqx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i5ajqx/applying_to_external_companies_for_your_first/,28,"I've tried to search on this subreddit for some guidance, but a lot of the stories tend to be about people transitioning within their company.

I was recently made redundant, and so I am seeing this as an opportunity to switch to a role I am really interested in. I have about 4 years experience, but I was the (unofficial) tech lead in my previous role, I've mentored juniors and generally tried to improve the organisations I've been in. I also give the illusion that I'm an extrovert, and tend to get on with my coworkers pretty well. I've also tried to do some reading on the subject, with things like The Manager's Path and so on.

So although I have some relevant experience, it's still a bit of a punt for a company to hire me as a manager. How have people navigated this before? Do I have any hope in hell at some of the larger companies e.g. FAANG? Or should I try and stick to the small to medium sized companies?

I'm yet to start applying, but it would be good to know.",1596820150.0,2020-08-07 13:09:10
692,Generalist struggling to get work,25,i349mw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i349mw/generalist_struggling_to_get_work/,11,"As the title suggests I'm a generalist engineer.  I've been around many stacks(rails, node, java, light experience in a few others) and many roles(mid->sr dev, team lead, devops, architecture, some data).  

As you could imagine my off the cuff skills with any of the above are not super deep.  I have the ability to go deep on any of them, but I'm struggling to find places that value a breadth of experience and struggling to get into stack specific roles.  


Are there places out there that want that kind of breadth and I'm just not finding them?  I'm starting to go deep on rails to get past this, but if there's a segment of the job market that values breadth I'd appreciate pointers.",1596513459.0,2020-08-03 23:57:39
693,Developer to SRE?,23,gvu9wr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gvu9wr/developer_to_sre/,14,"or SWE to SRE, however one wants to think of it... I've been a developer for over a decade.  Recently switched stacks, hoping for some new interesting work.  Turns out I'm feature-monkeying more of the same, just with different syntax.  Most development(at least at the Enterprise shops) feels like a lot of framework stitching.  It's honestly boring me to death, even when there is enough work to stay busy...

Recently there has been opportunities to switch to an SRE role.  This isn't FAANG, so it's still kind of trying to be figured out.  Although it sounds interesting, and I could potentially learn some new things, have some new challenges.  My issue at the moment is mostly that I do still enjoy slinging code and don't want to give it up.  Although I do like automation, and devopsy type stuff.  I've put together CI/CD pipelines in the past and had fun doing it.  

I guess I'm trying to gauge what the community thinks about the SRE role?  Has anyone spent a lot of time as a developer then flipped to SRE?  There's a lot of unknowns with this role it seems like, but potentially a good future for it.",1591220974.0,2020-06-03 17:49:34
694,Best way to deal with a coworker that likes to offload shit on me,23,gsgcn8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gsgcn8/best_way_to_deal_with_a_coworker_that_likes_to/,16,"I work on a multidisciplinary team, and we have some serious deadlines coming. I have one coworker, who multiple people have complained to me about, so I know it isnt just me. He is one of our engineers that is supposed to do modelling. Something I am not good at, and am supposed to at best have a semi working knowledge of, but not really my area of expertise. Now, me being a mid level dev, jump at every chance to learn new things, even stuff out of my field, because there is serious value in knowing what others do just for the ability to interface with them well, and understand what they know, mean etc. 

This PIA has basically started to take advantage of it. It appears his general philosophy is ""the last person to touch the thing fixes it"". Which makes some degree of sense....until you use that rule to pass obviously broken shit (like won't pass a basic positive path test) onto someone, and then claim ""you tested it you fix it because you touched it last"". He also refuses to adapt, always adding extra work. He tests on his own work rig, which is different from the systems everyone else is using on the team which means every 'working' thing he passes me has to get new paths, shit doesn't work out of the box because he used a different version of XYZ etc. You can get him to fix it if you call him out on every little thing, but if you don't specifically call out the problem (and instead just say ""it doesn't work on production systems, and I get the following error"" (like I basically need to debug everything for him), it's like a 50/50 on weather he will do things at all, and if he does who the hell knows when he will get things done. Which leads me back to deadlines. In the end we have deadlines to meet, and everyone knows I get stuck with this shit, but in the end the ball has to keep rolling, so I basically have to do this shit, to the point where my manager basically asked me to ride along with this guy while he does stuff so we don't have a single point failure (him). On one hand I am learning new things, on the other hand it infuriates me that I am enabling this PIA skate on my back while I have 2 more projects with more deadlines going on. Management seems to kind of get the problem, but then also see me as the solution because I am the next in the assembly line so to speak. Got any advice other than just weather the storm and avoid this guy in the future?",1590733747.0,2020-05-29 02:29:07
695,What is the best project management software to manage design/requirements?,26,fv85ab,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fv85ab/what_is_the_best_project_management_software_to/,43,"I want to be able to visualize requirements and dependencies, maybe even the ability to link requirements to design elements (via ID tags). I've seen Trello/JIRA and maybe I'm clicking on the wrong view, but they just don't seem technical enough. They look like electronic walls with post-it notes on them. I'd like to be able work with UML diagrams, sequence diagrams, etc and manage requirements.",1586091072.0,2020-04-05 08:51:12
696,Best laundry list of technologies to pick up for full stack these days?,22,fr66df,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fr66df/best_laundry_list_of_technologies_to_pick_up_for/,67,"Kind of wondering about this since I've been stuck working in a legacy project for a while.  They were still using nHibernate with the HBM.xml files with code meant to work on a cellular modem.  Albeit, I managed to drag the project kicking and screaming into the world of Fluent with jQuery 3.x.  Another colleague of mine got bootstrap going for styles and controls.

I've seen React and Angular show up a ton, and I'm not exactly sure about Angular since I'm kind of nervous given it's history.  Namely, it is one of the few ones that went through a rewrite and the performance of angular when I tried it originally was horrible.

FYI I've been stuck in microsoft stack for a while with SQL Server and [ASP.NET](https://ASP.NET) MVC.  ",1585518720.0,2020-03-29 17:52:00
697,How to get the most out of manager one on ones?,23,ezb6r9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ezb6r9/how_to_get_the_most_out_of_manager_one_on_ones/,4,I've worked as a contractor for a long time and recently switched to a full time role as a Frontend Engineer at a medium sized company. Every other week I have 1:1 meetings with my manager that I report to. What advice do you have for me or other mid-level engineers on how to get the most out of these meetings?,1580945362.0,2020-02-05 18:29:22
698,Laid off recently. Thinking of doing some freelance work to pad the bank account while I'm unemployed so I don't have to jump at the first decent job that comes along. Any advice for me?,24,drmjcf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/drmjcf/laid_off_recently_thinking_of_doing_some/,14,"12+ years experience, lately in React / JS / AWS stuff. I've got a lot of recruiting contacts but I'm worried things will slow down with the holidays coming up. I also have a geographic complication: most jobs are on the other side of town and involve a crappy commute that I'd prefer to avoid. With that in mind I'd prefer to pick the right position instead of the position that my bank account dictates.

Unemployment doesn't cover my bills. My savings is fine but I'd prefer not to use it. 

I need to work to keep my brain sharp. Making some money at the same time would be ideal.

Toptal sounds like hot garbage, so that's out. Any other sites that are helpful? I'm thinking of just posting on Craigslist :/",1572923930.0,2019-11-04 22:18:50
699,Career path change from Mobile Engineering,24,dmopkn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dmopkn/career_path_change_from_mobile_engineering/,18,"For those of you who had been doing mobile application development -- Android, iOS, or otherwise -- for quite some time and decided upon switching to different career path (but still within the realm of software engineering): What do you do now? What factors led you to make such a decision?",1571987950.0,2019-10-25 03:19:10
700,"Tackling STAR method questions - what if the R(esult) is basically just ""the client liked it, no questions asked""?",24,d8c5oh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d8c5oh/tackling_star_method_questions_what_if_the_result/,4,"That's actually what of the results of most of my tasks look like for me TBH. It didn't seem to matter if it improved performance or did better than whatever something replaced it, because the company doesn't keep track of that stuff. No A/B test comparisons or no before/after test cases. In some cases it was a project that had no precedent for the client and so they didn't tell us how much money we saved them or whatnot. The manager just tells us that the project is complete, we get paid, and it's on to the next project. Anyone else's results feel this unfulfilling to talk about when using the STAR method? Is this lack of transparency from management normal? What if I have to answer STAR questions for a job dating back a few years where it's impossible to contact someone at the old company like ""hey I hope your remember me, I want to ask what were the results of my contribution for X project in 2016."" Do I need to fluff this stuff if that happens?",1569298285.0,2019-09-24 00:11:25
701,The future of ML/AI?,26,d5helv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d5helv/the_future_of_mlai/,8,"Hypothesis: Machine Learning/Artificial Intelligence will eventually be as common as database programming is now.

In the ""good ole days"", *if* you had a database at your org, you had dedicated database developers.  Not just anyone could use it.  It was a specialized field.  But, with advancements in db technologies (the software being more robust, the API's being more user friendly, etc.), now it's common for any developer to write code that uses a db.  But, the role of DBA has not gone away (yet).  There is still room for specialization around databases - someone who knows how to get the absolute best performance out of them.  And, there are still developers that specialize on writing the database servers, because that really does require specialized knowledge.

I think that ML/AI is moving in that direction.  It used to be that only PhD's would even consider looking at an ML/AI system.  But with libraries like Scikit Learn, PyTorch and Keras/TF, adding ML/AI capabilities to your app are actually pretty easy.  And getting easier every day.  I suspect that in 5-10 years using ML/AI will be a normal part of development.  But there will still be room for data scientist to create/refine models.  But creating basic models will become a common developer task.  And putting them into production (whether created by a developer or a data scientist) will be common place too.

And like those that work on the database servers, those that advance ML/AI tools/libraries will also be a specialization that sticks around for a long time.

&nbsp;

*If* that's true, what does that mean for those working in the ML/AI space?

&nbsp;

Thoughts?  Am I missing something that makes ML/AI ""special""?",1568757608.0,2019-09-17 18:00:08
702,Managers / Directors / and Above roles ... managing stack that you are not familiar with,24,d3jwgk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d3jwgk/managers_directors_and_above_roles_managing_stack/,7,"Looking for inputs for people who have ascended the managerial ladder and go to managers / directors / VP / etc roles where you are managing a group of people (whether direct report / indirect report) that work with tech stack that you are not familiar with (at all?)

Let say throughout your career you've been a ""Full Stack Developer"" - so you know your back-end, may be in Java or .Net, and your front-end in JavaScript.

As time progress, you move on (probably moving jobs too) to lead and then managerial roles and now you end up overseeing one or more team on tech stacks that you have no clue about. Let say now you are overseeing team that runs on RoR/Node/Python, a Front End team with Angular/React, and mobile team on Android and iOS.

What do you do to make sure you are still technically competent in the eyes of your team?

Are there specific resources you learn from to have the high level understanding? or do you actually learn coding on those new languages/frameworks again just like if you were to be a hands-on developer?",1568377032.0,2019-09-13 08:17:12
703,Past jobs have created financial pressure. How do you job search with that pressure without falling right back into the same types of jobs?,26,d1hevs,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d1hevs/past_jobs_have_created_financial_pressure_how_do/,11,"I have years of exp in web development and a few months in game dev. Been doing software dev for 10 years all at very small companies. Despite these companies having 20 or fewer people I still didn't do any major accomplishments for the company. I still felt like just a number. 

I've specialized in the LAMP stack, and added more to it. MVC frameworks, JS, a little MongoDB, Ruby, and React. Also, jQuery and some older CMS as well. Other interests/skills included C# programming for games, parallel computing in GPUs. So in addition to event based programs frequently found in the web, I also understand how ""real-time"" programs work and timing their execution rate. I did a bunch of small C++ game and PHP web projects as early as the mid-2000's.

But right now I look back and feel like my career was pretty crap. All my jobs are permatemp, all pay low and they lay off often. I frequently go between working as a 1099 contractor, ending contract before I could get another job, racking up debt while unemployed, and paying the debt with the next job. Some of these debts are caused by tax audits because in three separate years IRS claimed that my deductions weren't correct.

I've had a few recruiters contact me about jobs but the never produced any offers. I tried Hired.com seems like they are just now an average recruiting firm for average companies in the West Coast that just have a marketing department to make their company look ""shiny"".

What I don't want to have happen is to cave into the very first offer I get indiscriminately. I have financial concerns that force me to find work right now. I do not want to repeat my previous steps.

 I don't simply want to take another low paying job to use as a ""stepping stones"". The taking of low ball offers has to come to a full stop, not later, but now. How do you apply to jobs under this kind of pressure without falling into desperation bait?

Right now I have good technical experience for someone that has been doing the same sort of things since I have worked my first job. I am not a senior level but an ""advanced junior"" if that makes any sense.",1568007717.0,2019-09-09 01:41:57
704,Do you/ they contact the provided references?,25,cs03jd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cs03jd/do_you_they_contact_the_provided_references/,11,"I'm serious here; I don't.

Why? As someone who's hiring, ***I know*** I'm going to get a ***'glowing' response*** from the references so what's the point? And as an applicant, I hate the fact that I'm giving away my references' details (e.g. phone number) and I've no idea where or how they stored it in their 'system'.

Also, you want to check where I worked before? My prior payslips or tax return can show you that; more than happy to provide a ***heavily redacted copy*** of them to ""prove"" my employment with X, Y and Z. So ... I don't see why you need to contact someone for that? : /

What do you guys think?",1566156551.0,2019-08-18 15:29:11
705,Remote team management,23,cp3gai,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cp3gai/remote_team_management/,21,"I've noticed with my team that whilst everything goes well when people are in the office things tend to break down when people are working remotely.

Sometimes people won't follow the ticket priority, will work on things which aren't in the backlog at all, give take scrum updates saying everything is on track when it isn't and refuse to do certain meetings until they are back in the office.

Are there any resources specifically about managing remote teams that you would recommend? I aim to move soon and work remotely most of the time so it's very important that I fix this issue.",1565591439.0,2019-08-12 02:30:39
706,Second Onsite Same Company??,24,colcgt,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/colcgt/second_onsite_same_company/,15,"Hey All,

I'm struggling with a situation and would like other peoples input on it. I've been searching for a job and recently interviewed onsite with a company that I was extremely impressed with. Beautiful office, interesting product, smart and knowledgeable interviewers. The place seemed great!

But then I get an email from them, basically along the lines of we are extremely impressed with you! Yes, so I got the job right? No, they want to do another round of onsite interviews, being pitched as meet the managers of different teams and see where I would be a fit. I definitely get the value of team matching, but my understanding is its usually done after an offer is tendered. I'm hesitant to invest another full day of interviews with a company with no guarantee of an offer. Am I being unreasonable here? I really enjoyed the company and it seems like an awesome place to work, but definitely on the fence about this. Has anyone ever dealt with a similar situation?

Thanks!

EDIT:

Thanks for the feedback. I should clarify that the format of this interview won't be the same as the first one. It will be meeting with managers of the teams to assess fit on their team. Not standard leetcode or architecture questions. Sounds like this is a more common practice than I though. Historically I've worked at companies with less than 100 devs, so could just be a larger company thing.",1565488863.0,2019-08-10 22:01:03
707,LinkedIn Premium,24,ciqxsw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ciqxsw/linkedin_premium/,17,"I am casually looking for Engineering Manager positions on LinkedIn and figured best way to go about it will be to scan people who work at these companies and reach out to them. However, looks like, LinkedIn has gotten more strict with limits on free queries (not messaging but just searching for who works there).

Anyways, I don't mind getting LinkedIn Premium, but here is my dilemma. I have been at my current company for 5+ years and have never bothered updating my LI profile. I have a highly visible role, and a premium account with up to date LI profile will probably spook my team, and I don't want them to panic. I know the best thing to do is always keep your LI updated (which is what I intend to do in future). Have you guys had similar experience? Thoughts?

May be I am overthinking this :)",1564312697.0,2019-07-28 07:18:17
708,How do Big N interviewers decide what to ask a candidate,23,brh17m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/brh17m/how_do_big_n_interviewers_decide_what_to_ask_a/,15,"So, the Big N interviews are known to be in-depth and intensive. 

As an interviewer, how do they decide what is appropriate to ask, and do the interviewers spend considerable time themselves going thru potential solutions for the problems?

E.g: if interviewer is interviewing a manager candidate, how do they decide what type of coding question to ask ?",1558507556.0,2019-05-22 02:45:56
709,What are some good references for learning UI/UX design?,26,bqixyu,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bqixyu/what_are_some_good_references_for_learning_uiux/,6,"I am technically a ""full stack"" developer because I handle everything from table design to UI design, however the UI work is done in Windows Forms. While the company I work for does have some UI standards in place involving colors, button sizing, etc., it's not what I assume the market has in mind when full stack developer is mentioned on a job posting. I've created iOS apps in the past and I'm familiar with Apple's UI/UX standards, and similarly I'm learning the Angular framework now and I'm familiar with Google's material design documents.

&#x200B;

When designing applications are the documents provided by the platform/framework typically the best? On top of that, are there specific books, sites, etc. that you find useful for UI and/or UX design?",1558312556.0,2019-05-19 20:35:56
710,"What, if any, is the risk of going into management too early?",25,b8mg81,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b8mg81/what_if_any_is_the_risk_of_going_into_management/,25,"I have been working as a dev for about 1 year and things are going well so much that my company is including me in some more product management/marketing/leadership discussions.

Now I'm obviously still junior in engineering skills and I am concerned there is a risk of stagnating by switching to a non-coding role so early. If I get into management with 1 YOE as a dev and then multiple years as a manager allow me to move companies or will I be stuck here. 

I like the company and definitely want to end up in management just wondering if I should push back and get more dev experience first.",1554256001.0,2019-04-02 21:46:41
711,Requesting advice on interviewing someone to be your senior or manager,23,b8fnv1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b8fnv1/requesting_advice_on_interviewing_someone_to_be/,6,"Over the last 4 years as a ""full-stack"", front-end focused dev I've been very fortunate to have engineering managers who are supportive, intelligent, fair, and well.. generally awesome. I've interviewed people who are meant to be my junior, but I have yet to interview someone who is supposed to be my senior. It feels weird to test someone who is supposed to be much more experienced than I am, granted there will be a senior developer and others from another department to help my team. My team consists of a few mid-level engineers. This hire is expected to do 60% managerial work and 40% development. 

So far I lean more towards gauging whether candidates resemble what I liked in my former bosses. Here's a sampling of what I appreciate:

* constructive feedback in code reviews and meetings
* vested in career growth of team
* understands business context of a project
* good planning; gives reasonable estimates; lists risks for potential delays
* prevents ~~bullshit~~ scope creep from stakeholders
* understanding of a given architecture and its impact
* general engineering maturity

General or specific advice appreciated!

For reference, our standard interview process involves 1-2 rounds of technical questions, 1 round of less-technical higher-level questions, 1 personality-test interview that includes non-devs, and lunch (a different kind of personality test).

Also, if you've been hired as a senior engineer or manager, what's it like being onboarded into a team with people junior to you? Was the new team a good/bad fit?",1554216700.0,2019-04-02 10:51:40
712,What did you wish you knew before becoming a tech lead?,24,80g225,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/80g225/what_did_you_wish_you_knew_before_becoming_a_tech/,7,"So in my latest one on one, I was told I was under consideration to become a lead when a position opens up, if I was up for it (I am).  In our company, there is generally one tech lead per team, and they're responsible for essentially making sure that the team's productivity remains high, removing blockers, and generally being responsible for the team's high level mission.  Basically, when they spin up a new team (probably in the near future), I'm on the list to possibly lead it.

I have been a senior developer for a long time but haven't really had anyone reporting to me.  Technically, the team doesn't report to the tech lead here either (every developer reports to the director of engineering).  Tech leads are responsible for cross-team discussions and cross-cutting concerns across our tech stack.

For those who have made the jump into management (or ""soft"" management, as it would seem to be here), what did you wish you'd known before you made the move?",1519704736.0,2018-02-26 23:12:16
713,Is it necessary to stay in the bay area to maximize net worth?,23,k9xyeg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k9xyeg/is_it_necessary_to_stay_in_the_bay_area_to/,70,"My goal is to maximize my net worth between my wife and I in the long run, as in 30 years from now. What I want to know is do I need to stay in the Bay Area to do that or can we live outside the bag area? I’m asking devs because I’m concerned about how living in a city away from headquarters will affect my career. And not just away from headquarters but working remotely. I’m a SWE and my wife is a product manager. So her career needs to be considered too. 

My fear is that if we live away from the Bay Area, our careers won’t grow as much and although we will save money on COL, perhaps that savings is outweighed by the lack of career growth or salary growth. 

I make $180K a year she makes $220K a year. Our salaries are from the bay area but right now we’re in a temporary covid period where we live in a LCOL area but keep the same salaries. This will last until July. My original plan was to go back to the Bay Area when offices open up so our careers will still grow. 

I suppose another middle ground is that we could live in a MCOL area like Austin since there’s also plenty of tech jobs there. 

I just don’t know how to do the calculus on this. My primary concern is maximizing our long term net worth and I think the growth in our careers will be the primary factor deciding it. 

One last key variable is that we our currently childless, but in two years we will start having children and we want three kids. This is why I’m more weary of moving back to the Bay Area because the cost of extra living space and day care is so huge.

Sorry if this is the wrong forum for this. Wasn’t sure if this was more appropriate here or in FatFIRE.",1607568765.0,2020-12-09 21:52:45
714,Changing specialty as a mid-level or senior engineer,23,k9hxri,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k9hxri/changing_specialty_as_a_midlevel_or_senior/,9,"Does anyone have advice on how to approach changing specialty as a mid-level engineer (3-6+ yoe)? By specialty, I mean categories like mobile, web dev, API, systems/low-level programming, data pipelines, desktop application.

In interviews when I was a new grad, I talked about my interest and drive in learning the technologies on the hiring manager's team and that seemed to work well. Now, I want to try a new specialty but I have zero experience with the targeted specialty. Specifically, I'm targeting backend-ish API jobs.

Would I have to take a downlevel?

Do I need personal projects of the new specialty on my resume to make myself marketable?

How do I sell myself in the interview with the manager of the team who seems to expect some experience? Should I avoid speaking about my interest in the tech stack and instead talk about my interest in the product and the problems that the team is solving?",1607506201.0,2020-12-09 04:30:01
715,How do you tell if a job is a dead end job?,24,iqe6xe,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iqe6xe/how_do_you_tell_if_a_job_is_a_dead_end_job/,19,"I've been trying to evaluate a situation with a workplace my friend is working at.  He went to the interview, the guy showed him a road map that looked like they planned on upgrading this old webform site to a .net core backend with react front end, but after working there for a year he's mostly been getting put to work on maintaining the webform site.  It's not like they don't have work put into the newer stuff, but he seems kind of stuck on this thing.

It feels like a waste since he's pretty good at learning the newer technologies and was doing plenty of pet projects.  ",1599806769.0,2020-09-11 02:46:09
716,How does your team run/handle/organize code reviews?,22,instur,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/instur/how_does_your_team_runhandleorganize_code_reviews/,15,"Hi guys, code review is quickly turning into disorganized chaos on my team and I'm looking to understand how other teams handle their code review. Any input is appreciated!

The summary of how we're operating now:

\- 7 members on our team (2 week sprints implementing new features with 4 devs; bug fixes & small features with 3 devs)

\- Each team is led by a senior dev (our only two senior devs on the team)

\- 7-10 new small PRs are submitted every day along with fixes to previous PRs (productive team!)

\- Our lead requires that every PR has at least 2 approvals before being merged, and one of those approvals has to come from one of the non-senior devs (so EVERYONE code reviews)

There is no real system to getting code review done. It's usually just blasting out on Slack, ""Hey, this huge list of tickets needs to go out for release today. Can I get some eyes on them?"" And then all the devs quickly approve the tickets without too much actual comments/feedback.

It's extremely hard to stay on top of and this feels intuitively inefficient but it's also the first real team I've been on so I don't know how other teams organize their code reviews.

Thanks for any insight you've got!",1599451223.0,2020-09-07 00:00:23
717,How do I leave a job without burning bridges?,21,iku4fl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iku4fl/how_do_i_leave_a_job_without_burning_bridges/,18,"Dev with ~7 years experience. I started at my last job right out of undergrad. After ~2 years, I got a job offer at a more prestigious firm, for double the salary, developing with a more modern stack. I was never super close with my boss at that firm, but he was kind enough to me whenever we crossed paths. When one day I told him I'll be leaving in 2 weeks, he started being very short with me. No active or passive aggression, he was just being short. Ignoring me in the hallways, ignoring me while I'm in the room, ignoring me in meetings where I was supposed to do knowledge transfer. I'm not complaining about it, people handle conflicts and challenges differently, but I was bummed out that he did not want to remain on good terms, it felt like I had burned a bridge.

At my current job, I've been at it for ~4 years. It's been great, No complains about it, love my team, love my job, good pay, good benefits. But I've been contemplating changing jobs because my career has plateaued. I need more senior responsibilities, so I wanted to look around for a team lead / project manager jobs. I've been passively looking for about 1 year now. About 2 months ago, my boss told me something that stuck with me - he said that if I was to leave the company, he won't give me a reference letter for any future job and will make my last 2 weeks miserable. And I know my boss enough to know that he wasn't messing around.

Besides that, I've not had a single bad interaction with a coworker or my boss - I've actually grown a personal relationship with them, whereas our families have dinner together once every 2-3 months. It's been a huge pleasure working with them all, and I didn't really want to leave until this fiasco. The problem is that I do have a lot of free time, and I enjoy my work to a point where I don't really mind working extra. This has, as far as I can tell, turned me into someone he doesn't want to lose at any cost. Realistically, I wanted to be a good, reliable contributor to the team, which I assumed would make my coworkers and manager give me a good reference letter upon leaving the company. 

I'm left with a bitter taste in my mouth. This seriously rubbed me the wrong way on so many levels. I've always considered your manager to have your back and to want you to succeed, but it seems like I'm just a pawn here and he *doesn't* want me to succeed after all. What can I do here? How do I leave without burning bridges? Are all managers like this? Shouldn't managers expect employee turnover and handle it gracefully? Seriously, what the fuck, man.",1599026958.0,2020-09-02 02:09:18
718,New job raising red flags,24,hx9171,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hx9171/new_job_raising_red_flags/,29,"Background: I've been working at small companies and startups for several years. I've made a lot of progress in finding teams that are ambitious, conscientious, and relatively highly performing. I've grown a lot and I want to keep heading in this direction.

But I got laid off recently, and the new job I found at an older medium-sized company is seeming increasingly problematic:

* The pace just seems really slow, to the point of dysfunction. It's sedate. Feels like everyone is just coasting.
* Code reviews take days/weeks and there seem to be a lot of no-comment rubber stamps. There are a lot of stale PRs sitting around from 2019.
* There's the one know-it-all guy on the team who seems to enjoy lecturing everyone, but doesn't listen well, and is often answering the wrong question. But he's hard to stop once he gets going. Other people seem to just quietly listen to him or maybe they're ignoring him? I've also heard people refer to him with a twinge of dread, like ""Joe won't like this in code review..."". It seems like he enjoys being indispensable (i.e. a resource constraint - not a good thing).
* The dev team hardly talks on Slack. Or talk in general. Standups and retrospectives are awkwardly silent much of the time. Seems like most people just don't give a shit about improving the engineering culture. I'm sure some are good engineers, but if they are, they must be following the prevailing culture and keeping to themselves.
* My manager/lead dev isn't involved in any of my projects and seems out of his element during 1-on-1s. Can't answer questions with much depth. Seems like he just wound up in his position and isn't motivated to excel at it.
* My skip level manager is joyless and quiet. When I bring up questions or suggestions about improving processes, he seems receptive, but it doesn't go anywhere.
* There is an overall lack of technical leadership. The engineering team is siloed into small teams and they don't seem to have clear direction or culture shared between them.
* Many team members have been there for 10-20 years, which is neither good or bad on the face of it (I think), but some exhibit scary deficits for being that far into their career -- the old ""1 year of experience 20 times"" thing.

In short, I think it might be the dead sea effect, where they don't fire poor performers, and high performers are consequently driven away.

I guess I'm not even sure what to ask here, but any advice would be appreciated. I'm starting to very casually look for other jobs, but I also am trying to have a positive impact on the team while I'm here. The reception is pretty tepid, so I'm in this awkward place of trying to improve things while having a pretty strong feeling that I'm squeezing blood from a stone.",1595650093.0,2020-07-25 00:08:13
719,How to switch to a non dev technical roles without any experience?,23,gygio8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gygio8/how_to_switch_to_a_non_dev_technical_roles/,13,"Hey, was looking for some advice from those of you that are more experienced as developers. Im an intermediate developer with about 3 years of experience thats looking to move on from being a developer. As interesting as I find development, i think my skill set is much better suited towards something more along product management or technical sales. I do not however know how to tranistion into a role like this. Ideally i would transition into this role internally but I currently work at a very small startup that needs every developer they can afford so thats not possible. For those of you who have made the switch or know someone who has, what would be the best way to transition into one of these roles? Am i out of luck applying directly to these roles or would it be better to apply to a larger company as a dev and then transition over time? thanks",1591579832.0,2020-06-07 21:30:32
720,"I've read around here before that Macs have such a ""better development environment"", why?",22,fgn7w8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fgn7w8/ive_read_around_here_before_that_macs_have_such_a/,40,"I'll be starting at a new company and I have the choice between a PC and Mac.  I've always enjoyed windows, but never having developed on a mac, why do some claim the development experience to be superior? 
This coming from an Angular/.Net dev",1583911144.0,2020-03-11 03:19:04
721,Any tips to try to improve my workplace?,25,f3q4lh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f3q4lh/any_tips_to_try_to_improve_my_workplace/,10,"Hi everyone,

Throwaway here.

I'm a mid-level, self-taught 30-years-old developer in a southern European country. After some freelancing, i landed a nice job with a good salary (not exceptional, just above average for my experience).

The team I'm in is quite small (5 guys total). We're not a software-focused company. We sell devices in a niche market, which is the main focus of the company, and also release software to connect to those devices.

When I started, two years ago, I had a very small experience, but i caught up, and within only a couple of months I became the most skilled developer, or at least the one with more knowledge about the frameworks and languages we use in our main software.

That should have been the first red flag, but I regard it as yellowish, since my colleagues are all 50+ years old, and a bit slow to adapt.

Since then, I realized there was no mentor, no senior developer that could help me improve. Still, I became an avid reader, and had since been reading articles, books, news, whatever could help me learn.

But the more I read, the more I learnt, the more I reallized how sloppy, inefficient and ancient methods our department is using. Although we quite catch up with the new technologies, I had to fight a bit to introduce a source control system, and there's still a guy in the team who refuses to learn and use it (our project manager aknowledged it, but nothing more). We have no unit tests, at all, and believe me, we really should in our field.

Things in general go really slow. Last year I was by far the most productive member of the team, and they sort of slowed down even more, knowing I would be there to help with the deadlines.

I tried to suggest more changes, code reviews (the guy who refused to use source control writes terrible, buggy code...) and all, but it's really hard. I'm by far the youngest, the last guy to arrive, and people here just seem to be content with their job and their rhytms.

Another issue is that, since I became the most productive guy, most of our main product is made by me. They didn't really try to read my code and understand how I built the whole architecture. Their only comment, when they once tried to change something and they couldn't, was that I made it all too complicated. I'm not saying it's false. There was a period when I tended to overengineer stuff, but then some readings made me realize my mistake and I changed. But even now, they just keep repeating ""too complicated"" after 5 seconds of trying to read my code. Not a single effort to understand why I did what I did.

I really like my team mates. They all are chill guys, we chat a lot, get along well. But I feel I'm becoming like them, slowing down intentionally because there's no incentive to be efficient. I don't know if I'll be able to change this environment, they don't seem too receptive since the day they became convinced I write too complicated code. But I want to try at least, before leaving for good. Do you guys have any tips to help me change the workflow?

Sorry for the long post by the way!",1581703363.0,2020-02-14 13:02:43
722,"How do you deal with team members that need ""hand holding"" ?",21,f2jf5l,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f2jf5l/how_do_you_deal_with_team_members_that_need_hand/,26,"I am an average developer in my team (not a senior), and I normally spend a good portion of my time (both in the office and outside) learning new patterns/technologies in order to do well at my job.  This generally increases when we are dealing with brand-new technologies, and it is generally time-consuming. This is not a problem for me because it helps me to perform well and I enjoy doing it.

At the same time, there are many team members that don't show signs of passion or interest to learn quickly and adapt to the situations. They generally need extra hand holding and normally expect me to show them step by step how to do things. As you can understand, it took me a lot of effort to be able to understand things in order to be able to break it down and explain it to them.

This is extremely frustrating when there are tight deadlines to meet, and while I don't want them to be experts, I expect them to be able to do a quick Google search or to at least learn the basics on their own.

I don't want to be rude, but sometimes I tell them to ""please try to learn on their own"" or sometimes even something like ""did you check the documentation?"" to see if that can trigger their imagination/effort to learn, but that does not seem to work. More often than not they seem stuck and keep coming back to get the help after a couple of minutes.

Ideally, I would like to focus on other things rather than to train people that are supposed to collaborate and help me, but don't put the effort to even learn the basics.

&#x200B;

How do you deal with this, and what is the politically correct way to handle it?",1581501447.0,2020-02-12 04:57:27
723,Is there something I'm missing about documentation? My PMs seem to think it's something I don't want to do without knowing me at all.,24,ez02gn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ez02gn/is_there_something_im_missing_about_documentation/,13,"For background, I've been a dev for 5 years, and within the past 6 months, have transitioned to a solution architect.

For my entire career, I've been stressing the need for documentation, proper planning and testing, basically time to do things right.

The company I'm at is very fast paced. My team has not (until very recently with the change of management) had time to actually do any of the proper work. We basically had our entire operations systems fueled by tech debt, to the point where I became convinced this was just a strategy.

Now that I'm more heavily involved in planning and working out the details of larger projects, I have PMs asking me to document things, and stressing to me in a teaching tone the importance of it.

We're still in a fairly big rush after launching a massive overhaul, and I still need to do a ton of support work, along with working out details for many many projects that keep coming up. I have more time, but still not enough time unless I really manage my time perfectly (even then, it's difficult and my support has been dwindling).

When I'm asked to come up with documentation to explain ideas and concepts, I explain that I have not had time to get to it yet, but that it's on my list of things to do as I free up a bit.

Any time I mention this, the response is usually some kind of ""Yes, I know it's not a fun thing to do, but its important"", which always gets on my nerves because I've been the one complaining about the need for so long.

I literally do not have time! I *want* to do the documentation more than anything. I want to make sure everyone understands and can appropriately do their own work with the information. If I relax for 5 seconds  I get yelled at for not answering support tickets, or for not responding to questions. 

To be thought of as just being lazy and not doing the ""boring"" work is a massive slap to the face. Is this a common thing? Is there something I'm missing about how I should be going about this position?",1580890528.0,2020-02-05 03:15:28
724,How do you make building professional connections less tedious?,23,ej7tr6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ej7tr6/how_do_you_make_building_professional_connections/,22,"Over the years when I started working freelance a few years back, I will admit I have slowly become more asocial. I have gone out with my friends less and less. They're not really techies- they are people who can't tell the differences between CS and IT jobs and if I hand them my resume they won't know how to forward me a more focused job other than some IT tech support or helpdesk job (it has actually happened more than once).

If it were up to me, I would focus on learning more tech/coding all day but I don't have the luxury to do that for months without a job and without much money in the bank. It's not sustainable and I'm trying my damndest to get back into a full-time job.

I actually find the networking part to be the least fun thing about this career. It's hard for me to get interested in building deeper relationships with colleagues *even though I know it is very important for me.* Generally speaking, I get most of my freelance jobs through referrals I have from former jobs and local user groups, but they are not high quality leads. For example, one of them is a former co-worker that now works for Magento (now owned by Adobe) and once in a blue moon he forwards me an email from a client that is looking for a Magento programmer. I haven't used Magento in 8 years so I don't know why he expects me to take that kind of work. And I also think CMS development like Magento pigeonholes you too much for my tastes.

Another one I met at a local meetup years ago. He now works at a FAANG company and I thought he was pretty cool as we shared similar interests into graphics programming. He now has a job working computer vision although he has a MS degree in CS and I have a non-CS bachelor's degree. I asked him if he can refer me to his manager for a possible job at the FAANG but he seemed too paranoid to do that. He doesn't reply to my messages anymore.

I need to build higher quality relationships even while I'm currently unemployed. So at the start of the new year I started looking up local tech meetups again. I will start filtering out the downtown meetups (of which there are many) and focus on ones where I can easily drive to and park at.

Overall though, the prospect of building relationships with new peple feels too much of a grind this way when you're also looking for work. As one saying goes it's easier to hunt for sport than to hunt for survival. But how do you guys manage to hunt for survival when it's an absolute necessity?

----

For some added context, I live in Chicago and there are many jobs in the Chicago area. The market here is, though, a little weird. If you're not into financial/trade companies you're left mostly with smaller web shops and consultancies. Most companies that worked on other stacks wouldn't even bother with you if you don't have work experience in them. For those reasons I'd like to leave this area if possible.",1578043261.0,2020-01-03 04:21:01
725,"In what ways is developing for AWS, Azure, GCP different from other software development?",23,eds513,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eds513/in_what_ways_is_developing_for_aws_azure_gcp/,16,"I'm coming from a mostly full-stack web development background into a FAANG job working as an engineer for their cloud platform (ie working on AWS Lambda org at Amazon).

This seems entirely different from the development I am used to doing, and I am curious how this is different. What makes this challenging to look for is that you typically will just be able to find information from the customers' perspective (an SWE at a startup hosting their web app on AWS), rather than the actual developers in these positions.

How is development different from what you've experienced in the past? What challenges come up the most?",1576975817.0,2019-12-21 19:50:17
726,Who still ask for feedback after a failed interview?,23,ds9e5q,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ds9e5q/who_still_ask_for_feedback_after_a_failed/,18,I still ask if I remember to do so.,1573034221.0,2019-11-06 04:57:01
727,Did you take time off from work to work on your own projects? How did that go?,25,dnqyi3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dnqyi3/did_you_take_time_off_from_work_to_work_on_your/,6,"Has anyone here taken time off work to work on your own projects? I've recently taken a month off and found it very productive. I'd be interested to take a year off in the future to work on something - it'd definitely be expensive (in terms of cost plus lost earnings), but also you'd maybe come out of it with an independent product, or some kind of deep understanding of a niche domain area.

If you did this, did you have a project in mind before you took off? How did it all go? Do you regret it?",1572196129.0,2019-10-27 13:08:49
728,New Sr. developer getting overwhelmed - how to be tactful without sounding piss,24,czk9yt,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/czk9yt/new_sr_developer_getting_overwhelmed_how_to_be/,32,"We just got ourselves a new Sr. developer; he's in for 2 weeks now and I noticed that whilst he is doing X tasks that needed to be finished with a 2 week sprint, he's also given other tasks. One of the tasks that he is given is using a tool that he hasn't used, according to him, ""in ages"". The following conversation occured:

**Senior**: ""*when would you need me to complete that; I haven't used that tool in ages*""

**Lead**: ""*tomorrow, okay?*""

**Senior**: ""*what!?*""

**Lead**: ""*oh, I'm sure you can get up to speed with it?*""

I felt uneasy and a bit bad for the new guy ... the ""*what!?*"" part left me worried for myself (since I'm also planning to get a new job).

I'm gonna be frank here; I really don't know the best way to deal with such situation, tactfully or diplomatically without **sounding I'm getting pissed**; and I'd be worrying that I may as well flunk my probationary period : /

To the senior developers, what would be the most tactful or diplomatical way to manage situations like these (in particular when the tool or, say, ""strategy"" is known by the developer but he or she hasn't used/ applied them for some time or needing time to apply to the given situation)? 

Now, I understand the developer can just push the tasks politely, but sometimes in the heat of the moment, shit happens and you'd unconsciously say things you don't want to say. So what I'm trying to get from this thread is some framework, strategy or anything that can help me to stay out of trouble during the probationary period : (",1567629380.0,2019-09-04 16:36:20
729,Giving advice to co-op - anything you'd add?,24,cr59d2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cr59d2/giving_advice_to_coop_anything_youd_add/,4,"Our co-op is leaving soon and has asked me for some generaly advice about being career-ready, how to progress, etc..

This is what I have come up with so far, I was wondering if anyone has any other good advice, or anything you think is wrong about mine. Cheers!


Interviewing:

- Read cracking the coding interview
- Treat the interview and the job as separate things, there is the stuff you need to know for the interview and the stuff you need to know for the job.
- Just because you're missing something from the job spec doesn't mean you shouldn't apply: the job posting is often written by a recruiter/hr person that doesn't know what any of it means, or by a completely different team, so take it all with a pinch of salt.
- Interviewers are just people, and often just engineers dragged in at the last minute. they will much prefer someone who can communicate well than someone who is awkward, regardless of how well you answer the questions. Even if they should be hiring based on technical ability, it often comes down to 'do I like that guy', because they're choosing a person they have to work with.
- Depending on the interviewer, they may have just googled 'interview questions' before the interview, so bear in mind they might be looking for a specific answer not just something that solves the problem. there's not much you can do about it other than saying your method, and moving on.
- Ask questions, interviewers would rather hear your thinking and you not get the answer than you just give up.
- Don't be afraid to say you don't know, it avoids looking bad as you try and lie your way through, and means the interviewer can move on to another question that you might know, which makes you look better. If you can, use it as an opportunity to show things you do know: ""I'm not sure, but is it like ...""
- If there's something you're particularly passionate about, try and find a way to bring it up in the interview.
- Take notes in the interview, it seems to scare/impress interviewers a bit.
- Make sure you ask decent questions at the end, its a good way to show that you care about the company (' i read you do X, could you explain it a bit more?') or show a bit more personality.

 

On the job:

- Give yourself time to learn things before implementing them
    - Its easy to try and cut corners and hack at something until it almost works, but after a few failed attempted you'll wish you just took the time to understand what you're doing properly in the first place
- Timebox your learning and dont be afraid to ask questions ( as long as you've tried to find the answer first)
    - No one is expecting you to perform as a senior dev, asking for help is fine as long as you have done the groundwork
 
- Communication is important - sync up often, dont go off on your own for days/weeks at a time
- Things move fast, and ability to adapt is more important than knowing everything all the time. Don't try and remember things you can google.
   - Concepts are much more important than syntax
- Don't assume that more senior people know more than you, especially if its an area you've researched a lot.


Career:

- No one will ever give you time to learn, so you need to do it either on the job or at home.
- No one will ever care about your career, so think of each job's affect on your career not just on getting a job you can.
- You'll learn more in the first 6 months at a new job than the next year or so. Actively try and find new areas to learn or improve, rather than getting complacent doing the things you know how to do. 
- Avoid learning the company-specific elements. Avoid in-house software where possible, and focus on transferable skills.
 - Try and be aware of companies idiosyncrasies and avoid carrying them over to other jobs. If they're doing something wrong but you can't fix it, make sure you don't forget that it's wrong.
- Write yourself a 'full' CV, which includes every project you've done and the experience you've had, and add to it while you are working, so you don't forget what you've done, and so that you can easily condense it into curated CV specifically for a job you're applying for.
- Write down what you like about a job and what you don't like during the job, so you can remember what you're looking for when you want to find your next job.


Meetings:

- Don't be afraid to ask stupid questions
- Write down the things you don't know, don't understand, or cant remember

What to learn:

 - Be T shaped - have a good general knowledge, and then specific things you excel at
 - Learn from other peoples mistakes: read books on common concepts/design patterns so you don't end up reinventing them.

Learning resources:

  - subreddits - make a work reddit with only tech subreddits
  - stackoverflow - subscribe to topics you're interested in. Even in areas you think you know well you'll be surprised by the questions people ask
  - google forums
  - hacker news - skim it every day, turn on 'noprocast' if you find you're on it too much",1565984977.0,2019-08-16 15:49:37
730,Dev 4.5 YOE with no experience in management going into CTO in new small startup .,22,cqy92t,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cqy92t/dev_45_yoe_with_no_experience_in_management_going/,3,"Hey folks. I'm just joining a new startup as CTO. Now I'm  mostly a full-stack with other responsibilities like interviewing, managing a jr front, deciding backlog and team size. Basically for now I'm responsible for the whole technology  stack /decisions.

I would appreciate any suggestions about what I should read for start in management (I don't want to be full manager in long term, maybe a head of dev in future?), also good stuff about development, good podcasts, blogs, about good stacks decisions, prioritizing, security... 

Any suggestions are welcome. Thanks you so much =)",1565942259.0,2019-08-16 03:57:39
731,Have you negotiated your job title during a job offer?,23,cm8zo1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cm8zo1/have_you_negotiated_your_job_title_during_a_job/,23,"Suppose you've been in your field for some time, would the title like ""Senior"" or ""Principal"" be important to you? Say you're given the role of just ""Engineer"", ""Analyst"", etc., during a job offer - would you negotiate?

Any experience where this sort of title proves to be significant in your job journey?",1565027649.0,2019-08-05 13:54:09
732,"Does being a contractor for a long time ""freeze"" your place in your career?",23,cg83bw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cg83bw/does_being_a_contractor_for_a_long_time_freeze/,12,"I don't know if this is a strange predicament or if it's even uncommon at all, but from day 1 of working as a software developer I've mostly been a contractor of some kind. 

I've heard that you usually become a contractor when you become an expert in a given domain are expected to carry on with minimal guidance.. but not me, I was hired as an independent contractor since the beginning!

At that first job we were all working at the same office, albeit bringing our own laptops to do our work. I talked a lot with my co-workers and we went to lunch together almost daily. It was called a ""contract-to-hire"" but the full-time role never actualized. But, this was the time also I felt the most social at any job of my career. After I left a year and a half ago (company didn't have much work for me), I went to freelance for another web agency that probably doesn't exist anymore. This job felt much more lonely, I didn't really interact with any of the programmers because work was sectioned off very discretely.

Almost one year later, I left for the same reason- company ran out of steam with clients, no new work in the pipeline. The first company was interested in taking me back in, this time with a more consulting-focused role. I spent way more time directly talking to clients in addition to doing software programming work. Company owner helped handle some of the billing. This time I noticed many new workers, and many old ones gone. I was sometimes social but not as much as last time.

After two years I moved on to work for an early stage startup, again as a contractor, because the pay was slightly better, and consulting work had me on the bench too much. The work was 100% remote but the workload was way more consistent. I worked a steady 40 hrs every week. 

This place wasn't stressful or anything but being my first remote job it did feel very cold and distant. I was laid off after two years because the company was having problems lining up new customers. And I'm back to doing the freelancing thing while applying for full-time jobs. Now I'm confused. 

I did a ton of work for companies, but, even despite all these companies having fewer than 50 employees (some as few as 12), I never truly felt like a ""somebody"". Never heard much about my work directly helping or furthering the companies' business goals. Maybe because I was a contractor? Is that one of the downsides to being one?

This was even more apparent when I go in for an interview or ask to have my job history reviewed, because I couldn't explain to you exactly *how* it helped a company out, only could explain what the problem was and what I used/did to fix it.

On top of that I never had the whole onboarding/mentoring thing at any company so maybe I'm still a junior in experience? Was my career frozen in place because of all the contractor stuff I did? Just a hunch, because with all my work I feel like I was just being put inside a sandbox where I was doing things with little risk but also little reward or recognition. But I want to actually start my career ""for real"" now and and feel more like a team member.",1563795239.0,2019-07-22 07:33:59
733,Face to face interview - exhausting?,23,cebahm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cebahm/face_to_face_interview_exhausting/,23,"Devs, do you find F2F interviews exhausting ... ? I do : /

I went to a F2F interview with 5 development managers and I'm exhausted!

&#x200B;

Could someone offer my some advice on how to deal with multiple interviewers or it's common to feel exhausted after an interview even with just one interviewer?",1563389886.0,2019-07-17 14:58:06
734,Current career is going nowhere because I've done the same things for too long. I would like to have a more traditional CS-based career. But I also don't have a job. What type of job interview should I prepare for first?,24,cap8oh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cap8oh/current_career_is_going_nowhere_because_ive_done/,13,"I do bog standard LAMP stack dev with MV* frameworks, and sometimes JavaScript. My career jobs have paid poorly. I don't know how microservices work or anything cloud beyond calling some S3 bucket functions, nor how to work on a product that will scale to thousands or millions. 

The places that I worked at don't expect me as a developer to grow much. I'm just expected to open and close tickets, and to stop bugs, and I was scrambling to learn new overlaying tech when I realized how out of date I'm getting.

However, I did take a few CS classes as electives in school (not as a CS major though) but I haven't applied them since I graduated. For instance, I have understood Big O and some common data structures for over 10 years. But over that time I was just taking lower quality web ""engineering"" jobs and get rejected at anything better.

I spent a bit of time looking over https://teachyourselfcs.com and the way it groups up different types of engineers speaks to me. Career wise, I'm more of the ""type 2"" engineer that just has to focus on learning new stacks without doing any groundbreaking stuff with it.

So I'm still combing through the table of contents to see what I already know and what I need to learn next.

**Employment**

In the meantime I need to find a job. Not as a step up from a current job, but because I'm unemployed. This makes me more confused on how to prioritize things. I don't have anyone IRL to talk to about my career goals.

The local jobs don't really ask you Leetcode-style questions they just ask questions based on framework/stack knowledge. I have experience only as the type 2 engineer and yet I can't pass either interview as either a type 1 or type 2. That's why I feel so trapped. I am constantly swinging back and forth between learning CS topics and doing personal projects, and needing to find a job.

**Network**

My closer acquaintances on LinkedIn stopped replying to my messages about jobs. My IRL friends don't know much about my job because they work in other fields. Once in a blue moon I get a forwarded a job ad from them, with little context. It's typically some IT job that bears little resemblance to what I do. It's no different from getting recruiter spam.

Speaking of recruiters, they are hit or miss. Sometimes they lead to a phone interview but always pass up because they need someone with ""more experience"". Figures, though, they are sticklers when it comes to framework knowledge.

----

So what choice should be a higher priority for me? Practice interviewing for a short term stepping stone job doing the same stuff I'm tired of doing, or go for what I really want, doing more substantial work that benefits from real CS knowledge? Both seem equally hard to me. I want to make one of those relatively easier so I have a clearer decision in my mind.",1562640971.0,2019-07-08 22:56:11
735,Is printed resume still a thing for devs?,24,cak9t8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cak9t8/is_printed_resume_still_a_thing_for_devs/,23,"I was asked from company ABC to bring along my resume and professional certifications, printed.

My previous interview from company DEF didn't ask for one (and they simply look at my resume on the their laptops!). It actually didn't come to my mind as well as I assumed they can get the resume provided on PDF.

&#x200B;

Are printed resumes and certs still a thing these days devs?",1562616876.0,2019-07-08 16:14:36
736,Enforcing best practices and choosing your battles,24,by0dt7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/by0dt7/enforcing_best_practices_and_choosing_your_battles/,18,"Bit of quick background:

I've been at my current job for 11 months now, and current team for 6 months (not my choice, moved to a different team due to a reorg). I'm a mid level developer on my current team.

I've been a full stack developer with an emphasis on backend most of my short career (4 YOE now), but I got some brief React/Redux experience in the past so I was asked to be the React/Redux expert on this current team, even though I don't have much experience and end up having to be just a few steps ahead of my teammates to help guide them.

The issue is that I don't enjoy front end work, but my team clearly needs me to be the React/Redux expert. So whatever, I'll be what the team needs me to be.

As such, I spend some of my own personal time, and time at work, reading up on React/Redux and JS, and learning best practices (which my teammates do not, and rely on me to guide them.

Lately the issue has been that my boss and teammates write code which clearly violates React/Redux standards, and when pointed out they come back with reasons like ""it works"" or ""We don't need to do it that way, it's overkill."" But it's clear that React/Redux and modern JS paradigms are not understood. I've pushed back in the past but am finding less and less energy to do so.

How do you enforce best practices while not being a lead, when the lead might be one of the people pushing back against what you're trying to enforce? I know in the past I've gotten advice at previous jobs about speaking up, and I have, except the difference this time is that no one else has relevant experience and I feel like it's an uphill battle.

Do some of the things I ask for matter? Maybe not. Maybe it will seem like hacks to other front end developers or specifically react Devs. Maybe it will cause issues because it's not standard. I don't know. I don't know how much importance I should put on things like best practices or standards.

How should I be approaching this?",1559973313.0,2019-06-08 01:55:13
737,What would you expect a principal web engineer to know? What do you think separates one from someone on the next level down?,23,ag8rns,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ag8rns/what_would_you_expect_a_principal_web_engineer_to/,5,I’m supposed to speak to a principal web engineer and I’m not sure what to talk about since I’m not sure what makes them a principal web engineer. I’d appreciate sharing anything that’s typically relevant to the title. ,1547589640.0,2019-01-15 17:00:40
738,Developing a product that you're not interested or have faith in - your experience,23,a7aiym,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/a7aiym/developing_a_product_that_youre_not_interested_or/,14,"Experienced devs, have you been in a situation or a working environment where:

1. The product you're building/ maintaining is something you have little interest in
2. Have no faith in the product (e.g. it's value to the consumers, marketability, quality, etc.)
3. Edge case: embarrassed by the product itself ...

If you have, could you share your experiences in dealing with them; how you'd stayed motivated; what happened that led you to feel that way, and others.

Many thanks devs.",1545163944.0,2018-12-18 15:12:24
739,How common is it for established developers to increase the complexity of a system for the sake of job security and inflating work/accomplishments/training ?,22,k0fy64,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k0fy64/how_common_is_it_for_established_developers_to/,23,"So I see a few motives for increasing complexity on a project for selfish reasons:

1. To learn a skill good for the CV but not directly the best choice for the project, although not a bad choice. (EG: Using NoSQL just to use it and learn it when PostgresQL would have been better).
2. Making a system contrived, specific and obscure for the point of job security. That way, they have a hard time bringing anyone else in and the dev can demand higher pay as well since it's more ""complex"" work.
3. Adding a tech just because business wanted it, to make it seem more accomplished and impressive. EG: Adding AI, or something like that so that stakeholders can be impressed.
4. Just to come up with work to do on a slow sprint and/or personal amusement. EG: Making a script because it was fun, coming up with a more complex design because they didn't want to be caught empty handed with no work and management wondering if they were needed.

I know I've seen no. 1 often, devs are expected to keep learning. I know no. 3 happens a lot when management is too hands on. As for 2, I don't think it happens often. I did something to that effect, but it was to make a system less complex though, but it did improve my job security by switching from Java spageti code (what most devs understand, you can easily find java spaggeti code devs locally, on upwork, from WITCH) to a lesser known Spring stack. This probably added some extra job security for me but that was secondary to my intention, but I didn't mind getting it though.

I've suspected people in OPs of making a system far more manual deployment heavy by requiring certain infrastructure instead of letting software devs ditacte design which would be in favor of automation. I even questioned this in private and was scolded for ""But our IT infra guy has 15 years in XXXX."" I suspect that they were inflating the architecture to add work and/or job security.",1606287835.0,2020-11-25 02:03:55
740,"I'm rough around the edges in tech skills, but have been working self-sufficiently most of the time for 8 years. Am I ready for many senior-level jobs?",23,iwlioy,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iwlioy/im_rough_around_the_edges_in_tech_skills_but_have/,18,"I want to know if I'm ready to become a senior developer after 8 years of cutting my teeth through some unpleasant codebases and work environments, and sometimes as the only developer. I don't have a lot of exposure to proper practices or large scale architectures but I can put out fires and untangle knots in messy code I haven't seen before. And I often don't work with mentors or more experienced people as lifelines so I had to become self-sufficient. So, whatever lack of technical prowess I have, I make up in tenacity. 

To give you an idea how this developed, I started my career in my senior year in college, in ""hard mode"". I wasn't studying CS. I simply found this job on Craigslist and my small portfolio of projects helped me get the offer. Here, being the only developer in a mid-size company that publishes magazines, I had to maintain the website for one of those magazines. They didn't care about better tech, they just needed to deliver the news. I'd be on-call pausing my homework time to discuss some burning issue with their buggy CMS that I inherited.

Moving on, post-graduation, I worked at a web agency for 4 years. There were some other developers here but all of them didn't have any set standards of practices for the company to follow. Everyone just marched to the beat of their own drum. The person who was supposed to mentor me got fired in 1 month and I didn't get a proper replacement. 

The other only local developer that remained (95% of the tech work was done offshore) had different set of goals in mind. He set out to become the expert of a e-Commerce CMS. To me this was not what I wanted to keep doing forever. I found it more like being too much of a one-trick pony and didn't want to just be an [e-Commerce platform] dev, just an all around good developer.

This led me to working at a startup which also had a barebones team and questionable dev practices, my 3rd workplace in a row where I don't see any formal documentation nor any unit tests. Their tech stack was sorta out of date, with using MongoDB, but using a PHP framework that has been phased out and not as modern as Laravel. But I get by and deliver features on time. I have been laid off after working for 2 years because they wanted to pivot in their tech, I had no experience in it and they couldn't afford idle time for a transition. They also planned to move to a 100% contractor setup for their tech work.

8 years have passed since my first job. I'm currently unemployed but looking. In my experience a lot of companies seem to value technical knowledge and larger scale accomplishments more than tenacity and willingness to adapt.

But I see a lot of recruiters interested in referring me to senior-level roles, including from some large tech companies. Should I take up these offers? Will I be biting off more than I can chew with these senior jobs? On one hand, if I keep going for mid-level jobs that can make my ""career velocity"" look bad, on the other I feel if I screw up my senior job they can just fire me quickly.",1600662369.0,2020-09-21 00:26:09
741,Tips for Ramping Up as a Senior Engineer,22,iu4g74,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iu4g74/tips_for_ramping_up_as_a_senior_engineer/,11,"I wrote up [some tips](https://jdxcode.com/posts/2020-09-16-10-tips-ramping-up-as-a-senior-engineer/#fnref:1) specifically on ramping up (those first 6 months) as a senior engineer. Would love to if you have any yourself.  


# 10 Tips for Ramping Up as a Senior Engineer

I've learned the hard way that starting a job on a large engineering team as a senior engineeer is more than simply writing good code. You have to drive initiatives at a social level and not simply because you know more about the codebase.

For a new hire this is especially a challenge. **You need to learn the system that your colleagues already understand.** You might be a higher level but you'll be a worse engineer for the first few months while you ramp up.

## 1. Write Half the Code

Tasks are not simply work to be done. For a senior engineer, they're also tools for developing the team itself. If you just take tasks and complete them yourself you'll squander the possibility of spreading knowledge across the team.

I prefer pairing to spread knowledge but have really struggled to bring that culture into most teams. What I do more often now is implement half of what we need and leave the rest to another engineer. If something needs to be done for mac + windows for example, I'll do the mac part and leave the windows for someone else. Usually they can use your half as a reference point so it won't be too difficult for them and it makes reviewing much better since 2 people have much more context.

A task like this has already been scoped out by the senior engineer and they would've noticed any potential complexity. Both implementation and estimation should be predictable and a great task for a more junior engineer to develop their skills and not spin their wheels.

Not only that, but people generally enjoy delivering things together.

## 2. Own Something

In the first 6 months you must be considered the undisputed owner of a component. It might not be a big thing, maybe it's some metrics library or a linting tool, but it has to be something. You need that wedge to at least start ownership somewhere.

Once you own a component you'll likely own it for life (well, until you leave the team/company). Rarely do components get moved between teams—and even more rarely is it a successful handoff. So maybe don't go too crazy, but you'll be expected to at least be able to point to something you own in performance reviews for sure.

It's also helpful for collaborating. If you're the “eslint guy” then you'll regularly be interacting with other people that need help with eslint or are trying to extend it.

## 3. Be The Notetaker

**Take the minutes during meetings.** If your team doesn't currently do this, just share your screen and start doing it. It's highly unlikely anyone will take issue unless someone is showing a presentation or something. I like [quip](https://quip.com/) for this task but it really doesn't matter what tool you use.

If taking minutes is already part of a team's culture, generally people don't want to be a notetaker so nobody is going to mind if you take on that responsibility.

When people are talking try to organize bullet points into 2 sections: what you discussed and action items. Editorializing people's points will be hard as you gain context, but it'll force you to actually understand what they're saying. You might need to ask questions or have others fill in some gaps but that's ok.

Make it clear that assigning action items to people is not saying that a task must be done by them, just that they are the owners of making sure it happens (“it” is usually just finding the answer to an unknown). The EM will apprecaite smoothly organizing who should be doing what. The EM is usually in need of being able to go back into docs for reference too so they'll love the minutes too.

The downside is you won't be able to talk as much since you'll be busy. That's ok though because while you're new you're lacking context and it's probably better to be a little bit quieter—that's true for me anyhow. (I'm known to provide terrible solutions because I don't even realize the context I'm missing.)

In large meetings where you can't share your screen just take notes of important things people say. This is the #1 way I've found to pay better attention in meetings. You don't need to share it or even look at the notes again, just try to write at least 1 point down in every meeting.

## 4. Don't Assume You Know the Answer

The way you learn anything is by making mistakes. I believe you can't learn anything unless you do it the wrong way first (or at least get close enough). Junior engineers will have solutions to problems and if they experiment with applying them—they'll continue to develop. **Your job is to foster that dynamic.**

Senior engineers—on the other hand—are expected to use their vast background experience to quickly resolve issues similar to what they've run into in the past. Senior engineers need to walk a tightrope between providing their experience and shoving solutions down engineers throats.

A lot of this simply comes down to language and they way you present yourself. Give them extra context by talking about past experience (most senior engineers talk endlessly about $lastjob and I think that's ok—if maybe a little dry after a while). Don't dictate how things should be done.

If they're going down a road you disagree with it's good to make your point understood but nothing more. Be the one that steps aside (I talk more about this in “10. Force Decisions”).

Here are a few examples:

* Don't say: “If we did X instead of Y we wouldn't have to worry about Z.”
* Say: “Have you considered doing Y? I did that on a previous project and it helped Z.”
* Don't say: “I think we should stop doing X.”
* Say: “Are you concerned about how we use X?”
* Don't say: “X isn't very clean code, we should do Y.”
* Say: “I don't have a strong preference about that code.""—You don't and you should never have a strong preference regarding code style. If someone else feels strongly about code style, I'd just let them.

You can't just swap words out like this though. You can word something in a nice way but if what you're really doing is demanding solutions your way you haven't accomplished anything. Try to be as curious as possible to avoid that.

## 5. Find the Pain Points

Have 1:1s with team leads from cousin teams, find out what they're working on, find out what's a headache. Fixing an annoyance from another team is a surefire way to build rapport. There is a problem somewhere that you're perfect for: you just need to find it. My go-to is updating dependency versions and build tools.

Is there something they don't want to maintain anymore? Could that be your first component to own?

Is there some duplicate work going on? Collaborate instead. And make absolutely sure you mention this when talking to your skip. In my experience there isn't anything upper management likes to hear more[1](https://jdxcode.com/posts/2020-09-16-10-tips-ramping-up-as-a-senior-engineer/#fn:1) than sharing efforts across teams.

## 6. Don't Refactor

Refactoring is a waste of time and easily harmful for a senior engineer. Refactoring keeps you *within* your codebase and outside of working with other teams. I argue it provides questionable value anyhow—as someone that's done a ton of it. It's necessary on occasion but be mindful you're not spending too much time pruning up the rose bushes.

If something significant is really dying for a refactor just keep it in the back of your mind. Unless the rest of the team is also clamoring for a fix it might just be best to wait until you've established yourself.

Where this can really go sideways is when you refactor code a colleague wrote and they don't like your design. Aesthetics are often in the eye of the beholder and stepping on someone else's idea of beauty will rapidly damage rapport. They probably won't feel comfortable telling you about it either.

Honestly life is too short to debate whether the arguments to a function should be an object or parameters. This is a decision better left to more junior engineers anyways as they'll be dealing with the code more. **You should be focused on how components interact—not the style of the code.**

## 7. Write Good Specs

You'll be judged more on how well you write specs than code. Spec writing of course has little to do with the spec but everything around it: how it was built, how you gathered information from stakeholders, how you distributed the information, all of that and more. The product of a spec is not a doc it's actually those conversations.

The goal is to get people to provide appropriate input about a problem, get the right people to provide potential solutions, form that solution, and communicate what it will be. Ultimately we just want to solve a problem in an effective way. The doc is just a tool to make that happen.

See if you can find a good name for your project. Marketing is for engineers too[2](https://jdxcode.com/posts/2020-09-16-10-tips-ramping-up-as-a-senior-engineer/#fn:2).

Reference the things that upper management is saying. Reference their master plans at least once in every spec to tie things back to them. They'll greatly appreciate that you're listening.

## 8. Be Social

You need to be a familiar face to as many as possible. That way they feel comfortable coming to you—or at least even know who you are.

Some ideas for activities:

* Game night
* Coffee break
* Dinner at your home with 1-2 people

Try to make regular activities. What we do at WhatsApp (not so secretly) is schedule game nights every couple of weeks at a regular time. What we don't do is publicly list the event. We just say an hour before it happens on a Friday that they can optionally come join a round of [Codenames](https://codenames.game/) or something. We've found this gets more people than trying to set aside time in advance.

## 9. Force Decisions

Teams often don't know what decision to make. Sometimes these are because people feel strongly about a certain approach, but more often it's because nobody feels strongly enough to make the decision on behalf of the team. I've got 2 (admittedly similar) tricks up my sleeve for when this happens:

**McDonald's method** — My classic method (that I got from somewhere years ago but no idea where) of doing this involves the canonical example of a team that can't decide where to get lunch. I say McDonald's. Nobody wants to dine at McDonald's on the company dime so people will be quick to suggest acceptable alternatives. I do this with software too: suggest the obviously bad approach to force others to explain their alternatives that are clearly better.

**Disagree and Commit** — This is famously an Amazon principle that I quite like. It's usually better to do anything so we can improve and iterate as we go rather than pontificate about what could be. Remember this yourself if the team is going a direction you disagree with. If it's truly a terrible idea—they'll find out soon enough. Besides, you might be wrong!

## 10. Give Tech Talks

There is no easier way to be perceived as an expert than by giving a presentation. There is likely a domain you have experience with that the team is less familiar with.

Hopefully your organization already has some kind of regular presentations like this but if not—what a great opportunity to start one!

## Summary

Thanks for reading. I'm still a work in progress myself and if I'm frank: I need to take my own advice sometimes. I'd love it if you could let me know what you think and if you have any more tips. I want to do a “10 More” article at some point and have it be some kind of an anthology.

## Footnotes

1. One from Heroku I loved was “Project Glostick”. [↩︎](https://jdxcode.com/posts/2020-09-16-10-tips-ramping-up-as-a-senior-engineer/#fnref:1)
2. Well maybe that their department just got +2000 head count. [↩︎](https://jdxcode.com/posts/2020-09-16-10-tips-ramping-up-as-a-senior-engineer/#fnref:2)",1600318361.0,2020-09-17 00:52:41
742,"How do you prevent code from ""getting old""?",23,hfnavu,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hfnavu/how_do_you_prevent_code_from_getting_old/,23,"I am a back-end developer, primarily working with Java/Kotlin. Currently all of our systems are new (2-3 years old max), so we have little to no legacy (at the moment). What I have been considering lately is how we take our systems and make sure they do not age to the same degree as our predecessor did. 

Over time systems change. New code gets written, new technologies are adopted, developers grow and better (hopefully) habits form - how do you bring these positive changes to older code bases?

I don't expect a silver bullet solution to exist, but I am curious to see what other people/teams are doing.

From what I've gathered there's three main schools on this (but please add to the list):

1. The time capsule - Any new code in the component will have to look like it belongs in the component. The components internal coding style and libraries is more important than following updated ways of working. This makes reading an old component pretty easy, since it is all cohesive, but it also freezes the component in time. Such a component will become harder and harder to update and work with. Eventually the system will be so ""old"" that the solution will be to rewrite the whole thing. Might sound like a terrible idea, but maybe it is less work to rewrite a system every 10 year with new technology and new tools is less work than doing it gradually. Personally I am not convinced by this approach, but I know a couple of devs which think this is okay (planned obsolescence?) .
2. Always update - If old code does not get to dictate new code, rather old code must be adapted to work with new code and not the other way around. Here we will end up with systems which contain many different ways of coding which makes the internal code less cohesive, but the system will always be updated. Certain parts which are never touched will still rot, but it is easier to do a facelift on parts of a system rather than having to redo a whole system. Rather than adding to technical debt we are constantly updating the system as we do changes.
3. Pragmatism - We try to keep the internal code style consistent, but we do facelifts when we feel we need them. When we do change something we make sure that the whole component adopts that change rather than the part we are interested in. For example we might discover a new mocking library which is far superior to the old one, so therefore we rewrite all of our tests to use the new library rather than the old one. This does mean that we have to do larger facelifts on our components from time to time, but waiting for approval for such a facelift we are adding to the technical debt.

We might be generalizing a bit here, because minor code style changes are not the same as switching to a new programming language. The goal is more to gauge the thoughts and philosophies rather than discussing every scenario possible.

This question can also be read as ""How do you avoid building upon technical debt?"".

**tl;dr**: What do you/your team do to slow down (or stop if that is even possible) the aging of your code?",1593125053.0,2020-06-25 18:44:13
743,how to get better at distributed systems architecture,24,got8my,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/got8my/how_to_get_better_at_distributed_systems/,17,"Hey all,  


I have one year of experience and have really enjoyed being on a platform team that deals with most of the distributed architecture at my company. I was wondering, how can I get better at this? I haven't been able to find very good resources or forums on distributed architecture. One thing to read on my bucket list is \`designing data intensive applications\`.  


Anything else out there?",1590215150.0,2020-05-23 02:25:50
744,Is CICD really worth it? In my jobs so far it has seemed to be way more effort than it's worth.,23,gb5uom,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gb5uom/is_cicd_really_worth_it_in_my_jobs_so_far_it_has/,29,"I'm not that experienced, so I guess this is more a question for you more experienced developers, but I have worked in three different places so far, and the whole build, test, deployment pipeline has always taken *so* much effort to establish and maintain, I really can't see how it beats the old way of doing things.

In my current role, every single sprint we have at least one person spending just about all their time on some related to it in some way or another, whether it's some security issue, or it's getting something set up to start with, or something no longer works, some configuration is bad, or a release/deployment and there's a bunch of stuff to do for it (and why are we spending all this time setting up this CICD stuff if deployments are a big deal, isn't it supposed to be automated and seamless?), etc.  

I thought the whole idea was to like set it up, it works, then you just let it go? Why is always so much effort?  It is so expensive for us I estimate that it's basically one to one and half times the capacity for a senior developer just to mess with this stuff all the time.

Is this normal or is my team just really bad with this?",1588314607.0,2020-05-01 02:30:07
745,Please help: Resume Review,21,dtgf05,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dtgf05/please_help_resume_review/,32,"Hello Reddit Experienced Devs. I have been applying for new opportunities and seem to have no success in getting any calls. I am not sure at this point if its my resume. Any feedback for will help. Please take a look.

&#x200B;

https://preview.redd.it/vvg6hpym6hx31.png?width=1076&format=png&auto=webp&s=3a129be5ecbee1d62563f3504513587ef19af0f1",1573253302.0,2019-11-08 17:48:22
746,I suck at coding will it ever stop?,22,dt7480,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dt7480/i_suck_at_coding_will_it_ever_stop/,34,"I've been a software developer for 4 years and make decent coin, but I feel like I suck and have never not sucked. I just got my ass beat in an interview in a language that I work in regularly and get paid for. They asked ""What are the features you're most looking forward to in ES6."" I don't read all these patch notes...

What am I doing wrong...?",1573201424.0,2019-11-08 03:23:44
747,How do you grow your team?,22,dr9s8g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dr9s8g/how_do_you_grow_your_team/,10,"I've been thinking a lot in the team performance space both internally and externally. One of the things that keeps coming up is how are teams and individual contributors being evaluated. We all know lines of code, or number of leads are not effective metrics.

What I'm interested in is how you grow **your team**. I'm fairly aware of the many different aspects involved as well the suggested materials (some which I haven't read, thank you for that)

As a leader:

* When evaluating someone, do you ask others for feedback on how they think an individual is doing?
* Do you share what metrics are important to you with the person in question.
* Can a robot do your job? ;)

As a top performer:

* What does your manager ask you and do they evaluate you?
* Do you ever give your manager feedback about others?
* If your manager was replaced with a robot, would anyone notice?

I had a recent conversation with a long time friend, and they were telling me that their manager just makes sure that:

* They work the right number of hours
* There aren't any complaints against them
* Everyone get's a 2% raise per year.

I was so horrified at that, I thought I would ask the community how it is for them.

&#x200B;

*Edit:*

What I'm interested in is how you grow **your team**. A lot of the current answers have been targeted towards material on how I can do this, though I'm more interested in feedback from others on how they do it.  I hope that makes sense.",1572857340.0,2019-11-04 03:49:00
748,Dev leads - what are your major insecurities with leading a Dev team?,22,cushx1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cushx1/dev_leads_what_are_your_major_insecurities_with/,12,"This has been lingering with me for some time now; Dev leads - what are your major insecurities with leading a dev team filled with senior and mid level developers? Examples of insecurities:

1. Do you worry about your team's happiness? If you do or don't, how do you manage to (not) care?
2. Do you worry your team members backstabbing you or each other? Or senior developers, who are more vastly experienced and older than you judging your competency?
3. Do you worry about the quality of their work and how that translates to you as a leader? e.g. poor code review process that you're not up to date for some reason; old technology that could expose vulnerabilities 
4. Are you worried about being reported as an unreasonable/ incompetent development lead?

So many things can go wrong; do you have any insecurities? How do you manage them?",1566676498.0,2019-08-24 15:54:58
749,"If being a senior software engineer is a matter of confidence with bringing more value, does that mean I can hold off being a senior indefinitely?",22,crugqa,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/crugqa/if_being_a_senior_software_engineer_is_a_matter/,40,"I've been through 5 jobs over the last 10 years and definitely don't feel yet capable of being a senior. Since there's no hard rule on how many years is expected before you become a senior dev, can I just stay working as a regular dev without it degrading my career?

Reasons for me to not be a senior dev yet:

* I don't get much exposure to big projects at a high level

* I never actually have many senior devs I directly talk to. I'm only familiar with a work pipeline where all tasks are delegated by a project manager

* I have never been mentored. Therefore I will not want to lead the blind if I am blind myself.

Mainly on these points I have also worked with only 3 or 4 people total per project and in some cases I am the only developer on the project. All these projects are low impact and I am not really in a position where I am a ""breadwinner"" to the company. Can I still stay the course indefinitely until I find myself in a situation where I can learn from more seniors on what it is to be a senior dev?

EDIT: seems to me that being very afraid of corporate politics is the main thing holding me back from becoming senior. How did you overcome that fear, especially of seeing others like they're thinking you are trying to take over their role?",1566117663.0,2019-08-18 04:41:03
750,13 years in Medical R&D and I cannot get interviews at non-medical companies,21,cgnij1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cgnij1/13_years_in_medical_rd_and_i_cannot_get/,20,"As the title said, been working at a Medical R&D company for 13 years working on insulin pumps, dialysis machines and so forth in C and C++.  I want to get out of the Medical R&D game and do something else, but it seems only Medical Companies give me the time of day.

My [RESUME](https://drive.google.com/file/d/1P-rZA-pN8J6SLv3B4tZoX1zoB74bceGS/view?usp=sharing) is not targeting Medical in my view and I'm not smart enough to get in to the Googles of the world where they want generalist and are wiling to let them learn on the job.  It seems like companies creating Autonomous Vehicles or devices like Fit Bits would be the closest companies that would have crossover skills to what I do now, but they never call me back so I guess they are not as close as I think.  

I'm not really interested in networking equipment so companies like Cisco are not really in the picture at this time.  

So I don't know what to do.  Should I just suck it up and embrace the medical world since these are the only places contacting me?  I've been looking on and off for 5 years without much success.",1563882502.0,2019-07-23 07:48:22
751,Have you ever experienced effective Application Security training?,22,c3earu,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c3earu/have_you_ever_experienced_effective_application/,3,"I work as a senior developer in a small department within a fairly large insurance company. In the past, we've done department-wide AppSec training, but I've always been less than pleased with the methodology and the results.
The training is a combination of slides and practical exercises delivered and performed in-person and discussed in real time. The instructor has always been very knowledgable, but while the content is somewhat tailored to our environment, they have limited familiarity with our applications and even less with the group's skill level.

**Problems:**

* Some employees come in with a good amount of app sec knowledge. Some come in with almost none. Accordingly, the content is too simple for some, while for others, it's like drinking from a firehose. Additionally, the same 2-3 people answer nearly all of the questions, leaving little time for those who need it most to wrestle with the problems themselves.
* Many don't recognize that some of the vulnerabilities demonstrated in the course were present in their own applications. I think they have trouble relating the content to their own work.
* We spend a fair amount of time on vulnerabilities that aren't as relevant in our typical stack and not enough on those to which we are more susceptible. For instance, CSRF isn't such a big concern for us. On the other hand, I know we have more than a few cases of insecure direct object references. Yet we probably spend as much or more time discussing the former.

I've brought these concerns to my manager. He wasn't here for the last training, but he's open to suggestions for improvement and has agreed to connect me with our CISO. I want to take full advantage of this opportunity. I have some ideas in my head, but I'd love to hear from others. 

**Questions**

* Have you ever participated in a very effective AppSec training regimen?
* What did they cover? How did they decide what to cover?
* How was the content delivered? In person or online? Live or at your own pace? Lecture style, practical, or mix?

**Edit:**
Since someone asked, here are a few of my ideas.

* In advance of any live sessions, we would walk through some of our applications with the providers of the training and provide access to source code. The primary goal here is to tailor the content to our organization. But I have another - maybe crazy - idea. I want to find vulnerabilities in our systems that could make for an impactful demo. This might be a bit dramatic, but I kind of want to scare the team straight, so to speak. That said, I don’t want to embarrass anybody, so I’m happy to make an example out of my own work. Lord knows I'm not perfect.
* Assign pre-work before the training to get everyone up to speed on the basics. One option could be to have participants work through the NodeGoat tutorial at their own pace. The goal is to make sure everybody enters a live session with some working understanding of at least the OWASP Top Ten. I think that would lead to more productive discussions among the team during the live sessions.
* I'd like to go through a (brief) guided threat modeling exercise. We could use one of our existing applications as an example.",1561170012.0,2019-06-21 22:20:12
752,How common are flexible schedules? Currently working at a low paying but flexible job.,23,bszq9p,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bszq9p/how_common_are_flexible_schedules_currently/,11,"I currently work developing a large, national distributors ERP, CMS, API and B2B integrations (EDI, API, SFTP dropoffs, etc.). I also work on EHS systems, but that's additional work I get paid for off the clock. I've also worked on a few government systems through contract work.

&#x200B;

That being said, mandatory hours are literally when UPS works (9am to 5pm, M-F and every holiday UPS works we also do). Generally it's more about being ""on call"" during those hours. That being said, I decided to go back to school to get my degree and should be done in 2 years. 

&#x200B;

I'm definitely underpaid, more so now that I have over 2 years of experience. I really haven't left because they allow me to go to class (with prior approval) for 2 hours\~ in the morning if necessary. I turned off my LinkedIn ""looking for jobs"" setting a few weeks ago because I thought that I'd have a difficult time finding someone to accommodate for allowing me to shift my work hours to a different time if necessary (I'd still put in my 8 hours, just possibly staggered. For example, 11am to 5pm, 8pm to 10pm).

&#x200B;

But now that I can't do ""extra"" work as much (and it's also getting really tiring doing another 10+ hours a week) my salary is pretty low and I've considered seriously considering new offers.

&#x200B;

Right now I do primarily Fullstack Web Development for a lower COL area $60k/yr near Philly. I get messages all the time (4+ a day when LinkedIn is active) for bare minimum $80k and I've received several for $120k nearby. When I did the extra work, I hit $80k last year but I also roughly put in another 400 hours in 2018 (20,000$ / 50$/hr). I don't get any retirement benefits either and my healthcare is pretty bad. They cover the cost, but we have a $5k deductible before it kicks in and no dental insurance.

&#x200B;

It's definitely tempting.

&#x200B;

**TL:DR;**

I can move positions and potentially double my salary, definitely sounds like I can double my TC. However, I'm concerned that I'll have difficulty finding a flexible schedule elsewhere.

&#x200B;

Would like to be able to attend college in the morning/at night and work around it (11am to 5pm and 8pm to 10pm for example).",1558847786.0,2019-05-26 01:16:26
753,Good CS books for experienced devs,22,ao0u40,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ao0u40/good_cs_books_for_experienced_devs/,16,"My company gives each engineer a certain Personal Growth Benefits to attend conferences, etc. in order to further our skills and our careers.

For my first step, I'm looking to buy some great CS books. Which books would you recommend? ",1549549226.0,2019-02-07 09:20:26
754,Is $400/h entirely unreasonable to ask?,21,ai3ld1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ai3ld1/is_400h_entirely_unreasonable_to_ask/,6,"TL;DR Very experienced researcher (patents, papers, a book, etc) looking to switch jobs after almost 10 years in the same company and not knowing how high I can go. In other words, I'm trying to figure out the thin line between ""very experienced specialist in a narrow field which is currently in demand"" and ""he is out of his mind to ask that much"".

&#x200B;

So, I've been working for almost 10 years for the same company (a large US corporation, not Big-5, but pretty good). My job is not exactly development,  but more like applied research. Professionally, I did pretty well in these 10 years - hundreds of patents, published papers and a book (not published yet, to be fair - still work in progress) . I have a good reputation and some connections, so when one of the researchers working for another company in the same field retired (also not a Big-N, but pretty large US company) I called  their VP and he offered me a job.

Since I'm not based in US and I don't want to relocate, it is gonna be a contractor position. I'm trying to figure out what is the maximum hourly rate I can get. I don't desperately need that position, so I'm in a good position to negotiate. 

I currently make about $300K in total compensation for a full time employee position, which roughly translates to $200/h. Thing is, since I've been working for the same company for 10 years I suspect I can get much more. The question is - how much... 

I'm thinking of asking $300/h, but...maybe I can get more. So, here is the question - is $400/h completely unheard of (for a long-time contractor position, pretty much a full time job)?",1548054626.0,2019-01-21 02:10:26
755,Leetcode is just a crutch for bad interviewers,22,jt2z66,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jt2z66/leetcode_is_just_a_crutch_for_bad_interviewers/,24,"
   While I’m not totally against DS&A style of interviews.  I’ve found that they’ve become more of a fad than anything.  And on top of that I think they’ve mostly become a crutch for people who are just bad at interviewing.  

 I do think you can hire good developers without taking them through these rigorous and frankly pointless problems.  I just think because interviewing requires good communication skills and some sort of personality, a lot of people are bad at them.

   I’ve been in interviews where the hire manager puts some engineer with a thick accent and poor personality to conduct them.  And that’s really not a great experience.

  I’ve often seen And attended DSA interviews where the guy on the other side is literally not paying attention.   They’re just waiting for you to finish so they can compile your code and give you a passing for failing grade.  With as simple as this is, just about anyone could conduct such an interview.  It’s literally interviewing on auto pilot.

  What I find worse is that these interviews are easily to game.   Just grind out leetcode style problems for 3 months and you probably can ace these interviews solely on rote memorization.  Sometimes they hide them with some word problem but most people recognize the type of problem their asking you to solve.

   I don’t hear enough people calling out how lazy DSA interviews are.  When I use to interview engineers I did my research on them.  I taylored my question to what they asked and I actually cared about their experience and knowledge of the problems we’re facing.  I never got a bad hire because I’m an engineer and I know how to evaluate other good engineers.

   I think the industry hiring is becoming more and more of a farce.  I get that there is entire market and eco system build around leetcode prep.  And that people won’t call it out because many people have built entire business around interview prep.  But I really do think this has made the industry a joke and has alienated engineers who actually want to solve problems.",1605243178.0,2020-11-12 23:52:58
756,Experiencing burnout. Need some advice.,22,j2yw86,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j2yw86/experiencing_burnout_need_some_advice/,8,"I am experiencing the symptoms of burnout. Its really hurting my productivity. It's been going on for a while and I am not sure what to do.

Im not very happy in my current role and have been looking for other jobs but it feels like a bit too much while trying to work in a current position.

I feel like things have stagnated and the opportunity to learn new things I'm interested in isn't there. 

I don't know if I should just take time off or quit. It's really impacting my health. It's weird because covid is really changing the job market so on one hand I feel like I should be happy I still have a job, but I know trying to continue on with burnout might be very difficult. 

So any advice or thoughts? Have you experienced burnout? If so what did you do? 

Thanks! This subreddit has been really helpful for me so far.",1601543547.0,2020-10-01 05:12:27
757,"Changing jobs and moving up in roles/responsibilities in one go, did you find it easier than you imagined?",20,j0cfv0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j0cfv0/changing_jobs_and_moving_up_in/,7,"I'm considering doing this myself. Currently I'm unemployed so obviously the primary concern is getting a job. But ideally I'd like for it to also come with a senior engineering position, a position I've never taken before. Did you attempt something similar before in that you switched jobs and took a promotion along with it? Was it easier or harder than you thought? By changing jobs I mean, with a new company and new people.

In the soft skills I am taking into consideration for the role, I already have lots of experience facing clients as a freelancer, and as a programmer working for a web agency. I've also taken work where I was given just a list of specs and, using them, had to build websites from the ground up.",1601178241.0,2020-09-26 23:44:01
758,Getting tired of the expectations hiring managers put on you because of your years of experience,21,ijh0qa,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ijh0qa/getting_tired_of_the_expectations_hiring_managers/,42,"Okay, this is more of a rant than anything else. But there's gotta be way more than a few people who are sick of being told what they should be doing simply because of how many years they worked in this field, is there?

Being told what they expect of me because of having X years of experience. That's making assumptions before asking questions. That's even flat-out prejudice. ""Oh, you have 10 years of experience, so we are expecting you to have skills of a senior developer"" is what a lot of people in hiring think like. I have 9 years, so almost 10. Some people when they look at my resume say I've been slacking. How so exactly, because there are no rules as to how fast you should advance in your career.

To give you a hypothetical example, having 6+ years at a no-name company with abilities only slightly better than a new grad would make me less desirable than a new grad at most companies. If they didn't know how long I've been working at no-name company I would be considered a bit better than the new grad, which makes sense there, because my abilities are slightly better. But then they look at your years and say nope, this guy must be worse. I hate that. People are too obsessed with years as benchmarks.

This YOE expectation is not as terrible as prejudice on race or sex, but it comes from the same way of thinking. Putting stereotypes on a developer of 5 years, of 10 years, etc, while I think the number of years you show on your career is not really important. Who cares about your ""career velocity"". It's about your current skill level and what accomplishments you took.

Things were much easier and simpler as a junior not just at work obviously, but in the process of finding work. Despite all the disadvantages one would expect for not having experienced, more companies actually give you the benefit of the doubt. 

What's the appeal of getting more experience if you are under constant pressure to keep growing at a minimum velocity? I hate the ""up or out"" mentality. I want the freedom to coast through my career at my own speed without people looking down on me for it.",1598838680.0,2020-08-30 21:51:20
759,"How to deal with anxiety when it comes to projects, deadlines and expectations",22,i4ifot,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i4ifot/how_to_deal_with_anxiety_when_it_comes_to/,6,"Hey guys - I'm a younger senior developer and one of my biggest flaws is that I can get crippling anxiety when anything of consequence comes into play. Anytime I get an email, my heart jumps into my throat. When we push code to prod, I fear issues that will ultimately cost me my job.

It becomes almost to the point where I feel like I'm tied to the job. When I wake up, I feel I need to produce. Right up until bed.

It doesn't derail my family life or anything, but it causes serious stress to me. I don't think it's my job, I think it's me.

Has anyone had this and how did you deal with it? I made an appointment to talk to someone next week, hoping that helps.",1596706189.0,2020-08-06 05:29:49
760,"If you would build a tech Stack for a startup in 2020, what would you do?",22,hzgw07,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hzgw07/if_you_would_build_a_tech_stack_for_a_startup_in/,81,"Hello, 

We are working on building a web-based solution to leverage some ML in the backend, and I'd like to hear your thoughts on  technologies that we need to build upon. 

Before you type ""It depends."", I need to tell that you are absolutely correct. But, what we want to hear is your opinion in a modern overall stack that you would use and why (without focusing on ML as we got it covered, we built a micro-service around it)?

Talking about: SaaS, Web. What kind of frameworks, technologies, stacks that you consider modern.",1595979630.0,2020-07-28 19:40:30
761,How do you fill 8 hours timesheets during remote work?,22,gtspyg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gtspyg/how_do_you_fill_8_hours_timesheets_during_remote/,29,"I am considering joining a consulting company, which does remote work. They have this concept of filling in 40 hours timesheet every week and sending it to clients. I am not used to this right now, as I work in a product based company where we don't care about timesheet but care a little about the sprint goals.

I am not used to remote work as well but given that there are no distractions, work is getting done faster and I am more productive. So with that in mind, I don't see myself working 8 hours every day. I may max out at 6 or 7, given that I am fairly comfortable with the domain, so I don't get stuck often.

One more quality of mine is, some days I don't get anything done, but somedays I work more than 8 hours to get the things done. So with this concept of timesheets, it feels weird to me on how the timesheet is gonna look like.

The company does not pay hourly but pays a salary. Do I need to be upfront about this with the company? or should I just fill 8 hours timesheets with the 7 hours work(which is what we do at the current company, we just fill 40 hours even though if we worked for 60 hours or even 30 hours)

If you folks are in similar situations? Please share your methods on how you are handling this",1590928817.0,2020-05-31 08:40:17
762,Developer with 5 yrs. experience looking for advice on finding fully remote work,20,fpw0i3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fpw0i3/developer_with_5_yrs_experience_looking_for/,34,"Hey all, not sure if this is the right place to post this or not, but here it goes...

I'm a self taught Java developer, started back in 2014, with some previous experience as a teen. Got a degree in Networking and am not good with FAANG type interviewing questions or leetcode, also suck at math. Aside from this, I'd still consider myself a solid mid-level developer and feel pretty comfortable working with java, spring, mysql/postgres. I plan on learning more JavaScript, but I also feel good enough in html and css to get by. The reason I got in to this field was because I kind of enjoyed it and it has a good work/life balance, also knowing that one day I'd like to work fully remote, so I could travel if I wanted and still work from wherever.

At my current place of work, I can work remotely a couple of days a week, which had only reinforced that I want to be fully remote. I churn out code for 7-8 hours and call it a day with no meetings and it's getting a bit old. Personality wise, I should be upfront with you and say that I do not have a passion for this field at all, however I do somewhat enjoy building a project from start to finish and I put a lot of care into the end product for the user. I enjoy being creative. Although I am one of those developers who wants to just get their work done and sign off for the day to enjoy my life, I still care about doing good work. Please don't take this as me being negative, because all of my coworkers like me and I have a very friendly personality. I have only had compliments on the work that I perform.

Here's the deal. I am aware that I'm not at a senior level and whether it be imposter syndrome or reality, I never feel like I know enough to be desired for remote work. I want so badly to work fully remote and for a company that respects work/life balance and provides a fair amount of vacation time, so I don't work myself to the grave. 

What level of skill is actually required for remote work? Can anyone please provide me some advice on what steps I should take that could land me a fully remote position that would fit me? I would really appreciate any and all advice.

Thank you all!",1585340569.0,2020-03-27 16:22:49
763,I have this weird obsession with wanting to be taught and mentored because I have never gotten it throughout my career.,23,e9f8d4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e9f8d4/i_have_this_weird_obsession_with_wanting_to_be/,12,"I've developed a propensity to want to see more ""proper"" engineering experiences in terms of onboarding and learning. Plus I feel like I am doing myself a disservice and to others if I start to mentor others despite my more advanced position in my career. I never have been mentored, instead because everywhere I worked is small and understaffed of engineers. Basically my philosophy is if I haven't been taught from mentors, I cannot become a mentor myself. I don't like the idea of giving something to someone that I myself have not experienced.

I'd rather have that experience first, and then see if I would give that to someone else. Don't know if that makes sense but can't explain it any better. For instance, if a company tells me if I can mentor others, I'll say I want to be on the receiving end of being mentored first, alongside other new employees. We'll all be taught from experts but obviously on different things because we all are at different stages of our career. As a more concrete example, I need catching up with cloud services and AWS. The ideal company for me would want to give me a mentor, give me some time to understand some of the company's problems, then work with their mentor to define a project that leverages AWS skills that we'll complete with the mentor's advisement for several months.

Is this something I really need in my career? I feel like being mentored an essential thing on your career checklist and it's like an itch that doesn't go away, and that I'm well overdue on getting this check box ticked.",1576135990.0,2019-12-12 02:33:10
764,Developer to DevOps,21,e565qx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e565qx/developer_to_devops/,18," Just wanted some advice. I have around 2 years of software development experience with a small-medium sized company. I received an offer for more of a DevOps/pipeline position at a fairly well known game company. I ultimately prefer software development at this current time but I wonder if its worth trying the position for a couple of months, internally transferring to an actual Software Developer role or just using the big name on the resume to help get other positions down the line. Or just stick to working for a smaller company in regular software/feature development. 

I'm not overall too familiar with the DevOps field but is it difficult to switch out of DevOps back into Software Development?",1575352116.0,2019-12-03 00:48:36
765,"Client wants to hire me full time, bad idea?",20,djwdmb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/djwdmb/client_wants_to_hire_me_full_time_bad_idea/,18,"I'm on my phone, so I'm going to keep this brief but I can answer questions when I get home . Client wants to have their own internal dev team and apparently everyone there (CEO and such included) really like me. They have been talking internally for a year about hiring me full time. 


My current company would still stay on, but I would be the second person on the internal development team and they are hiring several more developers soon.

It would be a step up for me with likely a 50k raise and a ton of flexibility (I could live anywhere and just fly in monthly for meetings). 

My contract has a non-compete, but the client said not to worry and they would take care of it with my boss if I'm interested. I said I was open to hearing more, but that I was concerned if my boss would be okay with it.

They're going to bring it up in a few weeks about the potential of hiring an employee and see how he would react, and if he's okay they will give me an initial offer.

Thoughts?

EDIT: I should also clarify that I work for a development shop in the US and the client is in a different industry in the US, but pays my company to do the development work. My boss is aware of the internal developer team (and is actually happy about it)",1571473392.0,2019-10-19 04:23:12
766,Seeking Advice,22,dhqmbo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dhqmbo/seeking_advice/,11,"What are some really really good interview questions that a candidate can pose to the interviewers, particularly during first-round phone / video interviews, and later during in-person interviews that can help make an informed decision whether we even want to proceed with accepting the offer?

I do imagine, each interviewer comes from a different role and background. some are senior devs, some are senior managers, sometimes directors and even the c-panel. so who would you ask what to get a good glimpse of what you want to do?",1571088774.0,2019-10-14 17:32:54
767,"No longer holding the ""lead title"" - what not to do",20,d4yrmo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d4yrmo/no_longer_holding_the_lead_title_what_not_to_do/,15,"Okay so I may be joining a company where I'd just be a typical developer - no longer ""leading"" a team or doing any form of leadership. 

However, I'm a bit worried here; I've been doing both the leadership role and the typical development tasks so I do worry that I may come across as ""bossy"" or talking as if I'm some ""leader"" (which may sound patronising to some folks).

I'm not too sure how to go about this - any advice is so much appreciated. Also, if there is anything else that I need to be careful/ be advised, I'd be more than happy to hear them!",1568658523.0,2019-09-16 14:28:43
768,Were you a short tempered or impatient when you were younger/inexperienced?,19,cf02ii,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cf02ii/were_you_a_short_tempered_or_impatient_when_you/,10,"I know I was! : /

I was pretty impatient (and anxious); but over the years I learned to manage this by having several different perspectives e.g.:

1. Telling myself it's just a job, don't take it personally
2. Some other elements may cause us to underperform e.g. poor processes, bad leadership, etc.
3. Politics is shit but it's real, play the game

In terms of being short tempered, I wasn't one but I realised I may have ""been one"" due to the environment filled with short tempered people. Once I got out of it, I just reverted to my own sane self (lol). But these days, if I'm in that environment again, I may just remind myself again that it's not me it's them!

How about you experienced devs? Were you either short tempered or impatient (or any characteristics) that you may have overcome due to experienced and maturity?",1563521906.0,2019-07-19 03:38:26
769,"When asked about what I want to do next in my career, would it be okay for an experienced person to give a simple, open-ended answer?",21,ccewus,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ccewus/when_asked_about_what_i_want_to_do_next_in_my/,13,"When I have to be specific I don't see it in my to want to get too specific because given my position in the job search, it would be like going from 0 to 10 very fast. So my current goals are simple, seek a company with a larger tech team (at least 100 people probably) and secure a full-time job. 

I do some investigation on the company so the culture still feels a bit ""startup-y"" because I've only been used to very chill, small company feel offices. I haven't worked in a traditional, older corporate place where things move slowly. I'm also looking for guidance from smarter engineers. 

Other than that my needs are not very specific. 

Is that an unusually vague set of wants for someone who has, according to their resume, 8 years of experience? Would you be taken back if you interviewed an experienced person and they have no specific goals in their career other than to just learn from smarter people, and more job security?

I think such simplicity and vagueness is more expected for a junior with 0-1 years of experience since they are expected to not find their path yet. But even with 8 YOE, I don't think have my career goals really set any more than I had with 1 YOE.",1562986091.0,2019-07-12 22:48:11
770,Hired as first Staff Engineer,21,b0h6hv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b0h6hv/hired_as_first_staff_engineer/,2,"I have been hired into a large well known tech company based on previous experience of being a tech lead on various projects for 10 years. After joining the company I was told I was the first outside Staff Engineer ever hired into the organization and the expectations for me were very high. After the first month I noticed that coworkers were acting strange around me and less responsive to my ideas. During a 1:1 one of my coworkers specifically stated that he and several others have been at the company for 5 years and were passed up for the promotion I got and were upset that an outside was hired. Based on this they would be watching me closely. I've talked to management about the conversations and their feedback has been to try to ""make friends"". I am the most Sr Engineer in a group of 15 engineers who work across 5 different teams. The situation is turning very toxic where the other engineers are trying to ""one-up"" me in effort to obtain the promotion for the next cycle.

When I had a recent 1:1 working with a counterpart who has been at company for 5 years strongly suggested a particular technology be deployed to production I followed up with a series of questions as to how the new technology would meet the needs and various questions about edge cases. I suggested we should evaluate the technology to ensure its viable prior to implementing it. He became very defensive and suggested we'd find out all of the issues and fix them during implementation. After meeting he immediately followed up with my manager who called me into question as being toxic for asking questions.",1552476379.0,2019-03-13 07:26:19
771,Asking for salary range before interviewing,21,ax2hhb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ax2hhb/asking_for_salary_range_before_interviewing/,10,"I'm currently working at a large company and am considering exploring software engineering opportunities at smaller startups. One issue I'm facing is there's no salary data that I can look at, and I don't want waste mine/the company's time interviewing if the salary is not going to be close. Is it bad practice to ask for a salary range before doing an interview?",1551699630.0,2019-03-04 06:40:30
772,Suggested Audible books for long commutes? Suggested podcasts?,23,afsgzx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/afsgzx/suggested_audible_books_for_long_commutes/,11,"The software books on Audible are a little overwhelming. I am spending about 4 hours a day right now listening to podcasts and thought I would switch to audiobooks/Audible.

I've never used audible before and did purchase the gold membership. I also have Spotify premium. As a team lead, senior developer, what books can I ""read"" to help boost my career whole on the road, walking the dogs, and doing chores?

Also, what audible superuser tricks do I need to learn?",1547471775.0,2019-01-14 08:16:15
773,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,21,k8cn10,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k8cn10/ask_experienced_devs_weekly_thread_a_weekly/,75,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1607357569.0,2020-12-07 11:12:49
774,How often do you respond to LinkedIn messages and emails from recruiters?,21,k2ha48,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k2ha48/how_often_do_you_respond_to_linkedin_messages_and/,31,"Lately I’ve been getting lots of messages via LinkedIn or email (I have an email on my website) from recruiters. 

Should I be responding to each and every message? I’m not actively looking for a job right now, so should I just turn each request down or is it fine to not respond? 

I don’t check my LinkedIn too often, so I always feel bad when I see messages left unread.",1606567011.0,2020-11-28 07:36:51
775,"Working For Yourself as a ""Master Craftsman""",19,j2lvny,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j2lvny/working_for_yourself_as_a_master_craftsman/,15,"A lot of people talk about software like it is a craft, which I totally get. It makes a lot of sense. We are working with a lot of existing tools to make something nice and we should try and make it last long, easy to maintain, etc.

I'm curious about the path to ""Opening up your own shop"" you can do in a lot of other ""crafts"". Like if you're a woodworker in the old apprentice -> journeyman -> master days, when you became a master you'd frequently open up your own shop where you were your own boss. Not that I never see people become freelancers, but I don't see this too often. It seems like ""Masters"" of the craft are usually senior (or ""staff"" or ""principal"" or whatever) engineers, and they aren't their own bosses.

Is there a way to do this? I'm not talking about becoming a unicorn software company or anything, just your standard ""Main street"" type shop where you are making a good living for yourself and you are your own boss",1601500483.0,2020-09-30 17:14:43
776,How to step up to a leadership position when it has not been made official?,19,hpxuro,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hpxuro/how_to_step_up_to_a_leadership_position_when_it/,17,"Joined the company last week, and I'm expected to step up into a team lead role in an existing team (2years or so). Made up of senior devs and mid level devs. I think some of them are even better technically than me and also more motivated. I am a frontend developer and this is a frontend team.

&#x200B;

Any advice would help.",1594602394.0,2020-07-12 21:06:34
777,Experienced devs looking for jobs during Covid19 lockdown,20,giyrpm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/giyrpm/experienced_devs_looking_for_jobs_during_covid19/,36,"I got laid off during lockdown and searching for jobs has been brutal.  I usually have no problem finding work quickly but it took me six weeks this time.  I had jobs freeze all hiring due to corona halfway thru my interview process and in general there are a lot less jobs available right now, health care and finance seems to be hiring but some industries are totally frozen right now, in fact most of them are.  Also tech workers are being laid off in droves right now so there’s more competition for the jobs that are out there.  Also - since everyone is remote right now the interview process is excruciatingly slow.  It takes forever to schedule interviews and whiteboard interviews over zoom are awkward and prone to audio video problems.

How has your experience been?  I got a job but I’m not sure it’s a good fit for me, I’m very grateful for it though and will try to make the best of it.  When the country opens up again I may try switching jobs again when jobs are back to normal hiring.  Good luck!",1589404348.0,2020-05-13 17:12:28
778,When do you do your peer reviews?,20,g1all1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g1all1/when_do_you_do_your_peer_reviews/,23,"I've recently started tech leading a small team and am responsible for being much more heavily involved in the peer review process of team members. I am also expected to architect and engineer large pieces of functionality and deliver features quickly. 

In the past, I've been able to get away with doing a small amount of peer reviews when I have free time throughout the day. But I also need to be heads down sometimes in order to deliver some of the features I'm expected to build, and the context switching can be jarring. I've tried doing reviews at the beginning and end of the day but often the code will get reviewed and merged before I can get eyes on it. 

Do you tend to drop what you're doing to complete code reviews? Has blocking time worked for you?",1586916518.0,2020-04-14 22:08:38
779,What are your expectations for a merit raise?,20,fz4yz3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fz4yz3/what_are_your_expectations_for_a_merit_raise/,46,"I've been in my current position for almost two years but this was my first year I was able to get a merit raise; I was a contractor for the first six months.

The process was simple. My director set my goals in the beginning of the year. I ranked myself on each goal from one to five and gave my reasoning. A couple of goals I gave myself a five because I felt I had gone far and above what was expected -- helping onboard new developers on the team and helping them out in general (there's a couple of developers on my team who I feel like just aren't good enough at this, so I spend a lot of time helping them). And a bunch of others I gave myself a four, better than satisfactory.

My director has little insight into what goes on on my team on a daily basis -- she manages a bunch of other teams. Last month I got a call from her (I work remotely) to go over my evaluation. With exception to a couple of goals which she left at a four, she moved everything down to a three. She explained that I do great work and she's happy with me, but that's just how evaluations work. I was mad about this because I often put in 60+ hours/week, but thought I'd wait to see what my merit raise was. Yesterday I found out it was 2%.

I guess I should consider myself lucky given the state of world/economy, but I'm also frustrated because this job has taken over my life (or I guess I've let it because I'm trying to rewrite a lot of horrible legacy code) and I'm given a measly 2% raise.

tl;dr Do you have a floor for a merit raise that if not met, you would start to entertain recruiters contacting you?

Edit: Thanks for the responses!",1586639574.0,2020-04-11 17:12:54
780,How to teach developers to use git?,21,f8eily,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f8eily/how_to_teach_developers_to_use_git/,29,"At work we have several products across different stages of development (pre-release, released and actively developed, maintenance) that all use git.

Several developers use git by rote e.g.

- they will push their branch after every commit so their history will be full of work in progress commits
- when working on bug fixes they will branch off and merge to the next release branch, instead of branching off master and merging back to it

How can you get developers to think about what they are doing rather than just going through the motions?",1582515452.0,2020-02-23 22:37:32
781,Apply for non-senior roles or keep looking?,20,ezr69l,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ezr69l/apply_for_nonsenior_roles_or_keep_looking/,14,"I'm a software developer with about 8 years of experience with the most recent 5 years at the same company. It's a smallish company with a dev team of about 20 with mostly junior developers. My peers don't have much experience and most of our learnings are things that we have learnt on the go. My work is boring and repetitive and management is focused on adding features without any regards to employee well-being or growth. Off late my learning and growth has stagnated with no proper mentorship or support from my boss either. 

I have started applying for other jobs. Any roles that pay close to what I'm earning now (~130k) is for other senior/lead engineering roles and there seem to be quite a bit of expectations that come with those. While I personally have good knowledge of coding, data structures and algorithms and I'm able to clear those interviews fairly easily, I'm stumped when it comes to system design or leadership experience questions.

I have tried just applying for non senior roles, but when the hiring managers look at the number of years of experience they tend to expect quite a bit of leadership and architecture/design patterns experience which to be honest I don't have much knowledge about. I have tried self learning and incorporating those to an extent but my lack of background shows during the interviews when they try to go deeper.

Any tips or suggestions on how I should approach my job search? Should I spend more time learning about design patterns and software architecture or should I just try to focus on leetcode type problems and focus on non-senior roles?",1581018075.0,2020-02-06 14:41:15
782,How experienced/skilled is your manager/director?,21,erox5z,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/erox5z/how_experiencedskilled_is_your_managerdirector/,29,"I work in a Fortune 500 company.

The technologies that I work with are exciting and my teammates are okay but the only concern I have is with my director.

In general, he is a good and supportive leader, but he lacks many of the basic skills that I would expect from an Engineering Director (basic programming skills, basic understanding of Computer Science, basic git skills).

At times, his ignorance can be frustrating because he expects ""magic algorithms"" or solutions to the problems, and he often resolves to ""Research it"" even if what he is saying does not make any sense for me.

I imagine that the last time he wrote code was probably 10+y ago, so I don't blame him. But sometimes his feedback (both positive and negative) are not accurate.

I was wondering how often this happens, and if this also happens at technology companies.",1579606913.0,2020-01-21 06:41:53
783,Front end frameworks,21,emyfka,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/emyfka/front_end_frameworks/,30,"I have 4 years of experience in front end development for angular2 and am working on personal full stack project in react.

Companies are rejecting me for react roles left and right even though 90% of actual coding problems you solve between the frameworks is the same.

Has anyone found a good way around this?",1578724526.0,2020-01-11 01:35:26
784,home office stipends for remote and partial remote devs,21,dznpyr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dznpyr/home_office_stipends_for_remote_and_partial/,13,"Anyone know of any companies that have good policies for home office equipment for remote or partial remote devs and what those policies are? Trying to come up with some examples of policies that different companies offer their devs to help the company I work for define our own. It would mostly be for partial remote devs. Something like 'we pay $1000 for home office equipment up front and then another $500 every year, plus $30 a month towards internet'. Would love ideas or examples.",1574390408.0,2019-11-21 21:40:08
785,Career Advice: Manager of Innovation (IoT/Automation) or Strategic Sourcing/R&D Analyst (Data Scientist),19,dxqotf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dxqotf/career_advice_manager_of_innovation_iotautomation/,3,"Good morning all I am at a cross-road in my career development currently and would greatly appreciate some help navigating.

A little background first, I am a married 33 year male with children.  I currently work for a very large greenhouse company based out of Miami, I'm located in a satellite location and was originally hired in an operations role as a subject matter expert(grower for 15 years).  I never completed college but majored in CS.

That being said I was able to work my way into a process engineering role for the last 2 years which has allowed me the opportunity to be involved in everything from data analysis to IoT engineering and implementation.  I am self taught with most of what I currently do.

I was recently given the opportunity to move into one of two roles Manager of Innovation(IoT/Automation) or Strategic Sourcing/R&D Analyst(Data Scientist).  The former would be more like a project management role, would include budgets, traveling, vendor relations etc.  The latter is more of a data scientist role, strategic forecasting etc.

I guess my questions are, with my current background and lack of formal education which career move would provide me with more opportunities in the future. If I were to ever leave my current company and the horticulture industry which would I likely find a reasonable paying position in? 

Also which choice has the best future outlook in the years to come for growth in salary?

Any help is greatly appreciated and I am very excited about both.  I love manipulating data but I also love the realm of IoT and project management.",1574045803.0,2019-11-17 21:56:43
786,Mastermind groups,19,dvtz5d,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dvtz5d/mastermind_groups/,17,"Does anyone here participate in a [mastermind group](https://en.wikipedia.org/wiki/Mastermind_group)? Do you find it valuable? How often do you meet? How did you get it started?

I've never participated in one myself but everything I've heard about it sounds pretty great (or maybe I just need more friends :sadlol:).",1573690400.0,2019-11-13 19:13:20
787,"Purposely rejected a more ""technical"" leadership role and went for a more ""people"" leadership role?",22,da00vd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/da00vd/purposely_rejected_a_more_technical_leadership/,17,"I had a one of those small talks with a senior dev and he said he's not interested to be an ""architect"" or a ""technical leader"", and is more interested to do a more ""people leader"" role (i.e. less tech stuff and more people interaction).

Now I don't really know how common this is in the dev world? Is there a leadership role where it reduces the technical scope of the staff and increases the ""people side of things""? 

Has anyone chosen that route? Mind sharing why?",1569617832.0,2019-09-27 16:57:12
788,[UPDATE] Talked to the recruiter for Hearst. Not sure how to feel afterwards.,21,cvx9ke,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cvx9ke/update_talked_to_the_recruiter_for_hearst_not/,19,"Hey everyone. Apologize if this seems like I'm rambling below, I have a lot of thoughts about this. I'm going to try to clean it up before posting. So, I asked earlier about Hearst in this sub and I received some advice. I took the call because it seems like it would be a great opportunity. This is my first *real* call regarding a potential tech job, especially after working in the field, and I'm not sure how common some of the topics are.

&#x200B;

**My takeaway so far is,**

* They're having issues finding candidates in the area because apparently everyone leaves after graduating.
   * I can validate this, their job postings have \~10 applications in 4 weeks and they have 6 openings (more coming up). They've been hiring for over a year now.
* The salary they're looking to pay ($100k-$120k) is apparently for the very specific stack they want to use now.
* They apparently aren't even interviewing people that work with Microsoft stacks.

&#x200B;

**My background,**

* Self-taught in .NET ([VB.NET](https://VB.NET) and C#). I started learning from the age of 12, writing VB6 Starcraft: Brood War bots.
* 3 years development on the LAMP stack. (PHP,JS) I learned on the job at my company in under a month, they frequently told me I surpassed all expectations.
   * I've driven all significant technology updates in our company. For example, I modernized a PHP5.3 application to PHP7. I implemented our CI/CD pipeline and version control. I containerized our applications using Docker and standardized our development environments. I essentially fill the System Admin and DevOps role for our company.
   * I'm a mentor for our junior developers.
   * I'm generally chosen to direct new projects for our client.
   * I have extensive API implementation and integration experience (SOAP, RESTful, EDI services).
   * Worked on multiple contracts, from government to hospital system development.
* I also self-teach constantly.
   * I recently taught myself Node.JS, Xamarin, and started to learn Angular.
   * I'm learning Python, React (Angular seems to be less utilized?), and MongoDB.
* Attending college to get my CS degree.

After discussing my experience and salary expectation ($105k), he immediately said that the LAMP stack is antiquated and they are looking for developers on more modern implementation.

I explained that I'm confident that based on my performance and experience, I would pick up the technology they're using exceptionally fast.

He replied that it sounds like I'm a self-starter and that seems to resonate with them, but they typically aren't even interviewing people with what they view as antiquated and I don't have a ton of experience. He asked me how low would I be willing to go, and I said I would probably be fine with $90k at a minimum, but it wouldn't be as attractive as an offer.

He said he completely understood, but they would need a reason to take a chance on my lack of experience in Python and React. He followed up by saying they placed someone with similar experience (Drupal), but they had more years of experience.

&#x200B;

**TL:DR;**

Recruiter was nice, but really mentioned how my experience in in the antiquated LAMP stack so it wasn't entirely relevant to them. Ended up convincing me to go down to $10k under the listed salary range. This would be a pay raise, but not nearly as attractive to me.

&#x200B;

**My questions,**

1. Is this experience/interaction common?
2. I thought that the general mentality was if you're competent, transitioning technology stacks isn't difficult? Is this not true?
3. Should I try to significantly move away from the LAMP stack on my own time? I wanted to release my ""Open Source Podcast Distribution Platform"" built in PHP using Laravel and Angular, but part of me is wondering if I should instead finish development in Python and React.
4. Is 3 years really *not* a decent amount of experience? I wouldn't call myself a senior, I think I have plenty to learn, but I thought that 3 years of experience would likely firmly place me in a mid-level role at other companies.
5. Based off this interaction, the thought of transitioning stacks at this company worries me. I have a lot of bills that I'm paying, I'd hate to be let go because I don't immediately learn a new technology they use. Is this a reasonable concern?
   1. I mentioned above, I'm confident I could learn the technology stack. They just seem to be aggressively searching for a very specific technology stack.
6. Is it common for them to try to drop your salary expectations? Especially based on experience with specific technology stacks?",1566897310.0,2019-08-27 05:15:10
789,Lead devs - does team turnover worry you?,18,crn734,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/crn734/lead_devs_does_team_turnover_worry_you/,16,"Assume perhaps you'd lose 1-2 or 2-3 staffs per year.  Does turnover like this or for any reason make you worry/ insecure about your leadership/ managerial skill?

Suppose your boss gave some hints (perhaps questioning ot  wondering) about the team's turnover status; would that make you worry?",1566082915.0,2019-08-17 19:01:55
790,Exp. devs - do you look at 'net' or 'gross' salary when it comes to % increase?,20,clhrsj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/clhrsj/exp_devs_do_you_look_at_net_or_gross_salary_when/,13,"I'm calculating some hypothetical increase in my earnings *if I did change job*, and I forgot to look at the differences between my *net* vs. *gross* income. For my case the difference can be 5-7%!

Do you look at *net* or *gross* income when it comes to % increase? From your POV, does it matter? For my case, it kinda does since I'd like to go for x% increase but I won't be able to achieve it for a certain range of 'net' income.

From the eyes of the company/ HR, what do you think most candidates would look at?",1564860744.0,2019-08-03 15:32:24
791,How should new joiners communicate their grievance to their leads?,20,ck6a7q,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ck6a7q/how_should_new_joiners_communicate_their/,12,"Experienced devs, from your POV, what would be an ***(in)effective*** way a new joiner (irrespective of junior or senior engineer) should communicate their grievance to their leads?

e.g. of grievance:

1. Petty (or is this petty?) or minimal situation e.g. infra guys kept on making mistakes, say with their creds to the point they kept being logged out.
2. Moderate situation e.g. bad codes that impact their timeline (though they've given the approximated timeline, the bad-codes causes a lot of obstacles to them).
3. Extreme situation e.g. bullying, passive aggressive behaviour, etc.

A new joiner may be fearful of their jobs or just trying to impress their leads - but this of course may be to their detriment.  

From your POV, what would be an ***(in)effective*** way a new joiner (irrespective of junior or senior engineer) should communicate their grievance to their leads?

For the petty or even moderate category, should or would you want to be informed even though the new joiners have resolved the issue themselves?",1564595317.0,2019-07-31 13:48:37
792,Dealing with bad or temperamental bosses - advice needed from the experienced dev,20,cbunvi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cbunvi/dealing_with_bad_or_temperamental_bosses_advice/,13,"Devs, I'd like to ask several questions:

1. If a boss started being harsh on you or this person is the temperamental type, how do you normal handle this sort of person?
2. If a boss started being somewhat unfair of their assessment to you, how do you handle them?
3. If a boss started to accuse you that the system is so and so do to your <insert your faulty decision>

From my POV, what I'd do is: 

1. I'd try my best to stay logical
2. ""Just stay quiet if this sort of situation ever occurs""
3. I'd say something vague like ""I'm sorry I'm hearing this but I don't actually see this happening in X, Y or Z situation?"". 

My rationalisation is never to argue back with this type of people since you gained nothing from it. In fact, by arguing back, they can use it against you (e.g. in subordination) and they can just use that for the next ""retrenchment exercise"". But if I'm wrong in this, please let me know!

Hope I can get some feedbacks from the experienced devs!",1562873623.0,2019-07-11 15:33:43
793,Devs on an on-call rotation - do you get extra comp or company paid phone coverage?,20,bwo1pb,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bwo1pb/devs_on_an_oncall_rotation_do_you_get_extra_comp/,24,Trying to gauge what's normal in industry. My company does not pay for cell phone coverage nor does it give any extra compensation when we are on call.,1559679550.0,2019-06-04 16:19:10
794,Should I tell my boss I’m leaving?,19,bo7bc2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bo7bc2/should_i_tell_my_boss_im_leaving/,16,"I have been job hunting for a couple months. I hate my current job and want to leave. As I see it, if I get fired after revealing my intention to leave it would be a win for me because I’d get severance and can job hunt full time with pay. Is there a flaw in my logic?",1557801382.0,2019-05-13 22:36:22
795,How do you ace OOP design interview questions?,22,behnsm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/behnsm/how_do_you_ace_oop_design_interview_questions/,45,"This is my weakest area when interviewing. I feel like most of it is because I \*nothing\* about what I'm asked to design. With zero feedback given, it's incredibly frustrating.

&#x200B;

And yes, I ask clarifying questions, list out use cases and constraints - but they don't help much in overall \*design\* when you know nothing about how things break down and componentize. 

&#x200B;

Imagine you've \*never\* been inside a car, let alone even understand there's components to a car. You don't even know that cars have engines. Now imagine you're asked to design a car. It's just, silly.",1555592492.0,2019-04-18 09:01:32
796,Knowing when and why to leave,20,aqx9fo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/aqx9fo/knowing_when_and_why_to_leave/,17,"Hi, hope this doesn’t get too long. A bit of background: I’m late-20s and am in a high-level position (VP-engineering level) at a series C startup. I’ve been here 3.5 years so the title is kind of vanity since it doesn’t really translate to a VP at a much larger place. I don’t have that experience.

Anyway, let’s call my current job Company A. I’m in final rounds with Company B, a place I’ve wanted to work since I graduated. B is public but not FAANG. Company A just raised my salary with a generous equity package included, supposedly due to the round closing but I have a hunch they know I’m looking.

Company A is a kind of dreadful commute. I could walk to Company B. Obviously there is the equity gamble with A in the sense that if I vest all this and wait until an IPO (assuming success along the way) I wouldn’t have to work anymore. Company B salary and bonus would be comparable but not much windfall possibility.

The truth is at numbers this high I really just don’t care that much anymore. I made a list of my goals and the two scarce things that keep me from accomplishing them are time and mental energy. I don’t live a particularly expensive life. 

I feel being at Company B would give me more of those but obviously can’t be sure. Their outward culture and values align so much more than Company A. The work at A isn’t particularly challenging but it is a high stress environment and industry. I feel like I’m being bought and it doesn’t feel good.

I guess I’m looking for advice on how to weigh these options. I haven’t gotten the B offer yet but it seems pretty certain. Leaving company A would come with a lot of guilt tripping and I would be leaving them in a difficult position, though I do understand this isn’t my responsibility. Thanks for any help or advice you might have.

Edit: I will give additional context as I recall it. Right now I’m on call every day from 8-8.",1550270912.0,2019-02-15 17:48:32
797,What's Your Worst/Best Office Politics You've Experienced?,20,aj4lmp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/aj4lmp/whats_your_worstbest_office_politics_youve/,11,"Office politics is obviously inevitable no matter how hard to try to keep your head down and just focus on your work.

So I'm just curious, what's everybody's worst/best office politics they've experienced in their tech career? How did you deal with it and what was the outcome?",1548306884.0,2019-01-24 00:14:44
798,Go fill out the Salary Survey for Experienced Devs on r/CSCareerQuestions,18,9dtr8f,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/9dtr8f/go_fill_out_the_salary_survey_for_experienced/,0,"It would good to get more info from others with real experience.

The post is [here](https://www.reddit.com/r/cscareerquestions/comments/9dru7n/official_salary_sharing_thread_for_experienced/).",1536351180.0,2018-09-07 16:13:00
799,I’m 10 years in. How do I keep improving as a developer?,20,8l9q1w,ExperiencedDevs,https://www.reddit.com/r/cscareerquestions/comments/8l799u/im_10_years_in_how_do_i_keep_improving_as_a/,2,,1527022146.0,2018-05-22 16:49:06
800,Should lazy really be touted as a desirable trait in a developer?,18,kd4edf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kd4edf/should_lazy_really_be_touted_as_a_desirable_trait/,12,"I occasionally read blog, reddit, and twitter posts stating lazy developers are a good thing that they find ways to do things easier.  I have not found this to be true by any extent and I think this is a dangerous road to go down as a manager.  

What are your thoughts?",1608002570.0,2020-12-14 22:22:50
801,Has anyone ever gotten a job without interviewing?,18,kb6n24,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kb6n24/has_anyone_ever_gotten_a_job_without_interviewing/,23,Basically you had a friend or an old company that was looking for someone and you just went straight to negotiating compensation.,1607734960.0,2020-12-11 20:02:40
802,"Maintenance tasks, nobody likes doing them, everyone hates when they don't get done. Has anyone found a good way to make it work?",18,j8u4p1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j8u4p1/maintenance_tasks_nobody_likes_doing_them/,18,"I work in R&D for an embedded software company, so I run into this problem frequently. R&D produces some cool new software tool (for use in house by other software engineers), they have some demos on what it can do, and it is in a raw enough state that a competent engineer can look at the guts and make it work for a lot of point solutions quickly, but the tool isn't 'smart' enough to be automagical, and just do 'what you want it to do' out of the box no engineer needed (beyond a few basic things). Suddenly everyone wants it, and everyone wants slight changes to it so that it moves closer to 'doing what I want out of the box no engineer needed'. Suddenly if you are not careful, maintaining this tool will be your only job, so everyone runs like hell from it (because IMO maintaining a tool is boring work when it is your full time job (because inevitably there will be slow periods of low work)), and what could have been a cool tool dies of bitrot. If they set up an official maintenance team they have difficulty staffing it before people jump ship to other companies or projects in house. I've seen this dynamic at multiple companies. Has anyone seen a good way to handle this? I've always thought a bullpen approach might work, but then what team wants to loose their good engineers to 'mandatory grunt work'?",1602399172.0,2020-10-11 02:52:52
803,Interview Rejections - I really don't know what's going wrong.,17,j892kf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j892kf/interview_rejections_i_really_dont_know_whats/,30,"16+ years experience overall, 9+ years experience specializing in Android. Seeking Staff, Senior-Staff roles. Off-late, particularly with remote interviews, every interview-loop ends with me getting ghosted, or rejected. Of course, I currently work at a huge organization, I lead 10 engineers of a team of 50 engineers, and a lot of these interviews are for teams that are barely 8 engineers in total.

Hiring Manager interviews are pretty OK. I describe what my skill-level really is in day-to-day operations at my current role. I learn about the organization and the role, the job profile and such, why is the position open?, pretty seamless. 

First-round interviews are a direct deep-dive into Android sample project code-bases, more recently, rather than leetcode challenges by a junior or mid-level engineer. A Principal or Lead is scheduled to interview for 1 hour. Only a handful of times recruiters do keep me informed upfront via email or the interview-invite that this is going to be an Android Studio based sample project interview, in which case I am prepared on my personal macbook (Mac OS Catalina 10.15.7, 2.9 GHz Dual Core Intel i5, 8 GB DDR3, i know pretty low-end pathetic configuration, but i don't like to spend $1K for hardware that will become obsolete in a year from now either). Most times, I receive an email exactly 5 minutes prior to the interview or the interviewer asks me in the beginning of the interview to begin setting up the sample project code-base. I am asked to download and open a sample project code-base in Android Studio. There are like a list of 5 tasks to complete in the project. Of course, completing 5 tasks in 1 hour is ridiculous, so 1 or 2 tasks are OK. The first task itself is the big one. Android-manifest file Internet Permission is missing, JSON parsers are incomplete, OkHttp round-trips are incomplete, RxJava subscribers / coroutine to LiveData observer updates are incomplete, RecyclerView.Adapter code is incomplete, ViewHolders are not properly setup, some ClickListener functionality is missing, the list goes on just to get Task-1 out. The setup and gradle-sync would have taken 8 minutes previously, now the build to run on an emulator is 3 minutes. We talk about architectures, design paradigms, then we see some bugs - who has ever written code that executed without bugs in the first-run? 1 hour goes by so quick, and I am Task-1 more-or-less incomplete?

Other interviews, if any i get to proceed to, leet-code for example, the other day, there was a Union-Find ( 2D matrix of 0s and 1s problem - typical Island problem). It had been a while since I had solved it last, so I took a while to recall structuring the recursive method, all the while talking out aloud how I am going to approach the problem. Nevertheless, I got the recursion method right, except that I was unable to piece together the sum of results of all the recursive-calls, something in those lines. I hoped that was close-enough, but I was rejected after completing the loop. Behavioral interviews, I think I am still doing adequately well. System-designs, fortunately no Server-side questions off-late, which is also good.

In all, I've only had high confidence in my performance. I'd certainly hire me. As an individual with employable skills, I can only do so much, and I think I've given my best. I can only think of these things that are going wrong for me - 

1. I am failing to play the ""Guess what am I thinking"" game. I really don't know what the interviewer is thinking - keywords, buzzwords, tech-stack names, API class-names even? If I can't guess and verbally say out aloud exactly what's on their mind, I don't know what else will convince people that I have got decent employable skills. I cover as much in regards to Architectures, Design-patterns, paradigms, SOLID principles yada yada yada, and yet, something may be missing at the crux of it all.
2. I live alone. I've been a loner for more than 5 years. I may be developing a speech impairment / incoherence problem. I don't see and feel that when am talking to friends on the phone. I spend a good amount of 2 to 3 hours every few weeks catching up with friends, and everything's OK there. I spend at least 2 to 3 hours every working-day collaborating with work-place colleagues in meetings and I don't feel anything there. But I do sense that I become incoherent when I am simultaneously speaking and thinking, rather trying to guess what is a suitable / acceptable / convincing answer so the interviewer will be impressed.
3. I have some sleep deprivation, that causes my eyes to turn blood-red / heat-up etc. Remote interviews demand video presence, and i might appear like I am on drugs / stoned or something? I don't know.

Any pointers to any paid mock interview services that can evaluate and assess as many aspects and suggest improvements ?",1602312170.0,2020-10-10 02:42:50
804,How do I overcome an irrational fear of stepping on people's toes for being proactive at work?,20,i3n5zz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i3n5zz/how_do_i_overcome_an_irrational_fear_of_stepping/,4,"As an contractor of many years, I have a (possibly irrational) fear of being proactive and involved in business matters because of a chance I might put some co-workers on the defensive. Like I picture the scenario of them thinking ""who does he think he is getting involved in our business"" and therefore I just stay on my lane and focus on the tasks given to me. 

For some added context I never have been a senior developer and I have never worked with more than 3 other developers at a time with a given project. These companies are small in size but big on offshoring work. So trying to do work that is out of my expected seems like I'm going to be rocking the boat. Worst case is that I get fired from doing that (never happened, fortunately). How did you overcome fear of making your peers feel threatened by wanting to do more, especially in smaller companies? This fear is the number one reason I keep my head down and remain low-profile to the point where it's hindering my career grow. I just want all the growth without the big risks, you know? Something low maintenance and less to be fearful of.",1596589460.0,2020-08-04 21:04:20
805,What do you look for in a job?,19,hjsrdp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hjsrdp/what_do_you_look_for_in_a_job/,39,"I'm at 4 years of experience, started a new job a month ago, and I'm a bit bored.

I'm looking at job offers again, and realized I don't really know what I'm looking for, what makes it click for me.
I just know I want ""something interesting, where I'm valuable"" but that's very vague.

I'm trying to figure out what I liked in former companies, but what makes it for you, what makes a job attractive?",1593704611.0,2020-07-02 11:43:31
806,Government to Private Sector Advice,18,h7w2wy,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h7w2wy/government_to_private_sector_advice/,30,"I've been working in state government for the last ten+ years as a web developer and I feel like I've plateaued here. I've been at the highest job class for developers the last four years, only option to keep moving up is to become a full-time manager. Salary (85k) is pretty weak for a relatively HCOL area. In addition to all that, the central IT organization is a complete cluster.

Has anyone here successfully made the transition? I have hunch that tech companies look down on government employment but no idea if that's true or not. 

I'd rather not have to grind leetcode if at all possible. Also, while I'm willing to relocate (very few developer jobs where I live), I think my focus is going to be on remote employment.

A little background: took a lot of CS courses in college, but not a full CS degree. Most of my experience has been in 

* .NET (ASP.NET MVC, ASP.NET Core)
* SQL Server as the database back-end.  In fact, I'm also the acting DBA here. 
* I mentor three junior programmers. 
* I'm currently working on my JS skills. I did some angular.js a few years ago, now working on learning React.
* Lots of experience with more obscure technologies (CA Clipper anyone?), but mostly leaving that off my resume.",1592034503.0,2020-06-13 03:48:23
807,"For interviewing backend positions, in your opinion, how much SQL should a SR dev know?",19,gxk5wq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gxk5wq/for_interviewing_backend_positions_in_your/,41,title\^\^,1591445750.0,2020-06-06 08:15:50
808,Interviewing with a former employer after a hiatus,19,gwt5dk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gwt5dk/interviewing_with_a_former_employer_after_a_hiatus/,11,"Hi all; I'm a dev of about 6 years experience who took a year off to finish a degree, something I'd put off but really wanted largely for personal reasons. Right before I went back to school, I worked for a company that I absolutely loved. Admittedly it might have been a honeymoon thing as I'd only been there 6 months, but the culture, the tech, and the environment was awesome, and I left on really good terms with my boss. I'm about to graduate so I reached out to my old boss who explained that because of an acquisition, hiring itself was a bit out of his hands, but that he'd pass a referral along so that I'd have my foot in the door with the interview process, and that has come to pass.

I'm just curious if anyone has had a similar experience of coming back to an old employer and what the interviewing process was like: was the pattern of questions any different from normal? Any insights would be appreciated!",1591342881.0,2020-06-05 03:41:21
809,Maintaining your career without technical leaders and without teams,17,gllwxm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gllwxm/maintaining_your_career_without_technical_leaders/,14,"Without dev teams* a team that only has one developer.

How do you maintain yourself, both in your career and your monetary and physical needs, without technical leaders or even much of a team setting? What are your thoughts about working in projects where you're the only developer, you can't count on other IRL developers for help and your skills are not so great? I can sometimes tell when my job can easily be replaced by an outsourced worker, and that has indeed happened a few times.

All in all I feel like I'm a hack here. I work for people who don't value my time and prefer to outsource all the development, and I can't get any offers from companies that do value developers a lot. My work status makes promotions very hard- I'm not cut out to be a senior dev right now. I never even got a chance to be on the interview table with others. I was better off in lifestyle 9-10 years ago than I am right now. Back then I was able to afford a nice apartment for myself, decent furniture and even managed some other, unrelated, hobbies with my money. I can't do that now.

And without other peoples' brains to pick at, how do you know about what you don't know, or haven't discovered yet? I can go down a rabbit hole of learning certain things but I still can end up missing other important things to learn.",1589773461.0,2020-05-17 23:44:21
810,What do you ask your coworkers to evaluate you on?,20,gikmd2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gikmd2/what_do_you_ask_your_coworkers_to_evaluate_you_on/,5,"I'm going up for promotion to ""mid-level"" engineer at my company (acquired unicorn SaaS) and recently had a call with my manager to discuss what needs to change at the next level, and one of the things I want to start working on more is soliciting feedback from my teammates on my performance. I'm thinking about sending out a quarterly survey asking my teammates to (anonymously) gauge me on a few metrics, and offer a spot for them to tell me where they think I can improve and what they think I'm doing well. What metrics should I ask to be evaluated on? I don't think I can list too many lest folks don't take the survey (maybe max ~5 or 10). The first things that come to mind are code quality, operations, architecture and design, communication, and testing, but I'd love to hear what y'all think.",1589347015.0,2020-05-13 01:16:55
811,How do I quit my job to take a break without my resume looking like I got fired?,19,g83g35,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g83g35/how_do_i_quit_my_job_to_take_a_break_without_my/,30,"I have 5 years of experience as a developer post-college. Been at the same company the whole time. I would love to quit for 6 month to focus on family.

However, that will leave a 6 month gap on my resume. My employers policy is that the only verify job title and my start and end date. Therefore, it will be impossible for prospective employers to acertain whether I left on good terms or got fired.

Any thoughts on how I can make this work without hurting my resume?",1587885186.0,2020-04-26 03:13:06
812,"The ""don't focus on specific tech, focus on business value/fundamentals"" advice",18,g4gft8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g4gft8/the_dont_focus_on_specific_tech_focus_on_business/,8,"Hello experienced devs! I often read this type of advice on the internet - how do I even apply this advice when looking for a new job? 

For example, right now I am trying to move from Data Engineering to generic backend development(working on the actual apps as opposed to data pipelines).

 I have experience with Python, Scala, some Java, databases and big data tech. But I don't have any experience with Spring, Django or Akka, so recruiters and companies ignore me or outright reject me. 

I guess I am supposed to use my personal network, but I don't really have any. I helped a few people find data engineering jobs  but they are not in a position to help ME at all. 

So does this advice only apply to those who have a strong network or focus on getting into FAANG, where your specific stack doesnt matter anyway?",1587362712.0,2020-04-20 02:05:12
813,"To those that transitioned from working remotely back to corporate on-site job, any advice to make that transition go more smoothly?",21,f2wvox,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f2wvox/to_those_that_transitioned_from_working_remotely/,7,"In my goal to return to full-time work after years of freelancing, I've decided I can't filter out jobs that require you to be in the office, because a majority of FT jobs don't do remote. That means getting used to seeing the same people at work every day 9-5 again and again, which I haven't had this experience since late 2013 (yea, I have remote worked a lot!). I frequently job seek in between jobs so I don't have much leverage there.

But just wanting to talk to more people to get used to the whole flow of corporate socializing and in-person communication, that's what I want to learn how to adjust to. It feels like I forgot how to do that. The most contact I have with professionals these days is merely in job interviews, and outside of that, the most contact I have with any people at all is with my family. For those that have gone through a similar transition, what advice do you have so that the change in your first days at the new job will feel like less of an office culture shock?",1581565712.0,2020-02-12 22:48:32
814,How to learn deeply?,18,f2lxlm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f2lxlm/how_to_learn_deeply/,7,"Hey everyone, 

Mid level dev at a big FAANG here. Having been at startups previously, it seemed like most of my learning was focused on churn and flexibility.

In team discussions, I feel a bit out of place when my teammates discuss highly technical details such as language and library specifics, or more complicated design patterns.

Any particular methods/resources to learn deeply rather than broadly?

And to be specific - the stuff I really want to dig deeply into is Java/JavaScript/OOP/serverless",1581512561.0,2020-02-12 08:02:41
815,How to turn down a great job offer graciously,20,exjd39,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/exjd39/how_to_turn_down_a_great_job_offer_graciously/,17,"I currently have two amazing job offers.

Both are more than I could have asked for, but one is winning me over as a brand from my childhood.

The other company is a small company (post start up with big name contract) who has gone above and beyond to accommodate my negotiations.
I really LOVE this company, but it’s not my dream.

My dream was to work with a toy company and now that’s an open opportunity with a competitive offer.

I’m going to be devastated to tell the other company I will be turning them down. I do have an old colleague of mine lined up to recommend to them who has more skill than I do, just not the big names on their resume. I know he will be just as successful if not more so than I would be. 

How do I turn their offer down, and provided my colleague as an option to them graciously?

This really has absolutely nothing to do with anything they could control, and it’s not something that can be negotiated to make me change my mind. Unless they suddenly start making toys instead of machinery.",1580648654.0,2020-02-02 08:04:14
816,File sharing work in github account to be seen by interviewing companies ?,20,ecv0yx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ecv0yx/file_sharing_work_in_github_account_to_be_seen_by/,13,"If someone was contributing to file sharing code bases, or just doing Dockerfiles for them, would you suggest they do it with a public github account that might be shown to employers when interviewing?  Think sonarr, radarr, jackett, etc.",1576799566.0,2019-12-19 18:52:46
817,Personal training & development budget - spending ideas,21,ec55j0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ec55j0/personal_training_development_budget_spending/,14,"My company allocates $2,000 per year per employee for personal training & development budget. The caveat is that it needs to be spend on something that helps / improves you in your job/role as long as it's relevant even if it's not direct. Eg. If you are a developer, you can't spend it on getting into knitting course. But if the company is using RoR and you want to spend it on learning Go (books, course, etc), feel free to do so.

The other caveat is there needs to be some kind of ""proof"" that you actually spend it well. For example - you can't pay for a course and never actually attend it. Or buy books that you never read. 

What would you be spending your budget on?

Secondary question, what's your experience with Pluralsight? Is it ""too basic"" or things that you could easily find on Youtube or is it actually worth it?

Thanks!",1576659574.0,2019-12-18 03:59:34
818,Applied as a Automation Test Engineer but got a Lead Software Engineer role,18,d6dpgm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d6dpgm/applied_as_a_automation_test_engineer_but_got_a/,9,"So I applied the role (a senior role) in this large organization (legit well known) - got rejected but out of the blue, they called me back but offered a totally different role - lead/ senior software engineer!

I was flabbergasted; yes I did mention I was a developer before but I had 0% intention of going back to doing purely SE work. They said it's 50% doing SE and DB (SQL) and 50% doing test automation. Honestly? Sounds like hell!

What do you guys think?  The salary bump may be no larger than 10-30% depending on how I negotiate. It's only selling point is the company's image/ brand.

Have mixed feelings really. Has anyone gone through this? Any suggestions/ advice is welcomed!",1568926843.0,2019-09-19 17:00:43
819,Best firms for experienced devs?,19,cs4dwx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cs4dwx/best_firms_for_experienced_devs/,2,"I have this theory that some firms, or maybe just certain types of firms or industries provide a better career experience for experienced devs vs junior. For example, some firms provide much more autonomy (which has a high correlation to job satisfaction) than others, and while autonomy is obviously is important at all levels, I feel it gets more important as your career progresses.

Can anyone else relate to this? Or not? Does anyone have any examples of where they feel this holds true?",1566179024.0,2019-08-18 21:43:44
820,Make boss happy vs side project,20,co4k46,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/co4k46/make_boss_happy_vs_side_project/,31,"Right now I have a long commute (2 hours each way) and I've been using it for a side project. I am hoping this project could eventually start to make me some passive income.

Today though my boss gave me some goals. These go beyond my regular work - they are not counted in the sprint. One example is splitting up a microservice that has grown too large into two smaller services.

I have a choice:

1. Push back against my boss. Say that if this work is important, it should be in the sprint. Keep using my commute to work on side project and potentially make some money for myself.
2. Use my commute for this extra work. Make my boss happy. Potentially use it to get a raise/promotion.

Edit: I work for a company where overtime is expected and everyone works long hours.",1565396074.0,2019-08-09 20:14:34
821,At my wits end with job search,19,bufr0a,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bufr0a/at_my_wits_end_with_job_search/,40,"I have two years of professional experience in the defense industry. I want to leave this sector to literally anything else because I don’t want to work on secret bad things anymore. I started my job search the start of this year (January) and to date, I have a 1% callback ratio with 200+ jobs I’ve applied to in my city, as well as surrounding cities.

Can someone please destroy my resume? Tell me what’s wrong with it? Tell me why you won’t give me a call?

I recently did the project in order to get new skills in Spring Boot and React since they’re popular. But I hope that I’m not a terrible candidate, I’ve risen the ranks at my company and am now a level 2 software engineer and have had glowing reviews. 

Some things I think I should do:
- remove my internship experience since it isn’t relevant
- not sure what else

As much as I’m trying to keep a positive attitude, I’m exhausted and seriously feel like I’m not getting anywhere. Thanks if anyone can help out.

https://imgur.com/a/AL1mAC4",1559170950.0,2019-05-29 19:02:30
822,What's it like working at NASA Jet Propulsion Laboratory (article),21,btb04t,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/btb04t/whats_it_like_working_at_nasa_jet_propulsion/,5,"Someone here previously was wondering how to get a job at NASA as an experienced dev w/o a STEM degree and this would seem like an interesting article to post here:

https://dev.to/johnphamous/what-it-s-like-working-at-nasa-jet-propulsion-laboratory-2eln

The tech stacks seems very straightforward. Contrary to what most people think you don't need to have an engineering degree to work at NASA, especially if you are doing web dev. For a self-taught web dev, they'll feel right at home with the front end (not needing to support IE is a bonus!) I'm actually encouraged to apply here, because I was rejected by another company that does mission control software (after a 1st round interview) and still have my mind set on working in the aerospace industry.",1558922569.0,2019-05-26 22:02:49
823,what is it like to transfer to a different team within a big company?,18,be28o6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/be28o6/what_is_it_like_to_transfer_to_a_different_team/,18,are there interviews or just informal chat?  what's your experience like?,1555494925.0,2019-04-17 05:55:25
824,Need general career advice and a sense of direction.,20,bdiipc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bdiipc/need_general_career_advice_and_a_sense_of/,15,"I'm currently a software engineer at a big tech company with 4 years of experience.

I started working here almost a year ago, and it was always my dream company. I always figured if I aimed for this company, I'd eventually land something good, but not this good. Now that I made it here, I'm not sure what to do.

My offer seemed really good at the time, but now after adjusting for COL, it isn't all that glamorous. The benefits are good, but not as good as I had initially thought.

The work is decent, but not as great as my last job. I wanted to learn a bit of everything, and was doing that at my last job since it was a smaller company. But now I was bounced around between teams due to some organizational changes, and now I'm the React/Redux expert on my team, even though that's not what I wanted.

In my free time, I'm still playing around with things I'm not familiar with just to learn everything (currently Docker and Redis). I'm not sure how to proceed with my career.

Do I continue focusing on stuff I find fun and interesting in my free time, or do I get really good at what my team relies on me for, even though it's not what I'd like to focus on in the long term.

I'd love to get more exposure to containers and Kubernetes, and Azure (I've worked with AWS before and loved it). But my current position doesn't offer me that.

What should I focus on that will help me move forward in my career?",1555376823.0,2019-04-15 21:07:03
825,Working with an offer from Amazon (SDM),19,b6cob6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b6cob6/working_with_an_offer_from_amazon_sdm/,1,"I am not at the offer stage yet, but I would prefer to know as much as information ahead of time.

While I am specifically looking at SDM role but some of the questions below will be general for any offer from Amazon I believe.

If you are familiar specifically with Amazon, I would greatly appreciate your insights

* Does Amazon usually give an ""exploding"" offer (eg. 2 days) or do they give decent time to think about it?

* How do you know what level you are given an offer for? The title is ""SDM"" but how do I know if it's L5 or L6, I assume L7 would have ""Senior SDM"" title.

* How would you know whether your base offer is already at the cap and you can't possibly get more?

* Other than $ negotiation (base, may be sign on bonus?), can other things be negotiated on the offer? eg. Vacation days, is it even possible to negotiate for more days? What other things that may / may not apply when working with an offer from Amazon vs regular companies? I would assume Amazon is more restrictive with bands, etc.

* What's the WFH culture like at Amazon? Do people even have the opportunity to negotiate things like x-days a week WFH, or may be x-days a month WFH or something like that? Again, smaller companies could be flexible with these things, I am wondering what Amazon looks like?

* Apart from offer, if you are SDM or familiar with SDM at Amazon - what does your day-to-day like? How are you measured as an employee?",1553765092.0,2019-03-28 05:24:52
826,Relocating to Vermont -- what are some of your concerns coming to Vermont,19,b2nr1h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b2nr1h/relocating_to_vermont_what_are_some_of_your/,38,I'm a Vermonter trying to get people to come up here. We have a pretty good quality of living and gigabit internet in the Burlington area. Unemploykment is at 2.5% and places pay pretty well though they could be higher.  What are some of your worries to come up here?  ,1552970295.0,2019-03-19 00:38:15
827,Tips for working in an open office?,19,az6yco,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/az6yco/tips_for_working_in_an_open_office/,14,"Any tips for working in an open office? I already have noise cancelling headphones and my manager doesn't like me using a meeting room for concentrating on work alone.

The idea I've got is creating fictitious skype meetings.",1552187786.0,2019-03-09 22:16:26
828,Is it possible to go to a big tech company and find what you want as an experienced dev?,21,9pugnw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/9pugnw/is_it_possible_to_go_to_a_big_tech_company_and/,21,"TL;DR: having trouble interviewing at tech companies (like FANG or unicorns) and having the chance to figure out early if I would get to work with the tech and type of process that I think are valuable.

Long version:
I'm an experienced developer (~7 yrs) that has worked at an almost-big tech company (Expedia) in the past. I went to a small company for awhile (last 2 years) and my pay has predictably not kept pace with the market due to this, so I've been looking to go somewhere with competitive total comp. 

Accordingly, I'm looking into going somewhere really big like Google or Microsoft or somewhere about to explode like AirBnb or Uber.

But I have been having terrible luck with these companies (actually not the ones I've named but similar ones) as far as their honesty about what the role entails. These companies seem to be all set up to interview everyone the same way and then just throw you in somewhere where they think there's a need. I'm disenchanted with the process already after only a few interviews. No one really has asked me about my particular experience nor have they understood it when I brought it up. They only care about the implementations of binary trees, tries, and heaps, and their use on toy problems that never come up outside of an Algorithms classroom (which I do fine on). 

The thing is, after 7 years, I have a really good bullshit detector about the important things to the software process, and I have some hard-won experiences that have resulted in me being ""picky"" about the kind of tech I work with, and the people I work with and their attitude towards the code. I'm finding kind of a mess / chaos wherever I go. The attitude of these Silicon Valley startups, once I get my chance to ask questions in these interviews, is very much in the vein of, ""Why are you asking these questions? We just need you to throw some shit in production so we can make money."" Even the coding problems are timed and you're expected not to trust your gut about things like validating user input and thinking through and then handling corner cases or quality attributes like security and maintainability. (I have had feedback on coding portions that says, ""...took too long to get a solution but honestly the reasons he took too long are attributes that would be valuable on the job."")

The real problem is that when I talk to the recruiter on the phone, or the person who gives me the technical phone screen, they are invariably people who have no idea what team I'll land in if I were to get and accept an offer. Usually it's like, ""Well there's these 5 teams in this location. You would work in one of them.""

But ideally, I wouldn't be wasting my time off on going into these companies without really knowing what the role entails and if I'd be happy working with the people and the tech.

Does anyone have any advice about how to figure this stuff out in a less expensive way on my time?",1540073655.0,2018-10-20 18:14:15
829,Senior applying at Google - bad idea?,20,83vwoq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/83vwoq/senior_applying_at_google_bad_idea/,14,I read that it's a bad idea to apply at Google if you are a senior software engineer because Google basically slots you in as a newbie regardless of prior experience. Any idea if that's the case? Is the pay lower too then? ,1520898345.0,2018-03-12 19:45:45
830,Switch back to Mid-level?,16,k0l9ro,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k0l9ro/switch_back_to_midlevel/,21,"I've been more of a Senior Developer at smaller startups for a while and wondering if I should consider a step back to mid level at a larger company or keep pushing for a true Senior Software Engineer role at a Big-N company.

I have an offer coming in from a Big-N company, but it's very much a Mid-level role and not Senior so debating if I should accept and rebuild my career there, or hold out for a true Senior role to avoid looking like I took a step backward on my resume.

14 yoe, my career trajectory looked like this since my Bachelor's degree:

- 5 years IBM Software Engineer
- 3 years Full-stack at 2-person startup
- 2 years Full-stack web and HTML5 game development at 50-100 person company.
- 4 years lead HTML5 game developer with some full stack web dev at 5-10 person startup (current).

Also received my Master's 2 years ago from a top 10 university if that makes a difference.

My job titles have been Senior, but have been mostly arbitrary for the past 9 years, I feel I'm at a Senior level in many respects, but the scale of my projects are under 200,000 users. I've also been more on the game development side of things for a bit, but wanting a change back to traditional software engineering. I haven't had many strong peers or mentors to learn from at my most recent startup so I feel like I may be regressing some from a code quality standpoint, though some of that may just be imposter syndrome. 

I'm getting interviews and struggling with some of them, though a lot of that seems like it may be needing more Leetcode and system design practice.

Thanks for reading, thoughts?",1606307876.0,2020-11-25 07:37:56
831,Job search experience for senior/lead devs during pandemic?,20,ja2vm4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ja2vm4/job_search_experience_for_seniorlead_devs_during/,34,"Have any of you that are senior level developers had to look for a job during the pandemic?  If so then what was your experience?  Did it take longer than expected?  If you are on a team that has hired recently,  were you drowned with resumes?

I'm asking because  I was laid off about 2 weeks ago.  I was given a good severance package, so I'm not stressed for money at this point, but im wondering how long the job search will be.   My semi-scientific research ( comparing indeed search results from now to last year) says that  job postings are down 50% in my area (tampa bay).",1602577232.0,2020-10-13 04:20:32
832,Good general topic programming podcasts,18,ijilxc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ijilxc/good_general_topic_programming_podcasts/,12,"I'm looking for technical podcasts targeted to your average senior dev that cover general topics and trends in the software development world. 

For instance, I found a YouTube talk about memory management in Rust. I'm watching a video right now titled ""Why isn't functional programming the norm?"" Etc. etc. 

I'm preferably looking for more technically oriented topics, but I'm flexible. Just talks given by smart people that will broaden my horizons. (I run like 5 hours a week, so I'm hoping I can learn a few things by osmosis.)",1598843949.0,2020-08-30 23:19:09
833,Your experience in securing a public web API,18,hkyuvc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hkyuvc/your_experience_in_securing_a_public_web_api/,43,"First up, I feel that this is the wrong sub so I'm prepared for this post to get booted. It does feel like a stackoverflow question but I've not found any particularly decent posts yet on the topic. This sub is feeling a lot more soft skills lately where back in the day I enjoyed (prob on a diff reddit account) a good tech conversation in here. So, my apologies and would love some advice that isn't stack overflow as to where to post. Re experience, bach. SW Eng, been a developer or lead in various capacities for maybe 15 years. I'm mostly chasing if you've had a similar problem and how it was solved. 

So a recent project I've taken charge of isn't  ground breaking, effectively format some data according to a particular algorithm and build a very small UI around it. I've taken the opportunity to do the UI in react as it was a nice fit and I quite enjoy the style when coupled with typescript. I'm not using server side rendering. This means its going to live on the client. 

Now, the important bit, the API is a pretty vanilla Spring MVC deal. In the past, I've always put any API behind auth but this will be public facing. Our data however is quite valuable and often scraped. We are continuously fighting the bots on scraping  (where are working on that seperately), my fear is that I've just made the job so much easier by providing it in JSON if someone were to tinker with the JS.

I would love some real world solutions that have helped. I've this far reduced the fields of the objects I've made available to strivtly only the fields that are in use. However, someone could still effectively take the UI (since its client side) and even hijack our API to practically host their own version. What are some options here?",1593873404.0,2020-07-04 10:36:44
834,"If your boss looked down on his employees attending conferences because he sees it as paying to let them be poached by other companies, what would you do?",18,hitnbj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hitnbj/if_your_boss_looked_down_on_his_employees/,11,"Would you at least try to leave your boss for a new team, or would you completely leave the company?

Or would you approach your boss head on and convince him that going to conferences are not a bad deal for him?

That's what someone I know is facing currently with his boss. He wouldn't pay for him to attend a conference because he sees it as letting his employees get poached. He is kind of paranoid about seeing his employees interact in the outside world to invest in their career.",1593572138.0,2020-06-30 22:55:38
835,Work Life Balance in DC? Government or Defense,18,gwvmom,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gwvmom/work_life_balance_in_dc_government_or_defense/,11,"Looking to slow down. Would working in the government or defense be a good idea in DC?

Not contract work",1591351896.0,2020-06-05 06:11:36
836,Feeling unmotivated during WFH in a management position and swifting between projects,18,gnbyo6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gnbyo6/feeling_unmotivated_during_wfh_in_a_management/,1,"Hey guys.

I have 10 years of experience, working in multiple projects with a wide range of stacks. I have more experience working with Java, but have worked in .Net and Node projects.

Since last year, I'm acting more as a project leader - I talk with the customer, gather resources and users needs, define requirements, test, organize the team and the tasks (priorities, prices and everything and such). Almost no programming at all.

I was working in 2 different projects. One of them I was analyzing a legacy code base and implementing new stuff, and was the project leader aswell. Since Covid, this project was put in stand-by, so I was just acting as project leader in another project.

I find myself happy working as project leader, but I don't do programming in this project. I face that as a red flag, since I like programming and don't have the chance of improving technically working.

Now, the project that was on stand-by is resuming all the activities. So I have to work as manager in one project, and have to act as everything in another project. I'm feeling very unmotivated with this, I believe it's because I'm having a lot of trouble in switching between the concepts of both projects.

I was wondering if this is normal. So I thought maybe asking to the community. Does anyone of you guys have a clue?

Thanks in advance!",1590012433.0,2020-05-20 18:07:13
837,How do you handle / resolve when you begin to realize there is a Cultural-fit problem with you and the team?,17,gikfqe,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gikfqe/how_do_you_handle_resolve_when_you_begin_to/,13,"these questions are based on some of my previous experiences in the industry.

currently, i am doing just alright. peaceful role as a senior engineer. but like every good thing, this won't last either, and switching has not been very well with me.

1. when you are interviewed and hired, you are expected to operate as a senior engineer. but ever since day-1 in the role, you are a new handy-man amongst the existing team of engineers that have a shared history of the product, designs, code-base, infrastructure? You begin to get sidelined a lot. your pull-requests are scrutinized more than everybody else's. you know what you are doing, you have learned over the weeks and got a good hang of what's going around, but it just doesn't seem to appear that anything you say and do aligns with the team overall?
2. nobody takes your word for what it is. either your defense for your overly scrutinized pull-requests, or your architecture or design fore-sight? or sometimes, they might acknowledge, but steal your credit.
3. you bring up non-tech problems such as accessibility / privilege issues, no adequate documentation for product, design, process etc, and lack of knowledge-transfer sessions, but management has other worries and is busy with other stuff. in the end, you are just a replacement, and it's your own responsibility to gather your necessary tools in order to satisfy management that hiring you wasn't a bad decision, particularly after the incubation period ends!
4. your company has hired and outsourced all the tech-effort to a third-party team, even then so, your company has also hired you. now all the tech-work is going to that third-party team, your management cannot / does not provide you with a list of tasks that you could be engaged in. even if you bring up a list, it'll eventually be given away to the third-party team. so you are practically out of distinguishing work, other than, at most, updating confluence wiki pages?
5. eventually you are let-go, because you failed to display any skills of a senior engineer, and have been more or less in the role of an experienced mid-level engineer?

my real problem with the above experiences is that, other than the current role, every other role elsewhere had more or less ended badly. i am introspecting if the problem is with me, or is it out of my control, because if i were unfit everywhere, i should have been unfit in my current role as well.",1589346439.0,2020-05-13 01:07:19
838,How do you mentor someone that seems willing to learn but is slow to ask?,19,geffzj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/geffzj/how_do_you_mentor_someone_that_seems_willing_to/,11,"Hello all

In my group there's a relatively new developer (been here over a year) and while his work on maintenance is ok, when they started developing a new tool I've found myself horrified with some of the design choices, like using global variables to return values.

I've been always approachable, when we talk I try to explain things as well as I can (and they understand AFAIK), not to bog them in too many different things to improve at once, and not writing out the whole code directly, just examples and guiding. I also said to talk to me as soon as they need, as it's easier to steer when once has not walked long.

But I feel like they take a bit too long to ask, and then there's too many things to change because of strange decisions.

How do you make yourself more approachable? Specially online, now that we are remote, and we wish it remains like this for as long as possible.

**EDIT** I'm just another team member, not the most senior either, but it seems that I'm the de facto tech (programming) expert (not bussiness knowledge expert though, others there have a decade on me).",1588779073.0,2020-05-06 11:31:13
839,Experienced Dev needing job search advice.,18,fp4zls,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fp4zls/experienced_dev_needing_job_search_advice/,12,"Hi Reddit,

I'm currently an unemployed engineer and I'm in a bit of a bind and I'm hoping the reddit community can help. I have 10+ years of experience and I have a very solid background. Prior to this whole coronavirus pandemic, I accepted a job offer for a start-up company in Seattle that only has about 3 months of runway in the bank but they were highly confident they would close a funding round and had term sheets ready to go so they extended me a job offer for my dream role, short commute, and it's a perfect fit for my long term career goals so I accepted the job offer.

However,  the coronavirus pandemic occurred, and now the company I've committed to joining says that investors reneged and pulled their term sheets for the next funding round so they are scrambling to raise money again but they are confident they can pull something together and still want me to join but they don't have a whole lot of runway in the bank so I would be laid off a few months later if they can't close the round. They said they'd understand if I didn't want to take the risk with only a few months in the runway but still wanted me to come on board. 

I did reach out to another bigger, more stable company that previously made me an offer and they still had an opening and extended me another job offer as well but it's for 75% of the pay and for a role I'm not excited about. It might be a minor step back in terms of long term career goals.  The pay is less and it's a worse opportunity, but given that the job market grinded to a halt because of the coronavirus, there's not much else out there so I'm in a position where I might have to take what I can get. 

So I'm in a bind and have one of two options: 

1) Take a chance and join the company I originally accepted a job offer from and hope they raise money within the next couple months. This might be challenging since VC funding might be on hold because of the coronavirus situation. I could get laid off and have a short stint on my resume and be on the job search again.  I'm concerned what a 3 month stint would look like on my resume for future employment so I think the risk is significant.

2) Decide to go with the bigger company with 75% of the pay and for a role I'm not as excited about and maybe job search again a year from now when the market recovers from the coronavirus. 

What do you think I should do?",1585224695.0,2020-03-26 08:11:35
840,"I'm currently at Big N and looking for opportunities, can startups beat my current compensation?",18,ev1ehp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ev1ehp/im_currently_at_big_n_and_looking_for/,38,"I've worked at one startup (4 years) and Big N (2 years) and I'm looking for better compensation.

As I'm doing my job search, should I even consider startups? My current compensations is in line with the data on levels.fyi and from what I saw at my previous startup pay was much lower.

Is anyone not at a Big N but making more than the corresponding levels.fyi amount?",1580219350.0,2020-01-28 08:49:10
841,How do you pivot into more CS-heavy jobs if you already have some programming experience but your 4 year degree is not CS or some other STEM?,19,er4h7g,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/er4h7g/how_do_you_pivot_into_more_csheavy_jobs_if_you/,7,"I know there's the options  of a Master's degree but I don't have the time or money for that. I don't have any paid tuition benefits at work and the work is pretty much run-of-the-mill SaaS web dev for a small startup.

However I am interested in moving into another area, Computer Vision. This is gonna be a far cry from doing CRUD web apps so I need your help here in paving my journey.

How do experienced people pick up the gaps in advanced CS topics in a way other than attending classes at school, but can still make you a serious contender like the applicants that *did* have a heavy CS course load at school?

Places like Uber, NASA, and Amazon look for SWEs that specialize in CV. For interns, they favor students that take classes in related math, CV and Machine Learning.

I am not a student, but a self-taught experienced web developer. So I don't know what my counterpart to ""study a lot in school and take the right CS classes"" version is like, to getting my first Computer Vision job. Essentially I need a place that has a position for it with hybrid status of ""Self taught, experienced in SWE but not in this very specific CS heavy niche"" where I want to be at.",1579506137.0,2020-01-20 02:42:17
842,FAANG or try my own thing?,19,eix9ct,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eix9ct/faang_or_try_my_own_thing/,37,"Hi All,

I've gloriously failed on 2 startups already and want to start working on a new thing, however a recruiter from a faang company reached out to me a while ago and now I'm looking for some good advice which random strangers on a random subreddit might help with -

If you would have the itch of an entrepreneur and the greediness of a sillicon valley employee what would you do?

1. sit down and grind LC till it hurts in hopes to pass their interview with flying colors?
2. push the interviews until you know for a fact that piles of cash for your own thing are not part of your destiny =\\",1577994282.0,2020-01-02 14:44:42
843,Good companies to work at for graphics programming that are *not* in game development?,18,e9vshg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e9vshg/good_companies_to_work_at_for_graphics/,10,"I mostly work as a web developer in a professional capacity, for about 7 years now, but I have a greater interest in computer graphics. I have no formal CS education so most of my math-based theory and knowledge is self-taught. My level of knowledge in graphics programming mostly lies on the API level, and higher. But not as low-level like Vulkan or drivers programming. I have some knowledge with WebGL, and DirectX based frameworks (Monogame, XNA etc.) and some limited paid experience in the form of freelance projects.

What I'd like to know is where are some good places for me to work at, as a mid-level (maybe on the precipice of senior-level) developer interested in computer graphics but not in a video game company since I know how unbearably tough those work lifestyles are for the pay. I would be okay delaying my transition into a senior-level position if I have to do it to cross into this type of programming

So far I'm considering fields and areas such as

    CAD/drafting
    Maker spaces/3D printing
    Stats-based visualizations
    Architecture and civil engineering
    Pro-based simulations (maybe even military?)

And there could be other fields you can suggest, too.

What companies do you know of that not only work with graphics of this nature, but are also good places for an engineer, that provide good benefits to their workers, decent raises (stock options not a must), good management overall? I'd like to read about your experiences and recommendations.

I should probably also mention I am in a constant state of job seeking from being unemployed at the moment.",1576223382.0,2019-12-13 02:49:42
844,How difficult is it to switch between different areas of software development?,18,e5k4lv,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e5k4lv/how_difficult_is_it_to_switch_between_different/,13,"Hi, as the title might imply I'm a recent CS graduate. I graduated with an M.S. from a state school back in August and decided I wanted to look for a software engineer position instead of entering a Ph.D. program. I have a couple of questions that I feel would be more suited for those who have experience in the field and hope the people here wouldn't mind answering. For brevity's sake, I'll try to keep the questions concise. 

1. How difficult is it to switch between different areas of software development? For example, would a Backend Java Engineer find it tough to switch to Firmware Engineering?
2.  A related question, is it difficult to switch between industries (e.g. internal tool development in insurance to a consumer products company) as a developer?
3. In your experience, do companies and teams view candidates with an M.S. differently?

Thanks in advance!",1575421734.0,2019-12-03 20:08:54
845,Portfolio for Solution Architect,18,dz6ger,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dz6ger/portfolio_for_solution_architect/,5,"I have an on-site interview scheduled soon, for a solution/enterprise architect role at a medium-sized organization that wants to modernize its Tech. Stack and support more users by implementing a scalable platform. I am being asked to bring an excerpt of my portfolio to showcase to the team during the interviews.  This is where I am confused as I don't have a portfolio,  this is neither a dev role nor a designer role and I am bound to some NDA from my previous jobs.

What kind of things I can show during that interview without breaching any past confidential agreements?",1574304887.0,2019-11-20 21:54:47
846,Switching from DotNet development to GO development,20,dshz6a,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dshz6a/switching_from_dotnet_development_to_go/,27," Anyone have experience switching their development career from big enterprise companies to small startup companies? I'm a DotNet developer which means most of my job opportunities are huge enterprise legacy systems. I'm strongly considering switching to GO development since it's a newer language with much more greenfield development. Also, a lot of gaming companies are using GO for their back-end. Any advice or input is much appreciated.",1573083522.0,2019-11-06 18:38:42
847,Owning a huge project as a beginner,18,dets9d,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dets9d/owning_a_huge_project_as_a_beginner/,16,"I'm a junior dev (little less than 2 years of experience).

My company is B2B, but we have very limited B2C experience as well. I work in a team where I have been given complete responsibility of a product (a web application) that will be B2C (I mention this because our B2B applications have 50-60 users at most, and only of them is a web app). It is up to me to choose the technology stack and design the architecture to support thousands of concurrent users. My mentor can meet with me probably for 30-45 minutes each day (sometimes every alternate day).

I am overwhelmed with this task since this is my first experience doing entire system design (I'm really excited as well, since this is a steep learning curve). My question is: how do I make best use of my time available with my mentor. A common issue I see is I don't know what I don't know. How do I get to know these things? Functionally, I think I can develop this, but what will be a judge of whether the code I've written is good or not?

For all you seasoned folks out there, do you think reading books as a supplement would help (if yes, which ones would you recommend for applications that need to scale)? I've seen the book Clean Code pop up in this sub a few times, do you think it'd be helpful?

&#x200B;

EDIT: Please let me know if this needs to go in r/cscareerquestions instead of this sub",1570530330.0,2019-10-08 06:25:30
848,The big corporation that rejected me now is asking if I'm still interested!,18,d5ghph,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d5ghph/the_big_corporation_that_rejected_me_now_is/,32,"And that's after a month of getting the rejection, with a message, ""we are giving the offer to another candidate"". 

I so want to say fuck them! I've already gotten another offer that paid the exact amount I'd asked and it's multiple times lesser commute tham the big corporation.

BUT! 
I don't want to burn any bridges but, frankly, I felt played during the interview process e.g. feeling that they just used me to set a benchmark; making me wait because the hiring manager is ""on a long leave""; did all the programming tests that were never even brought up during the interview, etc.

I'd like to return the favour but by not burning any bridges. Any suggestions? I was thinking to just set an even higher salary demands and see what I can get from these folks. You see, the place is one of ""those places"" that can make you wait because ... they can ...

Experienced devs, any views, advice, etc.? Honestly, I'm feeling a bit vengeful (lol), and bitter with the whole experience with them.",1568753291.0,2019-09-17 16:48:11
849,Ramping up - coming up-to-speed. What do you do?,18,d0j1l9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d0j1l9/ramping_up_coming_uptospeed_what_do_you_do/,3,"90% of my programming experience, i have adopted project code-base from other developers, that i replaced, or joined alongside, with minimal to no support for coming up-to-speed.  


7 years ago i used to take pride in my overwhelmingly extra-ordinary ability to read code-base like a magazine / novel, and identify root-cause for bugs and fix them immediately. and i used to wonder how is it that other developers much older and senior to me can't seem to put one-and-one together.  


past 3 years have been an entirely opposite up-hill battle. i have been struggling to wrap my head around the code-base, let alone being able to identify root-cause for bugs and potential fixes, to fixes that necessitate editing code in multiple files, to new-feature development even, based of existing architecture implementations.  


part of the problem clearly is lack of adequate support from peer developers. nobody's got the time. i used to not have time back then, to share some tribal-knowledge of the operations within the team, more so than inefficiencies with the tech-stack. when a feature-functionality comes up in discussions, as a engineer i have a vague idea, but the reality of code implementations seemingly is entirely different.  


i am sure many senior and super-senior engineers and architects come across this problem while job-hopping. how do you cope with it?",1567816539.0,2019-09-06 20:35:39
850,Insight wanted regarding growth and promotion,19,cumf1k,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cumf1k/insight_wanted_regarding_growth_and_promotion/,15,"(TL;DR at the end)

Context: I was hired into this company with several internships as a Junior dev, and 6 months later I was ""readjusted"" to a Mid-level dev due to the level of proficiency I showed to the team. The company has 5000+ employees. 

I've been having great performance reviews and several one-on-one s with my team lead where I'm showing good progress on the deficiencies he's pointing within my work (be it technical-wise, personality-wise or other types of fault). I am somewhat expecting to be promoted again at the end of the year (not a Senior role, but to a higher grade of Mid-level), where the main difference in the official promotion guidelines is the leadership capacity. 


This is where I need help with. 

Recently the team had a chance to develop several new systems.  Me alongside another Senior Dev lead the way for one of the systems and built it from scratch and I personally take a lot of pride on how much work I did for that system (even in terms of architecture).
Alongside this, we still need to support our old systems and do some regular maintenance/occasional new features on them. 

My lead believes I don't show leadership because when there is some analysis to be done regarding new features for the old systems, I don't go the extra length of explicitly defining the way the new feature should be implemented (however I do give a general idea of how I believe it should be implemented, just not in a way that's ready to copy and paste into a sprint story), and following it up on its development with the dev that implements the following story. 

TL;DR: I believe that when given the chance (like how it happened with the new systems), I show that I can lead and take decisions and make people take my side. My boss believes I should be more proactive with the old stuff and be more detailed and following through the development. Against this, I just start to think that my lead just wants me to save him time and effort by doing this myself and not leaving this for him to do.


Can someone give me a different perspective into this? I don't know what other way I can see this that will allow me to grow.",1566635237.0,2019-08-24 04:27:17
851,Just finished my first ever dev test (for an interview)!,19,c6k4hq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c6k4hq/just_finished_my_first_ever_dev_test_for_an/,21,"I haven’t done a proper programming test in a MILLION years! What more for a job … 

It had **3 questions**, which I needed to complete **within 45 mins**. High level view of the questions:

&#x200B;

**Easiest** (apparently, it’s the first question, so … it had to be the easiest … ): 

* String manipulation e.g. putting the first character to the back, and the back to the first, *efficiently*. 
* *All individual words* in any given string must be applicable for the operation.

&#x200B;

**Hardest** (the question was actually super long but I’m just going to give a summary): 

* A question where I needed to count the occurrences of the letters say, “c a t”, irrespective of these letters position in the sentence, in any of a given set of strings like “c*atherine*”, “*container*”, ""*caterpillar*"", ""*ball*"", ""*cart*"", etc., within *O(whatever)* efficiency.  And, it must start with the letter ""c"", then ""a"" and ""t"" follows it. 
* So the answer will be 3 for the given example. 
* Oh, ""Catherine"" and ""catherine"" must be treated dissimilarly (so they want a validation for that as well ...).

&#x200B;

Jesus Christ…

&#x200B;

Okay, obviously some of these are quite high-level since I don’t want to say further about the test or the company; but once the question started asking me to do those “*make sure it’s O(log2n)*” kinda shit, I’d go blank for awhile … 

To the experienced dev, could I get some words of advice, encouragement or even some perspective for a noob like me? I’m pretty sure some of you may say these questions are super easy … but for someone like me who has not done these sort of questions for billions of years, I’m a bit blank right now …

My solace here is … that I kept telling myself that “*at least I tried it*” ('cause I almost didn't event want to do the test!). Oh, I answered only 2 out of 3 …",1561756868.0,2019-06-28 17:21:08
852,What do you think of moving into AWS Solutions Architect Certification space for an experienced Java Dev. 20 years of exp.?,18,c3ujh6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c3ujh6/what_do_you_think_of_moving_into_aws_solutions/,14,"Looking into future direction with an eye towards more income, no travel, possibly fully remote work, is this a good idea to get certified as AWS Solutions Architect? I like the high level aspect of combining different pieces of the puzzle. I can see that there may be a big market for migrating monolithic or on-premises infrastructure to the cloud and Amazon is a big player in the space.

&#x200B;

For additional context: about my background, please see: [https://www.reddit.com/r/ExperiencedDevs/comments/byu198/what\_did\_i\_miss\_software\_engineer\_20\_years\_of\_exp/?utm\_source=share&utm\_medium=web2x](https://www.reddit.com/r/ExperiencedDevs/comments/byu198/what_did_i_miss_software_engineer_20_years_of_exp/?utm_source=share&utm_medium=web2x)

&#x200B;

How many you are following this path? Is this a good long term path? I normally have no appetite for certifications as I have none an I've had no issues securing jobs in the past. Since I would be entering a new space, so AWS cert. may help boost my chances.",1561265080.0,2019-06-23 00:44:40
853,"Back of the envelope calculations for system design, 2011 vs 2019 query",18,bz37qh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bz37qh/back_of_the_envelope_calculations_for_system/,7,"Hello All,

&#x200B;

Context: 

I am trying to understand the latency figures for various operations (disk read, memory read etc.).

&#x200B;

I came across these two articles - 

1. Article from 2011 w.r.t latency numbers - [http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)
2. Recent image from SRE CON 2019 -  https://imgur.com/trXO7T8 

&#x200B;

Request: 

1. Are the 2019 numbers correct or the 2011 numbers correct? 

&#x200B;

\-",1560229048.0,2019-06-11 00:57:28
854,Building concensus in a team or organization,17,bx4vbi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bx4vbi/building_concensus_in_a_team_or_organization/,11,"Having a mutual understanding in a team is immensely powerful. For example, if a team agrees on the overall architecture or direction of the product, it can move more swiftly and waste less time discussing the same issues over and over and over again.

Building concensus is hard though. As experienced developers, how do you approach this problem?",1559782424.0,2019-06-05 20:53:44
855,Pet projects and algorithm puzzles,16,bi8gpg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bi8gpg/pet_projects_and_algorithm_puzzles/,39,"Experienced and or Senior devs, how many of you that are working, are also doing side projects.   How many of you spend time studying these algorithm puzzle questions (like hackerrank and leetcode)? 

I asked my recent coworkers (all also experienced and or senior) none of them do this.  Yet on here it sounds like everyone is, and spending hours a day at it too.",1556461955.0,2019-04-28 10:32:35
856,What's the interview loop for someone with 7 years of experience at one of the Big 4/tech companies?,18,ao6s2l,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ao6s2l/whats_the_interview_loop_for_someone_with_7_years/,26,"What's the interview loop for someone with 7 years of experience at one of the Big 4? I'm a Senior SWE at a big F500 and I'm thinking of applying to one of the Big 4. My domain speciality is in transportation logistics and supply chain consolidation but I'm afraid a place like Google won't care much for that.

I haven't interviewed in some time - how well should I prepare? Do they ask leetcode questions to people who've worked in my space or are coming in at my level?

Thanks.",1549592796.0,2019-02-07 21:26:36
857,How do I get out of sysadmin tasks?,17,ahgb6z,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ahgb6z/how_do_i_get_out_of_sysadmin_tasks/,10,"Full disclosure: I did this to myself. I never meant to, but I was dumb, and here we are. 

I work in a company with a fairly flat management structure. There are decision makers, of course, but for the most part everyone does their thing and it all works out. 

There's some gaps though and I made the mistake of trying to fill them, because those gaps affect my own work. So now I'm managing vms in the cloud as well as our source control. This started as ""I'm going to investigate"" and turned in to ""I'm the only one who knows anything about it."" We have an IT department. I work in the product development department. 

Yah, I know, I did it to myself. How do I rectify this though? Of course you all know nothing about our internal structure but I'm looking for suggestions. 

I am NOT a sysadmin sort of person. My heart and soul are developers. ",1547882488.0,2019-01-19 02:21:28
858,[Bitchfest] How the hell do I actually level up my problem solving ability for whiteboard coding?,18,a3i6fr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/a3i6fr/bitchfest_how_the_hell_do_i_actually_level_up_my/,11,"Honestly, this post is probably going to mostly be bitching.

I have 5 years at Big N and after a ""sabbatical"" I'm getting ready to get back in the game and have the liberty to essentially be practicing and preparing for interviews as a full time job.

I still feel like I suck and that most likely I wouldn't even pass an interview for my old job(I got in through relatively easy phone interviews for internship). Sure there's a certain level of problem I can handle pretty well but that is mostly because it's straight-forward or I've seen the idea enough times before I can work through it.

But there's a certain class of problem that require certain leaps of creativity that just aren't really something I feel very competent in in the context of a high pressure job interview situation. These are problem I could probably go away with for a few hours and be able to come up and implement the idea and discuss it well after some time alone.

Maybe I wouldn't mind discussing solutions at a conceptual level but when you're in the heat of it and need to think about specific details of implementation, , ei. tracking indices and error conditions, etc, along with being coherent conceptually, I really quickly get flustered and overwhelmed.

These kinds of experiences make me resent these problems even more and really just not even enjoy working on them. Combine that with the fact all this dedicated preparation feel like a complete waste of time in some ways, I could be doing other much more enjoyable things that might actually make me better at my job, like working on a hobby project. 

But instead of that, instead of being able to play to my strengths, I have to bash my head against stuff I seem to be particularly weak in and don't particularly enjoy just so I can get a job where I can do unrelated things that I'm already mostly pretty good at and enjoy much more.

Can I actually break through this barrier? I've always kind of sucked at the whiteboard coding stuff even when I've practiced a lot in the past. If there's some actual path that can get me to a point where I feel fairly confident and competent going into these whiteboard interviews? I know it's unrealistic to aim for passing 100% all the time. But if I could at least get to a point where I feel like I could solve most of the problem most of the time and be able to pass interviews for most of the jobs(which I know I can already do and have no doubt in capability in that regard).

If there is some path to this it would be worth investing a few months(or even more) since I feel once I had that confidence I'd basically be set for life. 

Is it really just LeetCode and work harder? I can do that but I feel like there's gotta be a way to work SMARTER to get to this point rather than grinding 100s of problem. And even then, like I said, the problem isn't so much solving this problems in my own terms in a comfortable environment, the problem is more being forced to solve them in a contrived environment, while being constantly judged and under a time limit. 

Any advice? How do you guys think about these things? What helps you? Could I move to Des Moines or something? Maybe, but I like living on the west coast and making a high salary and I can most certainly hack the actual work at the companies that request these kinds of interviews. What to do?",1544082695.0,2018-12-06 02:51:35
859,"How do I go from chop-shop developer to a developer at a large, good engineering firm?",18,8m6mqr,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/8m6mqr/how_do_i_go_from_chopshop_developer_to_a/,8,"I'm looking to breathe new life into a career and since you guys are among the smartest and most driven developers (given the high emphasis of big Silicon Valley companies on this sub) I know you'll be able to solve the difficult career problems.

12 years ago I was a senior in college and and graduated around the lowest part of the great recession. Despite the recession, I was able to find a web development job in a relatively short time of three months.

**My experience**

The problem is, I got myself pigeonholed. I was working for a small web agency, then a mom & pop business, then a startup, then another small web agency. They were all low-paying jobs, and unbeknownst to me, they were also slowly poisoning my experience with poor practices and ignorance of skills that would otherwise make me marketable.

In 2015 I knew only how to program in the LAMP stack, without frameworks, only hand-coded JavaScript/PHP or on a CMS like WordPress, Joomla or Magento. But front-end frameworks? Code reviews? Unit testing? Nah, forget about it. BTW I didn't know about these things back when I was working at these places. I was still very ignorant back then.

**My goal**

I am looking to join a large firm in a engineering industry related to electronics tech. I'm more interested in working with physical side of technology than must making web apps all day long. Agency work is rife, but most of them teach poor habits. My applications get mostly ignored at the big tech companies (not even big 4 but places like Intel- I'm interested in semiconductors and electronics research), and I have no industry buddies to help me out.

**Why I didn't choose CS**

Another complication, I did not graduate with a STEM degree, i got a BA in web design and programming. It's at a regular state college. I wanted to transfer to Computer Science but I had been in college for 5 years at that point. I had gotten senioritis, not liking the idea to stay in school for yet another 3 years just to fulfill the CS major.

Plus, I was paying most of college with grants, and are good only for your first 150 credit hours, which I was getting pretty close to. So I decided to just get the BA web dev degree to cut my money losses short. I ended up only taking three CS classes before graduating.

**Finally...**

Give it to me straight, I have a ton to catch up with, right? I don't work right now so in theory I have a lot of time to learn more things, but in reality I don't have a lot of time because I will eventually run out of money.

Anyone have an idea of what I should do first to head towards my goal of doing more than chop shop work? And a high-level plan from start to finish? Any suggestions? Should I even consider returning to school to complete my CS? Because I'm thinking it's not just impostor syndrome- the lack of credentials feels real.",1527325271.0,2018-05-26 05:01:11
860,At what point in your career do interviewers stop asking Leetcode/HackerRank types of questions?,19,7scu1d,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/7scu1d/at_what_point_in_your_career_do_interviewers_stop/,17,,1516721754.0,2018-01-23 10:35:54
861,What is your FAVORITE technical interview?,15,ke9kul,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ke9kul/what_is_your_favorite_technical_interview/,32,"Alright there are plenty of post complaining about bad technical interviews and whiteboard sessions here, but what are your favorite ways you've been interviewed (or have carried out an interview if you think it was effective)?  

Was it a pairs-coding debug session? Working on an open source issue? A short take home assignment? It would be great to hear some positive experiences on this topic for a change.",1608155655.0,2020-12-16 16:54:15
862,Arrogance v Confidence,19,jt59ho,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jt59ho/arrogance_v_confidence/,7,"Hi devfriends - 

I've been interviewing recently, and - as I'm at the 5 years-of-experience level, I'm beginning to work towards more senior roles.

Part of that is that I'm trying to sound confident in these interviews - as lots of the roles are hoping to help change processes or mentor etc. but I'm worried that I'm instead coming across as arrogant.

Where do you draw the line between the two when you've interviewed? How do you show that you know what you're doing, and that you can be in leadish type roles, and be able to be sure of yourself, without coming across as smarmy or arrogant?

If you've interviewed devs, where do you like to see that line? How do you tell if somebody is confident, or if somebody is cocky?",1605250440.0,2020-11-13 01:54:00
863,Finding a 4-day (32 hour) work-week job?,17,iz7s9x,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iz7s9x/finding_a_4day_32_hour_workweek_job/,23,"I'd be happy to trade 20% of my income for a 4 day workweek where I could pursue my master's degree that I'm going to be starting soon. This isn't an option at my current job. Any tips for how to find a position like this? I'm presuming that startups would be more receptive to this than a bigger ""rank and file"" shop? It seems like something I'd have to pitch to a potential employer rather than wait for a job listing advertising it.",1601016863.0,2020-09-25 02:54:23
864,Has anyone else received a list of words you are no longer allowed to use?,18,ir4vrk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ir4vrk/has_anyone_else_received_a_list_of_words_you_are/,66,"Recently had a company rollout of words that are now considered “Micro Aggressive”. A phrase I have never heard before. 

Some words kind of make sense, although I guess it just never occurred to me.

Whitelist
Blacklist
Master
Slave
As well as a few others

Although why “cakewalk” is offensive I have no idea.

I legitimately don’t care, just find it a bit strange.

Anyone else seeing this happening in your jobs? Thoughts?",1599908323.0,2020-09-12 06:58:43
865,"[Rant] Sometimes I hate being a ""Full Stack"" developer",16,iph7mt,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iph7mt/rant_sometimes_i_hate_being_a_full_stack_developer/,14,"The amount of times that I have to do stuff like:

* fix why I from one server to another, and spend 2 hours troubleshooting just to find out the networking team changed a rule in the firewall that broke things.
* Run last minute updates because someone released a change to an API and didn't tell anyone.
* Do all the server administration, provisioning, etc.
* Meet with people, do business analytics and requirements analysis,
* write all the code for a project (This part I actually enjoy)
* coordinate penetration testing
* do all the paperwork for IT approval to migrate outside the firewall.
* Get phone calls late in the evening for support issues.

This is my first professional dev job. I've been here for 3 years and its not getting easier (granted, I work in public health during a pandemic). I miss contracting because it felt like less work. At least with hosted solutions I lose the requirement to do all of the server administration, firewall rules, etc.

Some days I just want to be able to ""call the guy who does that."" But it increasingly always seems to be me. I'm the guy who does that.

\#BrettFromPhoenixProject

I guess my question is: Is all of this normal? Do most developers just write code? How often are the rest of you in the weeds on server configuration? Do I need to recalibrate my expectations on what the job really entails? Should I just enjoy the amount of freedom, responsibility and autonomy that I have? Because the other side of this is: What I say goes. Because I do it all, if I say something can't be done, or it will take 3 weeks before I get to it, my word is the end of the discussion (I also have a lot of trust I've built up over the years).

It feels like I work at a startup, from what I've heard that startups are like, but I work at a large organization with over 5000 employees.",1599691531.0,2020-09-09 18:45:31
866,Should I burn bridges with everyone that critically underpaid me and undervalued my work?,17,i8t6tk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i8t6tk/should_i_burn_bridges_with_everyone_that/,22,"I worked four different jobs as a programmer, all in places that are rather small and non-techy (with the exception of one small tech consultancy), but nonetheless I was really underpaid for all my work. Compared to an average developer salary range of $60k-70k from local companies that lack any distinctive or outstanding qualities, I was being paid $25k to $40k. These places also didn't care much for their developers and did not have a long term roadmap for their technical roles. Not only that, but at least one I know of was committing tax fraud for the purpose of avoiding employer taxes. He wanted to connect with me on LinkedIn but I ignored it.

I don't think my other past employers will ever reach out to me again but if they attempt to I will just give them the cold shoulder. I don't know if anyone else would relate with this, but would you have responded the same way with them? I know that's it's basically throwing away a bunch of potential connections for jobs. But it feel like it's taking a big load off my back- like letting go of a troublesome ex- and getting a fresh start.",1597320866.0,2020-08-13 08:14:26
867,"/r/ExperiencedDevs, what are good interview questions to ask when looking for a designer?",17,hkv4k6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hkv4k6/rexperienceddevs_what_are_good_interview/,12,"Hello!  

First, a bit of context about my self - I have personally been doing graphics editing for over a decade (since early HS), and up until one point also did my own (shitty) web designing myself.  
I have since then worked with a few freelance designers, and managed one for about 2 years (while working together on many things, as she was a regular designer working on a web app for my company). I've been keeping partially up-to-date with stuff, between reading interesting articles ([let my plug in one of my all time favorites](https://uxmovement.com/content/why-you-should-never-use-pure-black-for-text-or-backgrounds/)), looking at stuff at dribbble, looking over various portfolios, and of course working with or managing designers.  

Thing is, in all this time, I have never, ever, interviewed anyone for the role.  

Now, in a new company I joined, we are in need of a designer, and my current (pretty high) priority is finding one.  
While finding applications isn't gonna be a problem, I'm really at a loss at what I should ask them, beyond standard behavior questions and looking at their portfolio (which are important, but do not tell the whole story).

Thus, I am asking the few of you who might have had this experience - if **you** were tasked with hiring a designer over the next week, and your reputation depended on their success - what type of questions would you ask? What type of hidden clues would you look for?",1593855546.0,2020-07-04 05:39:06
868,How is being on-call still a thing? Curious to hear ExperiencedDevs perspectives,18,hj4r01,ExperiencedDevs,/r/cscareerquestions/comments/hj4gbm/how_is_being_oncall_still_a_thing/,37,,1593612718.0,2020-07-01 10:11:58
869,Deep Dive into Hadoop/Spark/Etc,15,hc7be2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hc7be2/deep_dive_into_hadoopsparketc/,2,"What are good resources for really learning ins and outs? Right now I interact with all things HDFS, and have generally learned a lot about how to do things, but the actual setup/configuration/nuanced inner workings eludes me. Basically I write a lot of spark code but would want to really understand how to optimize out data store and pipelines for our use case.

An example: I read a blog post like [this](http://comphadoop.weebly.com/) and wonder how I can learn this level of detail across the entire ecosystem",1592624495.0,2020-06-19 23:41:35
870,Any companies suggestions that are less stressful? Good for families?,17,gyrdwm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gyrdwm/any_companies_suggestions_that_are_less_stressful/,24,,1591617055.0,2020-06-08 07:50:55
871,Do companies typically cut salaries to retain devs?,16,gq8z5j,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gq8z5j/do_companies_typically_cut_salaries_to_retain_devs/,27,"Given the current status of the world, many companies instantly laid off many, many developers at the drop of the hat. However some have opted to furlough or even just to cut salaries. I'm just wondering in the tech space, do companies typically cut salaries to retain talent and loyalty? Also would these employees typically have more loyalty to said company or would they instantly look for another job?",1590432809.0,2020-05-25 14:53:29
872,Yearly Performance Reviews,17,frufav,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/frufav/yearly_performance_reviews/,24,"In 15 years of employment, I have never had a useful PR.  

My first job (massive Defence Contractor) determined raises and promotions before self assessments were opened, the ratings were forced to an approximate bell curve for every level of management.  Goals were assigned at the program level and were a nice collection of dull ""follows HR guidelines"" and ""will provide value to the project while supporting the customer blah blah blah"" leaving no room for personal ones.

At the next company, I was a programmer for hire.  On one side, I didn't have to do useless PRs, but on the other I didn't work with anyone in my chain and they weren't allowed to know what I was doing.  The manager would meet with the contract's PM at a fancy restaurant to chat, then I'd get a raise.  My sole goal was to make sure the customer was happy.

My current job is like the first.  Decent sized in-house development group for a nonprofit.  Goals are written for me, are boilerplate and meaningless, my director has the same opinion of the process as I do.  Last year I met with the head of HR to talk about it and she said it exists to identify who is doing really well and to provide documentation necessary to fire someone with minimal lawsuit threat.

So what does a good PR system look like?  Do they exist?  What do you actually put as goals and targets?  Does anyone work with a review system where your performance and your compensation actually demonstrate any relationship?  Are they just technical metrics (bugs closed, PRs approved, etc) or do they involve coworker feedback and soft skill considerations?",1585615984.0,2020-03-30 20:53:04
873,Seeking advice - workplace politics,17,f2rbtn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f2rbtn/seeking_advice_workplace_politics/,12,"Hey guys, this might sound more like venting because it is well needed. I started a new gig as a senior dev at a large firm(not faang). we had a new baby around the same time who does not sleep very well at night (we consider waking up 6 times to be a good night, and we take turns). Due to this, it has taken me longer than usual to ramp up, my quality of work has really suffered, and I am struggling.  As part of my ramp-up,  I have been assigned a mentor. I'm grateful because my mentor is really bright, knowledgeable and approachable. 

The issue I run into is that my lead(s) and mentor just completely tear up my work in code reviews. I'm not entirely innocent here as I mentioned my quality of work is suffering. I've been trying desperately to make them aware of my situation in hopes that there is some empathy, but I'm the only person on my team has kids, and I remember when I didn't kids and I was not really getting what it was all about. My mentor seems like a type-A perfectionist, where that is actually my greatest weakness. I'm not a perfectionist but when I'm in full steam I overcome that with passion/working harder. The most understanding appears to be my manager, a parent. I am not a bad dev, I'm just a bad dev right now, or at least I think.

A while back I overheard a private conversation with my mentor to my lead saying generally positive things but the issue is my quality of work. In response he agreed that it is appropriate to work the feedback up the chain. He then spoke to my boss about this without me(I had a hunch it was going to happen) and my boss decided to tell him that he needs to tell me. He then had the conversation with me. He omitted certain details(I'm not sure if for malice or because he forgot, or if he wanted to give it to me in chunks). When I brought it up to my boss that we spoke she mentioned all the things she thought needed to improve.

All of this I have been internalizing and dealing with it, putting a smile on my face and just trying to do the best job I can, take the feedback to heart and try to improve. The problem is that the feedback here makes me feel terrible, I feel bullied and it kills my confidence leading me to not want to put my all into it. All the while, its a stain on my reputation and its getting back to my boss. I know when I put my heart into my work and can focus, I am force to be reckoned with, but I can't break this cycle and I'm worried about it ending badly.

What can I do?",1581543466.0,2020-02-12 16:37:46
874,Questions to ask during integration call,19,euq5vk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/euq5vk/questions_to_ask_during_integration_call/,7,"I'm new (first 3 months) at this company, but experienced in web development. The company has set up a first call tomorrow (short notice for me) with a partner to meet people involved and discuss an upcoming integration we want to complete using their API. The lead dev here was scheduled to be on the call with me, but has a dental appointment at the scheduled time. They want to keep the scheduled call, so I'll be the sole technical person on our team on the call.

My experience tells me that I should be asking for available documentation today and reviewing it, as well as gathering any questions my lead may have for the partner. My imposter syndrome is flaring and other warning bells are going off, and I'm wondering if I may be missing something to ask for while on the call. I haven't handled integration calls before, typically just using an API after my employer had already gone through previous steps. 

What should I be wary of, what should I do or not do? Any hints or tips appreciated. Thanks in advance.",1580171259.0,2020-01-27 19:27:39
875,I’m overwhelmed by an interview opportunity at Big G; in need of some guidance,16,epgzc4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/epgzc4/im_overwhelmed_by_an_interview_opportunity_at_big/,31,"I’m having some sort of analysis paralysis at the moment, but I can’t speak with anyone I know personally about it, so I’m hoping to gather insights from other experienced devs here.

Not very long ago, [I was seeking advice on how to make it into big tech](https://www.reddit.com/r/ExperiencedDevs/comments/e9xdof/painfully_average_developer_dreaming_of_getting) and in there I said I had about a year to prepare. Some time later something happened at my current place that made me decide to start looking into switching so much earlier than originally planned. I updated my resume and sent them to a few places. I really wasn’t sure about it, but I applied for multiple positions at Big G anyway. The next week, I got emails from different (Big G) recruiters inviting me to chat (which apparently shouldn't have happened). Fast forward to today, I was sent an email detailing the recruitment process and was asked to schedule my phone interview. I’m panicking like hell.

I just feel like I still have so many things I don't know. I'm fairly confident about my understanding of most data structure fundamentals, but I check out Leetcode and it makes me feel stupid. I have a bad feeling that I'm going to fail my interview so I guess my focus right now is to do well enough to at least still be considered some time later (probably a year or so).

What I'm thinking is to tell the recruiter that I'll be ready in 2 weeks time then do the phone screen. I'm considering a month but I feel like it'd be better to get this over with quicker, so I can move on from it early. I'm still employed and I'm in talks with other places so I have a safety net so to speak. I don't know if I'll do well enough there to move to on-site, but I really hope I don't get marked so badly that I'd be forever banned to even try again. If I ever made it through the phone interview though I'm thinking of asking for another month. Does this sound sensible, or am I overthinking this?",1579194973.0,2020-01-16 12:16:13
876,1YOE - Joined F50 Company - Am I stagnating or is this just...how it is?,18,ejc694,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ejc694/1yoe_joined_f50_company_am_i_stagnating_or_is/,19,"Looking for an experience developer to answer this - 

I work at a F50 company that is into tech, but not a tech company. My team does work on the cloud, I'm certified, I'm happy here. It's been 10 months.

I work on maintaining something. I'll roll out some small features, but in honesty, it's mostly bug fixes, refactoring, tiny features. I help people get onboarded onto our service too I guess. Sometimes I'm the go to point of contact, but that's just because of people moving around recently.

As an intern, I worked at a 5man startup for shittttt pay and I wrote 8/16 APIs their whole app is based on. I wrote their sms system (easy, sounds big). I probably wasn't qualified, but hey.

My question is - Am I... Stagnating? If I'm being honest, it's not as if I know all the technologies my app uses. A lot of it was written beforehand, so unless something fucks up, I'm not touching it. E.g. We build a docker image that gets deployed using an internal B/G framework. I've never written my own dockerfile, nor implemented BG, but I know how they work etc. I've had to debug Docker issues, EC2 and shell script issues, whatever. I'm not writing end to end tests, but I fix and refactor ones we use often. I do a ton of work on AWS, but I'm not deep. I still Google how to squash commits lol. I know the shit out of Python (generators, context managers, decorators). I do some small bash script modifications, but not an expert.

Basically, so much of my day to day is tiny features, updating some else's code, whatever, that I don't even have bullet points as good as previous internships.

As an intern I got to implement big features for some small startups, but here in F50 the pay is 2x and I feel like im stagnating. I'm learning and enjoying it, but I look at my year and it's just nothing really stands out. No resume bullet points lol. 

Can anyone senior chime in? I'm not a wicked smart guy and I don't spend too much free time coding. I enjoy my work, but I work from home sometimes just to keep up so I don't think I wanna spend my life coding at home. Happy to Leetcodd or whatever, but I'm not a hobby programmer is all. I'll do it to learn something.

I wanna know how I'm doing. I have really bad anxiety about job security and Reddit just further adds to it. If you don't know Node, GraphQL, React, coding at home, GitHub, aren't at a tech company, whatever, your career is dead and stagnating. So in 5 years I'm fucked basically.",1578065689.0,2020-01-03 10:34:49
877,Freelancing on the side?,14,efyfuo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/efyfuo/freelancing_on_the_side/,36,"Anyone have advice for freelancing esp. those that have done it to make additional income while working FT? 

I'm looking into ways to supplement my income so I can invest aggressively.",1577411339.0,2019-12-26 20:48:59
878,I worked at five different places and they all have zero written code tests. Am I just unlucky as hell?,18,dk8kb3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dk8kb3/i_worked_at_five_different_places_and_they_all/,43,"And now when I go to interviews I often get asked what my experience with unit testing and integration testing is like. And nobody at past jobs talks about regressions. RIP me. Sounds like the fates conspired to play a big cosmic joke on me. If someone else had that same experience, and also never spoke with other developers, how were they supposed to catch on that the lack of testing is not good? 

Is it all really a bad luck streak or is testing less common than people online make it out to be? These companies were all small and not tech heavy in where budget was allocated (aside from one startup). And some just use QA to catch bugs and validate the completion of issues, so that may have something to do with their disinterest in writing tests.",1571542692.0,2019-10-19 23:38:12
879,"Those of you who work from home, do you do any sort of part-time side work?",17,dcl9x4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dcl9x4/those_of_you_who_work_from_home_do_you_do_any/,8,"I currently work from home and I generally get all my work done quickly and then some. I've volunteered for some extra work at my job but I still usually find myself with a decent amount of extra time during the week. I usually use that time keeping my skills sharp / running minor errands.

I've been toying around with the idea of doing some online tutoring. I was a tutor in college and really enjoyed it. Also, I think that might be something that I can do when I have down time and not need to keep to a specific schedule. I don't particularly **need** more money but I feel like I could be doing more on any given day.

Does anyone have any experience picking up a second job when your first job is a remote dev? Would it be better for me to try and start some kind of side business instead of part-time work? Should I try to find a second engineering gig?

Curious to hear what others think about this.",1570101602.0,2019-10-03 07:20:02
880,Do you utilise time-sheets?,15,cwmry6,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cwmry6/do_you_utilise_timesheets/,52,"A friend of mine was asked to put in the hours he's doing on excel e.g. 15 mins for scrum standup, 4 hours to code, 3 hours for support, or n hours to do so and so.

In the end, the sum will be 8 hours and he'll do it every day, for two weeks. After the 11th day, he need to pass his timesheet to his lead for further processing; then it loops again. 

This is how they track the devs workloads e.g. if he's spending too much time being dragged to meeting or people asking for help, his lead can come and help.

Do you guys think this is a good idea?",1567036882.0,2019-08-28 20:01:22
881,"Would ""not giving feedbacks"" or ""staying quiet"" the best ""F U"" for toxic places?",19,cfuo5h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cfuo5h/would_not_giving_feedbacks_or_staying_quiet_the/,11,"I noticed it could reach a point where even by ""giving constructive feedback"" or ""providing input"", in some ways, ***can be used against us*** by toxic managers/ bosses. Especially those psychopaths that love playing politics/ favouritism whenever possible.

Has any of the experienced dev here ever reached a point where ""staying quiet"", ""not giving any feedbacks"" or ""just giving the absolute necessary"" to any particular situation (even up until you leave the place), **the best ""F U""** you'd do to such toxic places?",1563708587.0,2019-07-21 07:29:47
882,Moving from general software engineering into security engineering,17,bgmtjm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bgmtjm/moving_from_general_software_engineering_into/,2,"I’m wondering if anyone here has had experience doing this. I’ve been working as a software engineer for a while (~3 years) and the security field seems more interesting or at least a good way to specialize. Is it an easy transition? Are there any differences in compensation?

Ultimately I’d like to focus on more technical challenges such as optimization, architecture, and research instead of maintaining legacy code bases and I think this move would afford me that opportunity.",1556088226.0,2019-04-24 02:43:46
883,Fear of being pigeon-holed vs settling into a domain?,18,bgfvol,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bgfvol/fear_of_being_pigeonholed_vs_settling_into_a/,9,"I left a mid-level position at a company that offered little growth, long-ish hours, and immature software practices yet was in a domain I loved and was very fun (video games).  I joined as a senior engineer a company that's closer to home, higher salary, less overtime, and proper ""big-boy"" software management, but I dread going into work on Monday... I just don't have the passion for the domain (audio routing and processing software).

&#x200B;

One of the main reasons I left is that I'd often feel like if I was laid off at company A I'd have a much harder time finding a job due to a more specialized skill set.  Now I feel like I should have just stuck to the domain that I enjoyed.

&#x200B;

Is it possible to have a generalist skill set and  still settle into a domain that I like?",1556051885.0,2019-04-23 16:38:05
884,What traits must an experienced dev have to be considered to work at NASA?,18,bf3ey5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bf3ey5/what_traits_must_an_experienced_dev_have_to_be/,12,"I've seen posts on the CSCQ sub about NASA but only for internships, not full-time jobs. I am not sure what I should be doing to make my resume more appealing for software work at NASA. I know it'll be hard work, but want to know what that ""hard work"" comprises for a non-intern position. 

I gotta figure out what it the career version of ""high GPA and very good grades"" because I only know that much as far as their internship requirements. Now figure out what the accomplishments I need for a full-time job.

Caveat: I graduated with a non-STEM degree. Also, most of my dev work is done in near isolation. I don't have experience working in technical teams with more than three people. But having that and several years of work experience is still worth more than zero work experience. A bird in the hand is worth two in the bush.

 I don't even know how it works to get an internship, much less how to become attractive for a full-time job. Do I need to work on some big tech project? Build and program a robot? Would my web dev experience help if I want to join NASA as a web dev and then move laterally within to learn more ""closer to the metal"" work?

I don't care about the pay really, I don't expect NASA work to have Silicon Valley level pay, I am just very interested in space travel.",1555731894.0,2019-04-19 23:44:54
885,Do You Have to Be a Good Developer to Move into Management?,19,b8s510,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b8s510/do_you_have_to_be_a_good_developer_to_move_into/,15,"I'm interested in becoming a software developer eventually moving into management. I have the soft skills necessary for leadership, but I am not an amazing coder. Are the people promoted to management really good at developing or do they just have the soft skills necessary for management?",1554285755.0,2019-04-03 06:02:35
886,Navigating the industry as an experienced dev with ASD/Aspergers?,19,avv5h8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/avv5h8/navigating_the_industry_as_an_experienced_dev/,5,"I'm a software dev with around 9 years of experience. I have a BFA degree which means I took a non-traditional route. I took some CS course electives but a bunch of stuff was self-taught. I started in 2007 at the age of 25.
 
Things seemed to be going all right in my first few jobs. I moved away from my parents for the first time, lived by myself for 3 years. But then I hit a dry spell for jobs in 2010 and moved back with family in 2011. Since that point it's been a failure to launch. I have difficulties living as an independent adult mainly due to financial instability.

Additionally I share traits with Asperger's or that would put me on the high functioning side of ASD. I am not officially diagnosed, but I have had older family members tell my parents that I probably have autism. Even a former boss once asked me in private if I have it.

This is not totally new to me. I know I have personality quirks, and I'm also introverted so I prefer to spend more time by myself than not. But I can deal with most people in office jobs, and have experience working in teams. I don't yell nor freak out on anybody.

I have been told that my current streak of interview failures has to do with my ASD traits, combined with stagnating a bit in the industry. Did some mock interviews with a few professionals, been told I meander too much in answering ""tell me about your past jobs"" questions. 

I don't keep a close network of peers, and I only follow-up if I need them which I'm told is too transactional behavior. I've gone to a few meetups but nobody really wants to talk jobs with me for the long term.

So I also started to catch up on some tech, doing projects with more recent frameworks and such.

Well, I have news for you, companies around where I live don't care if you simply have personal projects using XYZ. They could easily find someone with professional experience in XYZ already. Everyone and their mom wants to be a web dev. It's not like it was even 5 years ago.

**About my work experience**

I have never worked at a company larger than ~200 people, and all but one had fewer than 50. Most of them are small startups and digital agencies.

These jobs don't pay their programmers well. In the Chicago job market and I make around 50 to 60% of the median for local devs.

I attribute the above point by starting with a $12/hr entry level job and having repeatedly losing the current job before lining up another job offer.

Never took a senior level role, never worked with more than 3 other devs in a group. I have some client-facing experiences, though, discussing project specs and such.

I have never been involved in part of the hiring process for other developers.

Most offers I get are in the form of contract jobs. This goes with the above three points and in some places these contracts sound like they *probably* misclassify their workers.

My resume is good enough to get a 1st round with some FAANGs (I don't make it to final rounds) but I'm not really focusing strongly on them right now.

I have worked remotely exclusively since early 2013. This is probably bad for social skills, especially if you have Asperger's or ASD. I only catch up with a small group of close friends. (No, they don't work in tech nor have any good job leads)

My last constant 40 hours a week job was in 2014. I was working for a startup and then got laid off due to budget cuts.

Since then, I could only get short-term contract gigs here and there, and it's financially not very stable.

I'm okay with a full-time job at a medium sized ""boring"" company. Most tech interviews don't ask DS/algorithm questions. But I either get rejected at my resume or fail to get an offer. Time gaps probably scare them. Either that, or I probably fail to be a good culture fit.

**Moving forward**

What can I do as someone with my social traits and condition to improve the offer rate at interviews, at companies *I actually want to work for*? Again I'm not aiming for FAANG but somewhere reasonable, more stable place of work where I can actually grow as a developer again and maintain job security.",1551411234.0,2019-02-28 22:33:54
887,Stagnation,16,atbppd,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/atbppd/stagnation/,8,"Hey everyone,

&#x200B;

I am looking for a bit of advice here.  Long story short, I feel like I am stagnating/have stagnated in my current role. The part I am having trouble reconciling is that I work for an amazing company. 100% remote work, great PTO, decent salary,  and a great group of people for coworkers/boss/management. I really like this place and am not sure I would find this type of environment somewhere else.

The unfortunate thing is the work has gotten repetitive, dull and is pulling me in directions that I have no interest in. It just isn't fun anymore and the days just seem to drag on.

I worry about someday being in position where I need to find something new, but being stuck with an outdated skill-set. I have done some self learning on some current technologies, but that is minuscule compared to what it would be like using those in a professional environment.

The other thought that has come to mind is to try not to worry about it and try and find fulfillment outside of work. I have lived below my means for a long time, which means I could survive for quite awhile if I ever found myself in the position I mentioned above. I could then take that time and really focus on learning whatever technology is currently hot.

Is anyone willing to share their thoughts or been in a similar situation?

**TL; DR:** I work for a great company, but feel stagnant and unfulfilled. Should I care?

&#x200B;",1550830224.0,2019-02-22 05:10:24
888,Does having big name companies on your resume make it easier to get interviews?,19,ak5er3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ak5er3/does_having_big_name_companies_on_your_resume/,18,"

Assuming you’re an engineer worth his salt do the big brand names matter as much?

Currently I’m working at a startup in SF and am kicking myself for not choosing the FB offer. I keep hearing about how your email/linkedin blows up once you break into the industry and I’ve only had 2 companies reach out to me in the past 8 months. One of them was a company in the same building as my employer so I dont really count that one.

I’ve been programming for ~10 years and based on my peers’ expertise I’d say I have the equivalent of ~7yxp but on paper I only have 8 months. Being indie for so long has its downsides I guess.

The main issue is I want to work part time remote so I can work on my own ventures, switching to FB after a year of the startup grind and having to stay there for a year sounds pretty miserable. But if it sets me up favorably in the market then I guess I’ll do that",1548567767.0,2019-01-27 00:42:47
889,What are the companies that DON'T give DS/Algo based interviews?,18,aglwpz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/aglwpz/what_are_the_companies_that_dont_give_dsalgo/,20,"To expand on the post yesterday by u/sliceofarray (where he felt like he had to study for months to pass interviews), what are some places where interviews aren't all about how much you memorized in your DS/Algo classes?

I think the general consensus is that those types of interviews might be fine for fresh grads (who have no real world experience, and basically only know what they learned in school), but they are horrible at determining how an experienced developer works.

So, what companies have you found that are particularly good at giving interviews for experienced developers?
",1547679416.0,2019-01-16 17:56:56
890,How do you fix working for many years but not having the skills to go with it? Experienced person here with that problem.,17,88klzs,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/88klzs/how_do_you_fix_working_for_many_years_but_not/,8,"Simple question, but it's a serious problem I think gets greatly overlooked due to the lack of people that ended up ""riding the short bus"" in their career to gather insight and see how they overcame that problem.

Assuming you have that problem, I want to present two scenarios. 

1. You currently have held a job for many years, but it's turned you into a laggard. You may not know if the company provides opportunities good skills and responsibility growth. 

2. You are currently unemployed. Someone must hire you, with your faults and all, knowing that you are a laggard. You must present yourself well despite having jr. level skills but sr. level number of years.

For each case, how would you solve it?",1522549727.0,2018-03-31 22:28:47
891,Increasing your business-value as a software developer,17,84gvgk,ExperiencedDevs,https://blog.logrocket.com/want-to-increase-your-worth-as-a-developer-learn-to-impact-the-business-f7f78ec23ff5,0,,1521089712.0,2018-03-15 00:55:12
892,How to deal with fear of becoming irrelevant / unemployable?,15,kedtz4,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kedtz4/how_to_deal_with_fear_of_becoming_irrelevant/,17,"Hi all, I have been a developer for four years now, in three different companies. I have come to appreciate the craft over time as intellectually draining and tough. I am somewhere at the average developer range where I can do the tasks assigned to me, and sometimes design stuff from scratch but I struggle with coming up systems, and just seem to lack the need or strong interest to keep improving myself.

However, I am quite satisfied with the work and freedom it provides. My issue is how long it will last. See, the problem comes from the fact that interviews are tough: in many cases I find them hard where I am challenged with problems that I am either not able to solve or solve it quite slowly.

I have had companies giving me an offer after solving a problem but not optimally but I feel like it is only a matter of time with the flood of new people and remote-first idea that one will compete with many humans now for each job. I fear that one day, despite me being alright dev, I won't be able to clear the interviews.

Anyone here has such an anxiety? I sometimes think of this after a failed interview and it makes me anxious about future prospects.",1608169359.0,2020-12-16 20:42:39
893,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,15,kctmor,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kctmor/ask_experienced_devs_weekly_thread_a_weekly/,36,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1607962399.0,2020-12-14 11:13:19
894,First time contracting through a staffing agency - what should I know/ask to make sure I get a good contract?,17,k89xy5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k89xy5/first_time_contracting_through_a_staffing_agency/,12,"Ive read horror stories where people got tricked out to health insurance, or had no benefits available like PTO or no paid holidays. I've never worked with a staffing agency before, what should I know/ask the staffing agency to make sure that I'm not getting screwed over?",1607345430.0,2020-12-07 07:50:30
895,"I have 8 years of experience, don't feel like a senior but my colleagues are all seniors and I'm a better dev than most of them, should I apply for a senior role in my next job?",15,jofv9s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jofv9s/i_have_8_years_of_experience_dont_feel_like_a/,15,"I've worked for 4 different companies in 8 years as .Net Developer, never felt like a true senior cause I don't think I'm able to design complex scalable systems by myself or lead a project directly with a customer from scratch (give estimates, plan tasks). I feel like I'm a strong mid-level dev, I have a good understanding of the .Net Framework, Javascript, SQL Server (for a dev), can do fine all the tasks that are delegated to me and I can come up with a solution for something on a existing project but I lack confidence on designing a full system and having to defend my point of view of why something was done in a particular way if asked about it.

I'm gonna move jobs early next year and I'm thinking about applying for a senior role because in all my years working as a dev I worked with people who beat their chests saying they are senior devs (some of them are actually leads) but wrote very poor code, didn't understand (or even use) basic things like Dependency Injection for example (a classic one). I never considered myself as a Senior but I've updated my linked in title as one basically because my colleagues are according to them and basically if those fucking idiots can be seniors, I'm also can. 

My biggest fear is to land a job as a senior dev and not being able to deliver anything and just fail hard until I'm fired. Should I try to land a senior role and ""learn"" on the job or just be realistic and get a job that I think I can do it and when the moment is right I'll be promoted to a senior role.",1604597113.0,2020-11-05 12:25:13
896,Is it a waste of time to reapply to a company that you have failed multiple times?,16,j285qo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j285qo/is_it_a_waste_of_time_to_reapply_to_a_company/,21,"Yeah it seems to me you wouldn't be a good fit if you applied and failed interviews numerous times, but then again you're given another chance by the company...",1601442186.0,2020-09-30 01:03:06
897,Moving on from contract-only work to full-time work?,17,igg1gl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/igg1gl/moving_on_from_contractonly_work_to_fulltime_work/,18,"Has anyone here moved from doing only contract jobs to full-time work? I know that developers usually stay in full-time work for a long time before doing contract work, but I jumped in the contractor pool right from the start. And I've been a contractor for as long as I can remember being a professional developer.

The bulk of my contracting work has been with two companies. One is a digital agency and another one is a young startup that has been around only one year when I started. Aside from that I contracted in a slew of freelance jobs. 

Contracting as a freelance isn't a very good lifestyle for financial reasons. While the first two companies didn't pay super well, I was still doing good enough for myself. As a freelancer, I was usually just scraping by.

All in all, I did a variety of work at these places, but they offer little in the way of career movement even for full-time programmers. They don't generally practice good engineering practices but I attribute that to being small places that have a small time budget for be short-staffed.

I do not mention in my resume that I do contract work. It brings up negative connotations- presents the question of why company didn't hire me full-time. But I hate the feeling when asked if I contract anyway and I have a shitty time trying to lie. However I just say that the companies were just structured this way to hire more contractors (which is true to a big extent).

What companies make good gateways to full-time work? 

Should I aim for mid-large companies or startups? 

Would re-visiting digital agencies be okay even though those companies have the reputation to grow mediocre developers? 

I'm on the fence with consulting work though. I have tried approaching local consulting companies before and was rejected for being insufficiently skilled on the tech side.",1598403231.0,2020-08-25 20:53:51
898,How do you want to be interviewed?,16,ico6mo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ico6mo/how_do_you_want_to_be_interviewed/,23,"I can't figure out how I want to be interviewed and I'm interviewing others.

Interviewing for a mid developer, approaches and issues... 

To clarify my definition of a mid developer is someone who is capable of getting a set of requirements and producing working production ready software from them with little help for a majority of tasks once up to speed with the company. The design would be reviewed still by a senior developer, and someone would do a code review and user testing after of course.

Phone call: Talk, see how the person fits, talk about past experience, what they would do in certain situations... This doesn't test anything about ability and could be good for a junior hire that is expected to learn on a the job or a senior hire that is expected to run the team instead of coding where different skills are actually needed.

White boarding: Normally tests fundamentals, algos and data structures. A person with 5 years developing may just not have a use for the algo ask about or isn't up to date with the latest terminology... but the recent masters student who has 0 hands on coding can ace it. Hire them and after the expected onboarding time they are struggling to write code in projects with a quarter million lines because they are used to school one off projects.

In person (live) coding: Takes time from both sides, feels super pressured with someone watching what you are typing, and probably avoiding cheating (Google/Stack Overflow) even though that is what real life programming often is and expected.

Take Home Test/Project: Takes lots of time from person applying and viewed negatively due to this. It does test the persons ability to deliver especially in a COVID environment where everyone is WFH anyway. I think ""cheating"" is expected, if you can source a template, 20 packages and write 100 lines of code, great instead of 1000, great. The only thing I would say that is not allowed is copying entire program from the internet and having someone else to do it. The follow up talking interview where the code is reviewed though should establish if the interviewee coded it. Could do a little bit of live coding also to test for that.

Other approaches, thoughts on which you prefer or how you would do it?",1597874519.0,2020-08-19 18:01:59
899,Do you guys work in a non GIT version controlled environment? Need your experience & advises.,16,iaw2md,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iaw2md/do_you_guys_work_in_a_non_git_version_controlled/,27,"We use TFVC ( Team foundation version control ) for our source control which is not based on git. Since It has
*  no concepts of pull request/ PR 
*  No easily switch between branches
*  Each code review loses context with previous one
*  No hooks / pre-commits

I've amazed how using GIT can simplify everything, but since the team size is large and they're used to working in this flow, how'd do I make the PM yo migrate us to GIT workflow. I've already shared them a document with pros & cons.


Do you guys have experience like this ?",1597626509.0,2020-08-16 21:08:29
900,Developers who use Windows: What tools do you use for development? How easy/difficult is it for a long time linux user to migrate to windows?,16,i8xe3q,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i8xe3q/developers_who_use_windows_what_tools_do_you_use/,24,"So my company is providing Windows workstations for all engineers. I am used to Ubuntu from a very long time. The tools I use are:

1. Python, pyenv, poetry
2. Spacemacs with Microsoft LSP
3. Docker, docker-compose
4. Haskell, stack

Do these tools work on windows seamlessly? If not, are there alternative tools?

I'd like to hear from devs using windows systems on how they've set up their dev environments and if they wish they were on Linux instead.",1597342838.0,2020-08-13 14:20:38
901,Job offer but still have other interviews lined up,17,i7pmyx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i7pmyx/job_offer_but_still_have_other_interviews_lined_up/,6,"I have 8 YoE as a Python/Java dev working for big investment banks but I've been out of work for the last year as I was off travelling until the pandemic hit. I applied for 30+ jobs had 10 different interviews but today I got a job offer (via email) for a more DevOps role inside Cyber Security for another big bank. HR want to schedule a call with me to to discuss salary expectations and some regulatory & compliance stuff before they can proceed to offer.

But I have 3 more interviews lined up for this week for a more developer type roles. I wasn't expecting to get the job tbh and for some reason I'm not filled with joy (maybe I'm still in shock). The DevOps role I think would be good for my CV as its exposure to tools and tech I haven't used before but I'd be worried about not being able to move back to being a dev again.

Also the DevOps role was looking for only 2+ years experience while the roles I am interviewing for at the moment are 6+ so I'm worried that the salary will be a lot less than I would get at another company. My thinking is to delay the call with HR until tomorrow afternoon (I'll have done two interviews by then) level with them that I have other interviews scheduled and to tell them what I am expecting for salary at them other companies.

So my questions are; 

1. If I go into a more DevOps role will I struggle to get into another dev job? 
2. How can I manage to get the best salary for a role that only looked for 2+ years experience?",1597171929.0,2020-08-11 14:52:09
902,How do you balance long term research and development with the short term Agile sdlc,16,hqfiwo,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hqfiwo/how_do_you_balance_long_term_research_and/,22,"Hey guys,

I've been a dev for about 6 years now, lead for 2 (at 2 different companies).  Like most places, we roughly follow an Agile methodology: x week sprints with deployments at the end, ceremonies for planning, retrospectives, grooming etc.

One thing I have noticed has been very difficult is allowing time for me and my devs to do the research and experimentation that often leads to large scale platform improvements.  Since many times this work is inherently nebulous, it cant be cut into a ""5 point task"" with deliverable code at the end of the sprint. The majority of us are new to the platform <1yr, so we aren't very familiar with the codebase as a whole, but our project manager isn't keen on items called ""Poke around and find out more"" as she perceives them to not have any direct business impact. Of course I disagree with this, but my counter point of ""We still don't know what we don't know"" about the platform isn't gaining us any ground.

Currently I tell my devs to take the time at the end of a sprint, when all planned items should at the very least be in testing, to do their research and try and find places that could be cleaned up and refactored, but then the work done then isn't reflected or recorded anywhere, and unfortunately reports and spreadsheets are all our management understands.  How do you and your teams reconcile longer running / nebulous efforts of the past, with the new short term driven Agile methodology? Has it been successful?

&#x200B;

Edit:  

Without going into too much detail, the main tasks that our application is supposed to execute on a daily basis cause large locks for other parts of the application, and are taking increasingly longer to run. Since these operations happen at night, the general take from management is that they aren't really impacting us now. My fear (backed by tracking the increased time on a weekly basis) is that these tasks will very soon start to run into the morning and delay work for people in the business at the beginning of the day.

Which specific task people might ask? As far as my analysis can tell, almost all of them are scaling horribly. While there may be some core ones that are affecting the others, these are the kinds of thing I would like to take time and do, or have someone else do. However, the daily cadence, and difference in data load between our production environments and our local development environments make this process slow and somewhat undirected if that makes sense.",1594676743.0,2020-07-13 17:45:43
903,Unhappy with my current job but can't switch yet because of the pandemic. How do I make things a bit more bearable?,16,h090a0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/h090a0/unhappy_with_my_current_job_but_cant_switch_yet/,17,"I apologise as this post will contain a bit of a rant.

I've been in my current project for a few years now, but even up until now, we can't even get the product out to our intended users. I don't know where to begin, but there are lots of problems from management to architecture to the actual aim of the product that we're building. I'm just a bit frustrated because all of the ideas I put forward in the past to make things better have mostly been shot down in favour of getting something out fast, which is weird because even with that as a strategy, like I said, we've yet to release the system for wider availability. The only ""users"" we have right now are a handful of internal people who are essentially part of our team, but even they are frustrated using the system. Even hinting at investing time to setup a full-fledged CI/CD system gets received with concerns, and this is after the management asked us to sort of tighten the feedback loop. The way we do our operations is practically flip the switches manually as the data flow through our system. Our architecture is painful to work with: a distributed monolith of a handful of services that ultimately rely on a central service that owns the database. That doesn't sound too bad as I think there are use cases that could fit that architecture, but from my perspective, it's just frustrating; all the complexities without much of the benefits. We don't even have proper observability mechanisms in place. Our code bases don't spark joy to me; our team can't even agree on clean code consensus like indents and column limits. Automated tests are few and far between.

I think it's reached the point where I don't want to bother anymore. I'm done with trying to fix things, so I'll just do what I'm told. I feel like it's not very productive stance, but I'm just tired of trying make things better when I don't get the support anyway, not beyond the nod of agreement. I have a direct manager who I can talk to very honestly about things, but even when they agree with me, it's always as if there's just no time to do the right things (even when we've wasted so much time kicking our system to operate).

Overall, I guess I'm still quite fortunate to have my job and get paid as usual, however, I still feel as if things could be better. I've started looking and actually have a few companies who said are keen to make offers, but because of the present situation, we need to wait until things slightly improve. I came here to air out a bit and see if there are people who are in the same boat, or have been in similar situations. At this point, I'm just waiting for the chance to jump off of this ship so to speak, but how to I make my remaining time here a bit more bearable?",1591817243.0,2020-06-10 15:27:23
904,Change jobs for money and dead end at 45,15,gwhiiq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gwhiiq/change_jobs_for_money_and_dead_end_at_45/,15,"Need you advice. Been offered a very good position on a public institution working as an app support engineer (not purely dev but dev + admin), the pay is very good (10 to 15K + net per year) but seems like by the time the contract ends in 5 years I will be in a dead-end, no career growth in between and no management experience at 45. Besides, I will also be moving away from a 100% development to cloud engineering and bug fixer in any app/language that passes by.

Should I move or continue where I am, expect to build a career, and offset some of the pay gap?",1591306380.0,2020-06-04 17:33:00
905,Have you ever or will you ever take a counter offer?,17,gsvs44,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gsvs44/have_you_ever_or_will_you_ever_take_a_counter/,26,"Today is my last day with my current employer.  And while we are way past the counter stage, I thought it would be a good topic to discuss.

I've always been told since a younglings that you should never take a counter offer.  It just leads the the company taking you back then sucking the life out of you.  They will then throw you into the streets once they're done with this.

 
I of course rejected the counter offer from my employer.  This is the hardest and longest a company has tried to counter offer me.   They were persistent because of all of the issues going on currently and I left at a bad time.


Anyway.  I'm inflexible in my views.  But what are yours?  Any interesting counter offer stories to tell?  Ever accepted one?  How did that work out.",1590797374.0,2020-05-29 20:09:34
906,Is reading books a sufficient way to gain the knowledge to be a great engineer?,15,g72cfg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g72cfg/is_reading_books_a_sufficient_way_to_gain_the/,17,"I know that nothing beats coding itself, but I enjoy reading (even technical books) more than I enjoy coding. My long-term goal is to become an exec, but I know that I need to substantially increase my knowledge of tech. Are books a sufficient replacement? If so, any books you'd recommend?",1587733415.0,2020-04-24 09:03:35
907,"How to progress in DE career, want to switch my job",16,faqxu9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/faqxu9/how_to_progress_in_de_career_want_to_switch_my_job/,9,"I have been in software engineering since the past 6 years, it has been a mix of different domains/technologies. 

For the first 4 years, I had been into full-stack development with a little bit of PHP and later on large part into React, Nodejs stack.

Then I moved into Data Engineering in the same company, extensively worked on setting up Kafka pipeline, worked on writing ETL jobs on Apache Spark using Scala. The entire team was new into DE, so learned about things in DE majorly from the internet, trial and error, nobody had any prior experience, a lot of times burnt our hands while trying out different things. The data pipeline is set up and quite stable, later on, have been writing a lot of ETL jobs in Spark and Scala and using Oozie for scheduling. I am looking for a job where I can learn from people who are experienced and know DE. But the technologies that I am working on seem to be far less in demand. Everyone is asking for Python/Airflow. I have worked on Spark majorly using Scala API. I am not proficient in general Scala, like Actors/Cats/Akka and other libraries. I can't say I actually know Scala better since scala is a lot bigger than just Spark. I feel stuck in the current job right now. I have applied to many companies but it seems they don't care about the breadth of work that I have done. All I get is rejections. How do I proceed in DE career?",1582902850.0,2020-02-28 10:14:10
908,When is it time to leave your first job?,17,exu1d7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/exu1d7/when_is_it_time_to_leave_your_first_job/,7,"I like my job. It's more interesting than my internship, I get paid enough to support my lifestyle and contribute to retirement / savings, my manager doesn't overwork me, I've made a few friends with coworkers around my age and I've learned a lot for my first real tech job. 

I'm also a really easy person to please. I get along with most people quite well and I'm easily excited by new experiences. 

Why would I leave? I'm the least paid person among >10 other new grads with my level of experience and title^1 , I have no idea what I'm doing in this part of the country^2 , my team has no senior tech role to learn from^3 , and I'm not passionate about what products our business sells^4

I feel like the right move for my career is to move on but I don't know if it's worth sacrificing my friends and comfortable lifestyle that I have. Maybe I'm just in a bad mood after learning about other people's raises/bonuses, but realistically they stay late/arrive early while I don't. I'm also at no apparent risk of getting fired/laid-off if that was a concern. 

--------------------------------

details: 

^1 no new grads held on to their level 1 title for more than 12 months (myself included). I asked my bosses why I was paid less and didn't get a real explanation, they claimed to not know salaries outside my own team/branch of tech. The difference is between 5k~15k (I make 98k: medium cost of living) despite there being no difference 6months ago.

^2 my family lives across the country and I miss them. I like nature and my location sucks for that. I have nothing tying me down to live where I do. 

^3 my team briefly had one but some re-orgs lead to them becoming my manager and leaving them little to no time to mentor me with technical chops. They just make sure our team isn't unintentionally breaking the codebase. 

^4 I don't buy or use our products outside of work and I'm not a fan of the ethics in our business but there's a only a small list of companies that would satisfy this 'requirement'",1580702005.0,2020-02-02 22:53:25
909,Ask the EM: How Can I Prepare to Eventually Move into Engineering Management?,17,ern23t,ExperiencedDevs,https://blog.pragmaticengineer.com/how-to-to-become-an-engineering-manager/,2,,1579597746.0,2020-01-21 04:09:06
910,Full Stack vs. Specialist,16,dol7us,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dol7us/full_stack_vs_specialist/,17,"Hey Experienced Devs!

So I've been doing this about 15 years, and most of my career I've been a full-stack developer.  Now, I'm in a company that is about 95% specialists, with Backend or Frontend being specialties and very rarely do the paths cross.

What is your experience?  Are you used to seeing a strict FE vs BE divide or is this an anomaly?  What do you think the proper path for an engineer should be?  What sort of path do you think is healthy for an organization?

&#x200B;

edit:  I missed some important context.  I'm an Engineering Manager.  I'm asking because I'm looking at hiring plans and looking for opinions on what the mix should be between ""specialist vs. generalist""",1572353874.0,2019-10-29 08:57:54
911,Breadth vs Depth in different domains,17,dmovf8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dmovf8/breadth_vs_depth_in_different_domains/,4,"I assume this is a problem many people face in their careers. I currently have a bit over 4 years of experience, and I wouldn't consider myself an expert in anything. I call myself a full stack dev. I know a decent amount of backend and frontend.

What I mean by that is that I can create my own stacks in AWS/Azure (bit rusty but not bad) using CloudFormation/ARM templates for my microservices, create the APIs, the Databases, and the release pipelines. I also good with React, better than your average ""backend"" developer.

That being said, I know lots of other people in my team, org, and even friends at other companies, who have the same amount of experience as me but are *very* good at what they do. Some of my friends working in React area really good at frontend. They're UI wizards. Friends who work in backend are really good with creating their own stacks and whatnot and writing the backend code, even more than me. Friends in Ops are really good at dealing with release pipelines and the tech stack.

Anyways, I wanted exposure to a lot of things, but it's starting to seem like maybe this isn't viable. People on my team are commended for being experts and having ""high impact"", which they definitely do. But I've always followed the idea that I'm whatever the team needs me to be. Maybe it's because I've always been the most Junior person on the team, but I've always been randomized by things. ""Oh we really need you on the front end this week"". ""Could you go back to working on the backend"". Meanwhile dedicated Backend and frontend devs stay in their respective areas. Those same devs are also occasionally asked to give other teams pointers. So if one person on a team is a SQL expert, many people will reach out from other teams for tips and pointers, reviewing their PRs, etc. I just feel like I'm more of a general full stack dev who doesn't have impact outside  my own team.

Will it be detrimental to my career if I keep doing what I'm doing? Or should I learn a particular area in depth and become an ""expert"" who can then help both my team and other teams in the org?",1571988646.0,2019-10-25 03:30:46
912,What are some ways to upskill at leading discussions of technical books?,16,delcy3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/delcy3/what_are_some_ways_to_upskill_at_leading/,11,"My work has an engineering book club. A month ago, they picked the book [A Philosophy of Software Design](https://www.amazon.co.uk/dp/B07N1XLQ7D/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1) by John Ousterhout. I had already read the book and was a big fan of it, so I volunteered to lead the discussion. So I broke it up into blocks like so:


> ch 1-4 (27 pages) Gives some grounding definitions and presents the core argument of the book: make modules deeper.

> ch 5-8 (30 pages) Presents about several techniques for building ""deeper"" modules and how to think about the value of abstraction layers

> ch 9-11 (34 pages) Continues with more techniques for building ""deeper"" modules and how to judge where responsibilities should live.

> ch 12-15 (38 pages) Starts a new discussion of how to name things well and what makes for a good comment.

> ch 16-21 (35 Pages) Concludes with discussion of refactoring, automated testing, the value of obviousness and how to approach performance tuning.


And for the first section, we'd talk about it a month from then. I suggested the following questions that people might think about while reading:

> Do you think the author's way of describing complexity makes sense?

> Do you find any Pull Requests where talking about ""cognitive load"", ""change amplification"", or ""unknown unknowns"" was useful for identifying things that should be changed?

> The author argues that modules should be ""deep"" and argues against the value of keeping classes small. Do you find this persuasive?

> Do you spot any potential misinterpretations of the author's arguments that we should watch out for?

> Do you have an argument against the value of module depth? (Since we're just talking about code style here, even arguments offered as a 'devils advocate' can be valuable.)



And we agreed we'd have a discussion on slack at a particular day/time on slack about the first section. I sent out calendar invites. When that time rolled around, I re-posted the question and nobody responded for an hour. Then, once another person responded, the discussion did pick up...among myself and three other people. I was left feeling like I kinda failed. 


So what are some ways to learn how to lead a discussion of a technical book?

What makes for a good discussion question?",1570492509.0,2019-10-07 19:55:09
913,"Senior dev asked junior dev not to get ""too excited"" on a given assignment",17,cxq2si,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cxq2si/senior_dev_asked_junior_dev_not_to_get_too/,8,"We have this very *optimistic* and *energetic* junior developer who seemed to get excited with any given assignment; the junior dev is doing okay but the key highlight here seemed to be the dev's optimistic and energetic ""persona"".

During a performance review, the senior dev told me that he remarked to the junior not ""to get too excited"" with a given assignment. Frankly, I'm not too sure what to make of it; was the senior dev (who's the lead) fair with his assessment? I do wonder what's the reason? Has anyone faced this?",1567244541.0,2019-08-31 05:42:21
914,What would make you move?,17,cvzou7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cvzou7/what_would_make_you_move/,43,"So I'm an Engineering/Hiring manager who is now also playing Recruiter.  (~15 years experience JS/Python/C#/PHP/Rails/Node myself). 

For the first time in my life, I'm now the hiring manager, and trying to figure out how to attract experience devs to our well-funded, relatively mature startup.   

Of course, PM me if you're looking, but that's not really my point for posting.  

The reality is the market is tight, and finding senior devs is hard.  I need full-stack team-leads, which is even harder.   

We offer good salaries, remote work, unlimited PTO, top-health benefits, etc., but this is pretty standard for most Silicon Valley companies.  

What do you think it would actually take to get you to move on to a new opportunity?",1566910615.0,2019-08-27 08:56:55
915,Remote Contract Work,16,cvp0sx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cvp0sx/remote_contract_work/,8,"How's your experience been with remote contracting (1099/corp-to-corp)? I am looking to get into it, but I'm not sure where to find remote roles at the same rate that I can get on-site ($90-100/hr, Medium CoL)",1566859553.0,2019-08-26 18:45:53
916,"Shotgunning resumes and applications as an experienced dev, still an efficient use of time?",17,chtlff,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/chtlff/shotgunning_resumes_and_applications_as_an/,9,"I tend to do this a lot. Click submit and fill out forms whenever I can apply to a job in a minute or less. It's a habit I picked up since the first time I applied for a software developer job and I had no connections, no internships to back me up. Almost hitting the 10 year mark and I hav a total of like, five people that I consider useful references for future jobs. 

Since there's only five professionals I stay in touch with, the amount of times I get told about a job are very scant, and one of them works at a company that makes software that is associated with underpaid work while also pigeonholing your career. Others are either too busy to reply or don't know of any relevant jobs for me. That leaves the option to apply as a stranger.

I don't shotgun applications exclusively, but it is my main way of applying to and getting interviews for jobs so I'm okay with it. Anyone else here just keep using this strategy of applying for jobs despite their growing experience because it still works well for you? Do you consider it still very efficient for most developers?",1564117812.0,2019-07-26 01:10:12
917,"Automated checkout kiosks, ATMs, information centers, venue displays, etc. Which kinds of software developers build the software behind those?",16,cgw58d,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cgw58d/automated_checkout_kiosks_atms_information/,6,"I took a non traditional educational path into software development (art & design) and we had a class where we built art projects that leverage the use of electronics (LEDs, resistors, pots, motors) and some degree of coding was involved. We used microcontrollers like Arduino, but on a more superficial level, since it was learning how to program in order to realize your artistic concepts, and not learning how to program to apply CS fundamentals.

With that said I am curious on the more practical uses of automated displays and interact systems that are made for a customer, informational and point-of-sale context. What companies should I be looking out for that develop the software for these devices? If it's ATMs, do the big banks have their own software team to work on that, or is it usually a third party company that does the work for multiple businesses and sectors? How would I frame my experience if I want to get into working on software like that?",1563934022.0,2019-07-23 22:07:02
918,What's a reasonable 'delay' to accept an offer?,17,cgc4jc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cgc4jc/whats_a_reasonable_delay_to_accept_an_offer/,10,"Okay, I think I need to define '*delay*':

1. Delaying the offer ***for another offer***
2. Delaying the offer ***to consider the offer***

I'm  sure these two are different for the experienced devs? Anyway, what would be the reasonable delay for either one of them?

* 1-2 or 3-4 days after the offer is given? (basically within the week)
* The week after (e.g Monday)? So this is basically a week of delay
* Two weeks - might be too long I think ...

&#x200B;

I asked because I'm worried that the company may insist I do it within the 1-2 days and I may fumble and just accepted it within the day. 

I'm also worried that I'm seen as desperate by just delaying it for 1-2 days but I can actually delay it up until next Monday! 

I may use the strategy where I just accept the offer and quit if I got a different offer (irrespective if it's within 1-2 days or 7 days after the acceptance of the first offer), but this may be a different thing from this thread. 

Anyway, all in all, I'd like to know what's a reasonable delay from the experienced devs.  Any perspectives, experienced or advice is much appreciated.",1563824481.0,2019-07-22 15:41:21
919,Questions,15,cdzjir,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cdzjir/questions/,11,"Edit: Update: I wrote a code style guide for the team and published it on our local GitLab. In it I also included some guidance for class naming conventions to follow. Thanks for all of your valuable help and feedback.  


\--------------------------------- Original Post:  


So I'm on a small team at work. I'm the team lead, and I'm also training a couple of guys in our tech stack while trying to keep our projects on track. But here's my issue: I've lead a few technical teams over the years, but this was in a non-development environment.

&#x200B;

When I get picky about naming conventions one of the guys just looks at me like, ""is this guy serious?"" Is it wrong for me to be picky about naming conventions? Some of the choices are extremely vague. I have no idea what the class might possibly be doing from the name and I ask to rename it (e.g., QueryResult to represent a very specific result of a very specific group of related object to serve a purpose of sending on to a user). Other things like following REST naming conventions that are standard in the framework. Asking to refactor to return to REST when getting off topic in a certain controller.

&#x200B;

Am I out of line to ask for these things? To me following conventions and patterns leads to ease of maintainability years into the future.

&#x200B;

But I've never worked on development teams before... and I'm in charge of one. I've been on some in school. I've lead technical teams in the military (where I got my, ""be a real stickler for procedures, conventions, and details,"" mindset).

We're also a small team where we get ad hoc requests from the managers for enhancements. So these are pitifully under documented. Maybe starting with taking these to a bare-bones specification of some kind is a better idea? I don't want to take over, but I do want to follow the naming conventions of the tech stack to the best of our ability.",1563324198.0,2019-07-16 20:43:18
920,What does it take for the average software engineer to consider leaving the job market and joining a startup as a co-founder?,18,cdraj1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cdraj1/what_does_it_take_for_the_average_software/,17,,1563273952.0,2019-07-16 06:45:52
921,Got rejected for a job when you thought the interview went well - advice needed,14,cayptz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cayptz/got_rejected_for_a_job_when_you_thought_the/,38,"i'm sure several of the experienced devs here have been through job interviews where you'd come to a conclusion that everything went well but a few days later, you got a rejection mail. 

Mind sharing what happened and how you'd dealt with it? 

I just got one from last week's interview (which I thought was okay); in need of some words of advice and maybe (some positive) perspective : /",1562694321.0,2019-07-09 13:45:21
922,How can I find and hire a software estimation coach/tutor for myself?,17,c7420n,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c7420n/how_can_i_find_and_hire_a_software_estimation/,18,"Estimating software tasks is rather important for communicating with other engineers and with product owners. People have a need to know how about how long coding tasks take; I've known this since before graduating with a CS degree from a fancy university. People told me I would ""learn by experience"" how to estimate, but after 7 years in industry (all at startups and scale-ups), I need some help with that. While I do have some positive experiences of only being off by a factor of 1.5x, I also have experiences of being off by 5x and having greatly disappointed someone else. As a whole, my experience with software estimates has trained me to feel a great sense of shame and fear.

I want to be excellent at communicating about the projects I work on, including about their timelines, especially as I'm going to soon start a job where for the first time, my title will be Senior Software Engineer. My current level of confidence and skill with software task estimation threatens that. 

Shouldn't I be able to work with my new manager build this skill much more quickly than I have in the past? Maybe. I have not yet met him, but past experiences I've had with engineering managers lead me to suspect that he will

 * Be a nice and thoughtful person.

 * Be personally sympathetic and want to support me and help me grow as an engineer.

 * Be too busy for focused coaching.

 * Be unable to justify keeping me on the team if I repeatedly fail to give reasonably-accurate estimates.

Given the risk this presents to my family, I'd like to pay someone unaffiliated with my new employer to teach me how to approach estimation and coach me through some Deliberate Practice.


How would I go about finding such a teacher? 
When I google ""software estimation coach"", the results are for people who train teams in agile development. Would such a person also be good to hire for individual tutoring?",1561868278.0,2019-06-30 00:17:58
923,Recently given a code base I have to understand but in a tech stack I am not familiar with.,16,c5a7c8,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c5a7c8/recently_given_a_code_base_i_have_to_understand/,22,"Hi there,

I'm a developer with 10 years experience.  A consulting firm that wrote a custom Enterprise Resource Planning software is in the process of being 'fired' and I am to take their project and present to our Director and demonstrate a low level understanding as well as demo it.

It is written in C# which I have lots of experience in, but that isn't hard part.

It's written using ASP.NET MVC, Entity Framework, there are also numerous APIs and Modules using things Like Xamarin.

The point is that I have limitted knowledge of this tech stack and the project is very large, so my question is... How would you get started with this?

Would you just immerse yourself in Udemy Courses?  I can't even get the project to run, no idea the entry point, etc.",1561505246.0,2019-06-25 19:27:26
924,What do you charge to travel?,18,bsnwo3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bsnwo3/what_do_you_charge_to_travel/,4,"I have a client that I charge $125/hr, and they want me to go somewhere for 5 days to work on a project that's a 12 hour plane ride away.  How much do you bill in a situation like this?",1558769519.0,2019-05-25 03:31:59
925,How to ensure future work?,16,b8kkmx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b8kkmx/how_to_ensure_future_work/,9,"I'll try to keep this somewhat short. I've been a production support developer for just over 5 years currently in Canada working remotely for a US company. (Basically I write code for bugs/customer complaints that needed code changes.).I dropped out of university to take a full-time dev gig because of personal reasons. I was able to work the credits I had to get a liberal arts degree with the help of a very supportive professor who moved mountains to ensure I didn't drop out without a degree. So it wasn't a complete loss but definitely not the same as a CS degree. 

I worked for 2 years in a production support developer work at one company. Then I moved to another company in a similar position with a pay cut, but it allowed me to work remotely and move back to Canada. I've been working with that company since. 

I don't mind the type of work. I don't care if I'm never a lead developer or a CTO.  I'm not looking to min/max my salary. I'm just trying to ensure that I can take care of my family. This type of work pays well and most devs don't seem to want to do it. But I'm constantly paranoid of losing my job and then having experience most companies won't take seriously coupled with no degree. And I very rarely see job openings for this type of position. And I don't really learn much in the way of overall knowledge, other than the occasional random trivia.  

So, my question to everyone here, is what should I be doing now to ensure I don't face years of unemployment? I'm thinking of going back to school. Or trying to find a more ""typical"" feature development gig (I've done a few interviews and no luck). Thanks for taking the time to read this. ",1554247202.0,2019-04-02 19:20:02
926,Software Development Manager @ Big A ?,16,b1vkk9,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b1vkk9/software_development_manager_big_a/,10,"Big A (e-commerce one, not fruit) - just in case auto filter kill the post since I feel this is not the usual question.

I have ~15 years experience, recently been doing tech lead, manager, architect, in different tech companies, never been in big name / well known companies.

I am wondering what does a ""Software Development Manager"" @ Big A looks like?

* What's the interview process like? Is it still the typical online coding test followed by your typical whiteboarding question in person?

* What's the day-to-day like for dev manager at Big A (since ""manager"" varies greatly across different companies)? Is it fully human-side of things or more project management / delivery manager or still a lot of hands-on coding?

* How are you being judged / your performance reviewed as a manager?

* If you are one in such a role - what does

* Anything else you could share about such role I would greatly appreciate it!",1552789811.0,2019-03-16 22:30:11
927,"What are some signs of a career ""slacker""?",17,7w15dx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/7w15dx/what_are_some_signs_of_a_career_slacker/,7,"I'm throwing the floor open to this question, would like to know what your thoughts are.",1518081353.0,2018-02-08 04:15:53
928,How much of your time do you spend dealing with internal tools?,16,k9fc6m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/k9fc6m/how_much_of_your_time_do_you_spend_dealing_with/,8,"One of the things I have been struggling with the most at work is motivating myself learning how to use internal tools. I can see how it can be appealing if you were planning to stay at the company in the long term and progress up the ladder, or if you were more into the tech itself than I am. 

However, I am working just for the credentials I get from working at the company (not FAANG, but very well recognized in my area, I'd say tier 2 down from FAANG). I have been put on consecutive tasks involving exclusively internal tools since November. Knowing those tools doesn't get me further in my career outside of the company, so I found this to be a complete waste of time for me, and I find it incredibly difficult to motivate myself. I am currently working on my personal project, current task involving oidc and react. I am facing blockers, but I google around and I find solutions. It just feels good, as opposed to working for my employer.

This is my first company, so changing jobs seems like a huge deal. How is it like outside of my company? It's a 30k employee company, so I am afraid that if I leave my current job and find a job elsewhere, I'd be faced with the same issues.",1607497500.0,2020-12-09 02:05:00
929,Should I leave my company?,15,jvxdsg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jvxdsg/should_i_leave_my_company/,6,"Hi all,

I've been a software engineer for about 3-4 years now. I'm currently at a small start up that's been growing slowly but surely for about a year now. I've been anxious at this company for a while now and am considering leaving but I just want to make sure I'm leaving for the right reason and would love some advice.

I started my job with a lot of anxieties. I had a little over 2 years of experience, was still pretty junior, and wasn't sure I could handle the responsibilities at my job. I had 2 other positions before this and have never felt this way at those companies. I've been pushing through and have had some growing pains that I've went through, but I haven't been able to shake my anxiety at this company. A part of it is due to a lack of processes and due to all the moving pieces we have in the company since we are a smaller start up. My boss has communicated that the process issues we have will improve, but it's caught up to me over the year and I really dislike working here. Even if I took on less responsibilities, which he told me he'd be open to, I feel like that would make me feel even more inadequate at my job. There's a lack of culture and comradery and I feel like even with the improvements, not much will improve.

One thing that I do understand is that I'll 100% face some of the growing pains I'm going through now. I will definitely struggle again in my career at a point. But I feel like at least at a larger company, there will be better processes that'll ease some of the growing pains I currently face.

Has anybody else left a small start up for a bigger company? What has your experience been like, especially if you left due to similar reasons to me? What are some things you really consider when leaving your company?",1605663555.0,2020-11-17 20:39:15
930,Where does your employer stand on reopening their offices?,16,jfeapw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jfeapw/where_does_your_employer_stand_on_reopening_their/,28,"Are they transitioning to remote options for full time? Hiring remote employees? 

My office has been regularly pushing the reopening estimate back, but maintaining that we will all be expected to return when it is safe to do so. 

Right now they're guessing March.

What are your jobs like?",1603320676.0,2020-10-21 18:51:16
931,Has anyone ever withdrawn from an interview process because they expected to fail the tech portion?,15,je3xje,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/je3xje/has_anyone_ever_withdrawn_from_an_interview/,39,If you knew the tech interview wasn’t something you had been studying like a heavy leetcode style questions. Would you withdraw or just bomb spectacularly?,1603150719.0,2020-10-19 19:38:39
932,Wondering what others' daily work looks like,15,j9li5n,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j9li5n/wondering_what_others_daily_work_looks_like/,25,"I'm currently kind of bored at my job, and considering making a change. However, to it's credit, my company has a great culture and pretty solid pay, and for the most part I have enjoyed working for them, so I'm not sure if switching jobs is the right approach. But basically I'm worried I'm not learning and gaining experience at the rate that I'd ideally want.

My daily work usually involves doing one or multiple of the following:

\- Small feature development (usually straightforward and not super challenging)

\- Bug fixing

\- Helping out with customer cases

\- Mentoring newer hires

\- Random busy work like updating documentation, or identifying instances of X in our large codebase.

Our tech stack feels pretty bare; I do 90% of my coding in Java. Usually, the java dev I do is very straightforward, and I don't feel like I've learned much in the language (save for some exceptions). The rest is in JS, but it's really just interacting with JS libraries written by, and specific to the company. Outside of this, I am not working with many other tools and technologies.

To be fair, I will say I have made a lot of progress towards understanding intangibles about the software development lifecycle (I have been here 3+ years since new grad) but this is probably expected anywhere.

For perspective, my question for this sub is: **what kind of work do you do in a typical day**? And I know this will differ somewhat based on one's experience level, so I'd appreciate if you could indicate that for context.",1602511491.0,2020-10-12 10:04:51
933,Greener grass in careers not requiring relentless “originality”?,14,j58nbu,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/j58nbu/greener_grass_in_careers_not_requiring_relentless/,11,"I have this nagging fear that I won’t be able to accomplish my “next” feature, or that I’ll come across as dumb if I can’t meet specs due to something out of my control, like contradictory business requirements. The nature of my job is to make new features and fix problems that the other parts of the company can’t after basic debugging, and sometimes we’re not sure if it can even be done until we dig into writing the actual code. I understand this is part of why I get paid well, but has anyone here ever thought that some other professions have it dead easy in comparison? Like, tax professionals and teachers for example. Not to bag down their careers. They’re meaningful, but I feel like they don’t have that same “fear that the next project makes them unemployed” feeling that I get every couple of weeks. Every week, it’s the same old daily grind to them. Every year, they know exactly what to expect. In their minds, there’s never been a challenge they had to dig deep into bedrock to solve. Yes, there is the occasional extra unorthodox decision or 2 they have to make, but it’s never to a point of fearing they’re not good enough on entirely new projects. 

What do you guys/gals think? Maybe I’m being myopic? Have any of you ever considered your job stressful because of this lack of routine?",1601881926.0,2020-10-05 03:12:06
934,Miltoned by my company,17,iyrvk1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iyrvk1/miltoned_by_my_company/,13,"I've been an embedded SWE for 3 years at one of my dream companies on a cool project, and was very happy until my project was cancelled 6 months ago. After the cancellation, I was put into devops on a test tools team. On my old project/team, I was ecstatic about the company, the work I did, and the products they made, my team felt like a family, and was happy to go into work every day, and put in extra hours. Now I hate my job, I hate the work I do, I'm not crazy about my team (nothing wrong with them, personally), and it's leaking into massive depression outside my work life. Originally, I was blocked by some VPs from going back to the embedded side of things with the excuse 'I'm needed where I am now'. After enough fuss was made, they let me apply, test, and interview for my old position on another team, and let me know 2 hours before the interview. I failed said interview (I haven't had to use any of that stuff in at least 6 months, and even in my old job, it only came up a few times and that's what google's for).

&#x200B;

I also know of a few other old team mates who have expressed desires to move on since the project was killed, so I'm not the only one.

&#x200B;

I now have an impending offer at a company I'm not terribly fond of, with a semi interesting project for the same pay. It seems covid has knocked down salaries at least 10% for the time being by my job market research.

&#x200B;

Am I being delusional to even consider staying at my current company? I've asked some manager level friends who had said this move wasn't malicious, but I have my doubts. How common is it to find somewhere you want to go in everyday, and a project/company you want to put the effort into, instead of just the amount to get paid? Do you ever get that back? How much damage could be caused to my career by just coasting through the pandemic, not doing my desired work?",1600957095.0,2020-09-24 10:18:15
935,Job is getting less about Engineering and more about politics day by day!,14,ih6thf,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ih6thf/job_is_getting_less_about_engineering_and_more/,13,"Hi everyone,

&#x200B;

I've been working at a nice mid size company for a bit now and I really was digging the way it was going for the first year and a half but unfortunately the manager I was hired under moved on from the company and they hired a new manager. 

&#x200B;

Now, the new manager - I can dig her, she's cool but she is relatively new in management. Only got 3 years of XP being a manager. 

&#x200B;

Make things short, leaving out about 4 of us, the remainder of the team (a bit over 15 others) have wifed her up and all of them play phone-tag with her daily. Sometimes I see them active on chat until 8pm, 9pm. To differing degrees, they've started talking like her, having the same mannerism as her, being fans of the same movies and TV shows she likes, even going as far as pre-COVID, ordering nearly the same food as her on team lunches! (This was hilarious...one team lunch we had - even the waiter joked ""I guess y'all really must be fans of fish tacos and diet coke!"" because 7 out of \~13 of the team ordered the same exact thing as the manager, when I know they usually get water because we all go dutch and most of them are too cheap to actually buy a beverage. I wish I was joking but I'm not!) 

&#x200B;

Now, normally, I wouldn't care the slightest. But I'm starting to see \*negative\* effects of this on \*me.\* For example, this review cycle, I got a 3K bonus whereas my two of my peers who I highly suspect are doing this brown-nosing? each got 10K+. I checked back with two of my other peers that really don't go along with this mojo also only got 2-3K.

I shrugged it off and said whatever, but in my latest 1:1, my manager said

&#x200B;

\> ""Hey OP, I really like what you're doing with the whole technical side of it - going really great there, but I going to want you to work on your \*influence and persuasion\* skills so that you get more \*buy-in\* from your peers over this next year.""

&#x200B;

I didn't know what that meant so I asked her for a clarification and she kind of skirted around, ""Well, you know SO-AND-SO (another Senior engineer), well, she's a great example of that ""buy-in"" that I'm talking about. When she says we should go in direction X, the whole team wants to pitch in and support her. I really think you have the potential to follow in her footsteps, so I'm going to have her mentor you so you can become more aligned in the same kind of thinking.""

&#x200B;

Now, this SO-AN-SO, I know has been bootlicking ever since the new manager got here and after checking contributions on our company Github, has written less than 100 lines of code in the last year (and has done only 2 PRs). She instead invests her time signing up and volunteering in sitting in meetings on behalf of the manager most of the time. 

&#x200B;

I said sure (not like I had any other choice) and all was good - that was about a month ago.

&#x200B;

Well come last week Friday, I find out 5 out of the \~20 teammates have all been promoted to Staff Software Engineer (our ladder is SWE, Senior SWE, Staff, Principal).  Essentially, my manager ""restructured"" the team and so we will have smaller teams of a few engineers each, and these Staffs will be the team leaders. This includes SO-AND-SO, who joined about 8 months ago and has only 3 years of software engineering experience.

&#x200B;

This got one of the gray-beards pissed off (been in the company for 9 years and still a Senior) and he put in his resignation. Today, he said he wanted to chat with me privately, and we chatted - he told me he doesn't see the situation going in a good direction and I should at least start looking.

&#x200B;

I don't know what to do, in a really tough pickle I suppose - I like the job and I like the work but eh, even though the manager is not a micromanager or mean or anything, I'm not sure.

&#x200B;

I know office politics exist but have any of you been in this situation?

&#x200B;",1598502756.0,2020-08-27 00:32:36
936,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,16,hqbf89,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hqbf89/ask_experienced_devs_weekly_thread_a_weekly/,81,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1594656818.0,2020-07-13 12:13:38
937,"1-on-1 with skip manager, talked about potential promotion but he had concerns that I would leave once I got the promotion",15,hctgk2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hctgk2/1on1_with_skip_manager_talked_about_potential/,36,"He said that he would see what he could do about a promotion, but I feel his question is going to come back to me and I'll need to have an answer.  In the moment I just said that I had not really thought about it.

Technically, I have already been looking around to see what is out there, but I have not applied to any places yet and still getting the resume up to date. I'm obviously not going to tell my skip manager that and who knows when I would actually find a new job.  So if this promotion happens soon I would want to take it while continuing to look at my options.

How would you respond if he asked again?  Any answer that isn't you plan to stay will be taken as you plan to leave, so just outright lie is what I'm thinking, but maybe there is a better answer.

EDIT:  For additional information I have been at this job for 14 years and on my current project for 12 of those years.",1592714750.0,2020-06-21 00:45:50
938,What are some productivity tips that you would like to share?,16,gc8zen,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gc8zen/what_are_some_productivity_tips_that_you_would/,10,"I use a kanban board, take notes on a digital note taking application like OneNote, follow pomodoro for time keeping and productivity. How about you? Share your experience.",1588464574.0,2020-05-02 20:09:34
939,Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones,15,g8wjvi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g8wjvi/ask_experienced_devs_weekly_thread_a_weekly/,44,"A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.

Please keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.

**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",1588003960.0,2020-04-27 12:12:40
940,[AMA] Senior IT Programming Recruiter here,15,g1rpji,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g1rpji/ama_senior_it_programming_recruiter_here/,26," Hello!

I am a Senior Technical Recruiter with programming experience, working for an IT Consulting firm. I am offering insight to what the staffing industry is looking like right now in the world, pertaining to the Technology industry, job discussions, and even free resume review/critique if you are interested.

Do you have questions/concerns about changing your job during COVID? Ask me how to go about it properly, or what the market is looking like. I am very curious to hear about your thoughts from the Developers perspective vs what Recruiters see via sourcing",1586985394.0,2020-04-15 17:16:34
941,Career Progression without a Network,15,fddm2d,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fddm2d/career_progression_without_a_network/,27,"How do you progress in career and grow professionally when you're a remote worker without a network of other contacts and fellow developers?

I started as a college hire at a Large Defense Contractor and then following a friend to a smaller Government contracting company where I was often the only one of my company on a contract.  Then following another friend to a different sector where I am now.  Five years per step and none of it technologically exciting, though at least modern (we're all .Net Core in my current place).

But now I work remote in an area with a negligible tech market that would pay 25% less than I currently make (not to mention having to go into an office).   My current coworkers have been at this company longer than I have and plan, as far as I can tell, to retire from here.

I can't move from where I am and I can't take a 20% pay cut, so I'm stuck trying to guess at what are and are not good remote jobs, what are and are not viable technological paths to consider.  And I have been doing programming for 15 years; in theory I have experience and something to bring to the table.  

I've also never had to go looking for a job, which seems a lot larger of a task.  How do Experienced Developers identify, locate, and pursue new jobs and career paths?",1583360205.0,2020-03-04 17:16:45
942,Career Development To Work With Autonomous Vehicles,15,fcy17y,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fcy17y/career_development_to_work_with_autonomous/,17,"Hey /r/ExperiencedDevs - My previous post was removed for being a bit off topic,  as I was seeking random/general advice.  I'll try and be a bit more focused below -  

I am currently an Embedded Software Engineer working in the aerospace/defense sector with 3-4 YOE.  I love working in the embedded space,  but I do not enjoy my current company,  location,  and quite honestly its kind of a weird moral ground when developing software for possible use in wars.  

Anywho, I am looking for some advice on how to better myself and ensure I am in a good position to transition out of the Aerospace realm and into the world of Autonomous Vehicles in about a year.   I find that area to be very appealing and it looks to be booming in the coming years.  

Regarding location - My SO and I want to move out to the PNW, and it seems that there are already a good amount of companies in the Autonomous Vehicle space out there - Waymo, NVIDIA, Carmera, Amazon, Cruise, and probably a ton of others.

I have a very strong background in C and Python but feel that learning C++ would help immensely.  I also feel that my aerospace background will help when searching in the autonomous vehicle space due to crazy certification standards I'm used to for Aerospace.

Anyways,  I'd love to get some advice from this sub on how to improve myself over the next year to ensure I can land a gig that truly fits my career goals.",1583285335.0,2020-03-03 20:28:55
943,What are the SWE positions that work on project that can file patents?,15,exawch,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/exawch/what_are_the_swe_positions_that_work_on_project/,14,I’m asking questions because I am hoping to get more achievements under my CV besides just job experiences. I’ve heard Google filing patents on AI stuff but that makes sense because they got research teams where scientists work. Most of the patents are less about software in general from my understanding. What are the SWE positions that work on something enough to file patents?,1580612730.0,2020-02-01 22:05:30
944,About to start my first Principal Engineer job. What should I know?,15,et8xf7,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/et8xf7/about_to_start_my_first_principal_engineer_job/,14,"Hi folks!
I have about 15 years experience in the industry and I'm about to start my first role as a Principal Engineer at a medium sized security firm. What are the things I should know before I start? What will be expected of me? How do I not underachieve in such a big career challenge.
Thanks in advance!",1579892667.0,2020-01-24 14:04:27
945,How to deal with boredom when you've stopped learning on the job but don't want to change teams?,14,es87t2,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/es87t2/how_to_deal_with_boredom_when_youve_stopped/,12,"I'm in a great position that will help me achieve my career goals within the next few years. However, I've been very bored at work these past few months and I'm not sure why. Does anyone have any suggestions?",1579704164.0,2020-01-22 09:42:44
946,Has anymore moved to a role outside of coding but maybe related?,14,ereayx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ereayx/has_anymore_moved_to_a_role_outside_of_coding_but/,11,I’ve been a software engineer for about 2 years and I feel I’m getting bored with coding it’s not something I seem myself doing much longer. I switched jobs 4 months ago to see if maybe I just needed change but it’s still the same to me. What other options are there that pay as good as a software engineer?,1579561430.0,2020-01-20 18:03:50
947,Suggestions required for a experienced Dev.,14,eojr2r,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eojr2r/suggestions_required_for_a_experienced_dev/,26," I have around 9 years of experience in . Net and UI technologies and have been good. There are two things bothering me currently -

1. At times there are situations where in my peer comes with a efficient solution and I question myself why couldn't I come up with that or design suggestions and this lowers my confidence.

2. When it comes to Data structures and algos, I know the concepts but when it comes to problem solving I don't think in a way which is mentioned in the solution. I need to prepare for an interview in 2 months of limited time, I don't know how and where to start. Please suggest me

I am looking for a direction for improving these things.",1579027933.0,2020-01-14 13:52:13
948,Interfacing Successfully with Third Party Software Customer Success Teams,15,dvmk2o,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dvmk2o/interfacing_successfully_with_third_party/,8,"Over the past several years, as a dev involved in architecture/technology choices, I've had to deal more and more with ""customer success reps"" and ""architects"" for third party software products (open and closed source). Think of them as modern day professional services with sales and a bit more technical knowledge (maybe?) thrown in.

The problem is, these people have tended to be a massive time suck (for me as a developer), and I really struggle to benefit from the value that they provide. We have ""brainstorming"" sessions and ""ROI blah blah blah"" sessions in terms of how to better leverage their products; these are intended to provide our company value such that we can use their product to its fullest potential.

Rather, I almost always walk away from these meetings with them feeling like I have a lot of work to do, and conversely they, have zero work to do. I had to tell my most recent one to simply stop contacting me because he was so masterful at appearing like he and his cohort were providing me value, but was in fact, securing his company more of a foothold in my org, step by step and in general, just being a massive time suck. I get it; that is their job, but I just dislike the fact that it feels like I'm being psychologically manipulated. 

Also, for clarity, this isn't just at one company I've experienced this with, but at least four I can think of off the top of my head.

Have any other devs had similar experiences with this particular brand of sales, and have you ever made it work / gotten value from it? I feel like we should be getting value from them, and I'm disappointed at what feels like failed relationships.",1573649083.0,2019-11-13 07:44:43
949,Exit moves from Tech Consulting,15,dm1lrl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dm1lrl/exit_moves_from_tech_consulting/,9,"Hello! I'm coming up on the infamous 2 year turnover after working in Tech Consulting and I'm exploring exit options. I've had a roles as a developer and as a team lead and made substantial contributions in both.   

What are roles make sense for me to look into coming from a Tech Consulting background? I'm exploring Product Management (which I'm very interested in) but I'm looking to keep my options open. Located in the Bay Area, CA.

&#x200B;

Thanks in advance for advise :) much appreciated.",1571876304.0,2019-10-23 20:18:24
950,Hiring senior devs that have been primarily working in startups - any concerns?,15,cspb2d,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cspb2d/hiring_senior_devs_that_have_been_primarily/,33,"Experienced devs, for hiring would this matter to a certain extent? I'm going through some interview process right now and there are two extremes I see; several candidates that have been working in startups primarily (existing say as young as 3-5 years *more or less*), and another for the big guys (think FAANG). 

IMO, a mixed-beg candidate would be good, but I do wonder if devs (seniors even to mid-level) who have been working primarily with startups  would been as an unattractive candidate, or vice versa?",1566286049.0,2019-08-20 03:27:29
951,Those involved in hiring- how do you manage your expectations with candidates that come from a less than optimal engineering culture?,15,cqc28r,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cqc28r/those_involved_in_hiring_how_do_you_manage_your/,10,"Say you give them a coding test to take and might want to expect the following things, presented not as hard requirements but they do earn ""bonus points"" so it's more advantageous if you do know how to do them:

* Containerize the test application
* Write unit tests for your application
* Use Git for version control, upload it to an online repo

Sooner or later you'd encounter a candidate that may not know much about one or more of these things. Taking me as an example, I have no idea how to do proper unit testing.

Given a candidate that falls short on one of the above things, what are some good preparation strategies to learn all you need to know, at in engineering practices, to at least pass the technical portion of your test? How do you adjust your expectations for someone that may be 'cowboy-ish' so that you judge him as someone with a real interest to do better and not like someone who will be stubborn and upset your workflow (and thus make him unqualified for the job)?",1565828921.0,2019-08-14 20:28:41
952,LinkedIn messages from shady mentoring / career development people?,15,cmfg1e,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cmfg1e/linkedin_messages_from_shady_mentoring_career/,11,"I've had a couple of these folks send unsolicited messages lately.  My assumption is that they are somehow making money off this, but it's not clear how -- and when I ask, they refuse to answer.

Have other people seen these, and do you know what the deal is with them?",1565061249.0,2019-08-05 23:14:09
953,Moving into Consulting with Less Development,15,ce16wn,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ce16wn/moving_into_consulting_with_less_development/,3,"I'm currently a senior engineer at a product company, about to be promoted to director of engineering (probably in an effort to convince me to stay given circumstances I'm about to describe). I started with this company about four months ago. The company changed direction last week and let us know they'd be moving development of a replacement for their flagship product to an external group, and my team would be responsible for maintaining the legacy software until the new product is finished. Given my team (CTO included) wasn't involved in this decision, I'm not optimistic that they plan on keeping any of us for long. I've been advised by my boss that we should be safe for up to a year, but there's no guarantees.

An opportunity immediately popped up where I can move into full time 1099 contracting for a significant pay increase, even accounting for the additional financial burdens of self employment. This new company is expanding fast, and they have enough work in their pipeline to keep me busy full time well into 2020 at minimum. This opportunity will be different, though, as I won't be actively developing as much and the development work I will do will be simple integrations with a popular software development and collaboration tool. My plan is to take advantage of the raise and the lighter work load to grow my own consulting practice and work on a start up idea to keep my engineering chops fresh.

My resume reads as follows:

- Full Time Job 1 - Junior Engineer - 2 years
- Full Time Job 2 - Mid/Senior Engineering Consultant - 4.5 years
- Self-Employed Consultant - 1 year
- Full Time Job 3 - Senior Engineer / Director of Engineering - 2.5 years
- Self-Employed Consultant / Start Up Founder - 6 months
- Current Job - Senior Engineer / Director of Engineering - 4 months

My questions...

(1) If I move to independent consulting again, do you all anticipate negative effects if I'm to apply for a full time W2 job again in the future?

(2) While I'll be actively keeping my engineering chops honed in my own efforts, I'm not likely to get many challenges in my ""day job"". I don't want to lose my ability to move back into heads down development. As long as I'm keeping my skills fresh in some way, do you all anticipate any future issues jumping into a full time engineering position again in the future?

(3) With regard to my short tenure at my current job, is it sufficient for me to just mark on my resume that I left because the company unexpectedly moved development to an external firm?

Thanks so much!",1563331521.0,2019-07-16 22:45:21
954,Best way to transition to management?,13,c9h9qq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c9h9qq/best_way_to_transition_to_management/,14,"I currently have 4 ish years as an embedded software engineer, and am wondering, if I wanted to eventually move over to the management side of things, what would the best way to do that be? I don't want to do it ASAP, I'm just curious if there are opportunities I should look out for in my dev role that might make this easier?",1562369425.0,2019-07-05 19:30:25
955,Could you review my LinkedIn and Github profiles? I've been going from one short job to the next looking to find my first salaried full-time job in almost 10 years,13,c49xbc,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c49xbc/could_you_review_my_linkedin_and_github_profiles/,13,"I started out my career based on a misconception that it is almost necessary to start out at small companies before trying anything else, in order to get a gentle start and obtain the experience of growth necessary to survive in larger companies. My (non-programming) job in the college computer lab was pretty chill and there were only like 10 people so I thought it was a good idea to go from there and find a company of similar size and expected it to be just as easy going for a beginner.

Well, yes and no. Most places I worked for were mostly relaxed, but they offered little pay and room for advancement. So in my plan to move up to medium sized companies, I mostly failed. I have been spinning my wheels with only getting offers from companies that are themselves not so stable so their workers can't be financially stable as a result.

I have to do something like $40k -> $0 -> $60k -> $0, etc. because I typically lose jobs before I get another offer. Without a strong negotiation position, moving up the ladder for salary and job quality is much harder.

So I'd like to know what I'm doing wrong that is not attracting the attention from the big guns. Or even average companies. Companies overall seem, for the lack of a better word, scared to hire me full-time. I've only attracted offers for underpaid contract work.

My LinkedIn is
linkedin dot com/in/chriscajas

Github is github.com/ccajas

Other software engineers I've spoken to over the phone (outside of interviews) or at meetups say that my experience should speak for itself. But there is a noticeable difference between me and other software engineers sharing my tenure, because they usually move up to be senior or principal level at 10+ years while I have never been visible enough at a company to be anything more than a rank-and-file worker.

As with a lot of people on LinkedIn, my photo is on my profile. In the back of my head I wonder if some companies are discriminating against it because I'm not white or Asian. I hope this is less the case though. It could be my speaking style, or my personality.

A lot of problems remain unsolved in the information age and one of them is being able to organize companies by their personality and culture fit. This would greatly help tailor job searches to filter out companies that won't be compatible on the soft-skills level. Or even certain aspects like a tags for aspergers-friendly positions or companies, or that hire ""junior in skill, not years"" developers. So much left out there to do with discovering patterns in data to make company thought processes more transparent to the public.",1561346037.0,2019-06-23 23:13:57
956,How to phrase my current role on a resume?,15,bshkcg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/bshkcg/how_to_phrase_my_current_role_on_a_resume/,4,"I've worked in development in one form or another for most of my career.  I work for a large consulting firm, which for all it's downsides I love because every 6 months or so I get to get exposure to new and different things when I change roles on various clients.

My last role before this one for example was a full stack .NET dev team lead.  That contract came to an end and that product has also gone EOL.

In January I moved to my current role to help out a team that was critically understaffed until they could make a few hires for it.  I'll be rotating off of it soon to go back to a more dev focused role on another contract.  So I figured it's probably time to actually update my resume with this role.  

The Problem is, I'm not 100% sure how to describe this role.  Basically this role is on an automated performance testing team.  At first I thought I'd hate it, but it's been sort of interesting to see that side of things.  I wouldn't wanna do this all the time for my job but it's been interesting enough.

One of the reasons that they asked me if I'd be willing to do this short term was because it heavily involves working on and managing about 20 CentOS servers.  I've been a linux guy since 96 so that aspect was easy for me.  They didn't really have anyone else available with the Linux related toolset.  This was my first time using docker but it wasn't an issue to pick up after doing a little research online.  

In addition to that, the job requires a bunch of scripting for automating the system as well as the tests.  Mostly in Bash.  I've written probably 20+ good size Bash Scripts for this role.

There is a decent amount of python scripting as well.  Most of that was done before I came along but I've had to make a few changes to some of it.  

I've had to pick up and learn things like Jmeter and Jenkins along the way.

That stuff above is about half the job.

The other half of the job is actually analysis of these tests that are running.  Looking at not only if the test was successful and how much automated work got done but also things like collection of CPU and Ram usage, Disk O/I in in the database, etc etc.

There has also been some performance tuning in the Oracle DB.  Nothing major just adding a few indexes that helped things out.  

It's some combo of an admin and analyst role, but I can't quite figure out how to phrase it.",1558736755.0,2019-05-24 18:25:55
957,How to get out of defence?,14,azwifh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/azwifh/how_to_get_out_of_defence/,15,"I've worked in the defence industry for a while and I'm finding it increasingly difficult to get out of it.

My skills/experience generally doesn't match what is required and when I do get interviews what I have to talk about seems to go over the interviewers heads because it's nothing they've come across before. Sometimes it becomes apparent I live in a completely different world that is behind the curve.

I've always been afraid of being stuck in defence and I've tried to get out multiple times. I now feel trapped.

Has anyone got any tips?",1552356029.0,2019-03-11 22:00:29
958,Biggest blunder a lead has ever done - your experience,15,a8k8ia,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/a8k8ia/biggest_blunder_a_lead_has_ever_done_your/,22,"Blunders here can be from not showing technical competencies or even lacking people skills; I'm sure you experienced dev folks have seen it all, in particular, blunders made by the leads.

&#x200B;

Mind sharing: 

* the experiences itself (as in the blunder and what happened after the situation) 
* lessons learned for leaders, subordinates or even other team members?

&#x200B;",1545507975.0,2018-12-22 14:46:15
959,How do you guys stay on top of new technology?,15,a1pfhk,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/a1pfhk/how_do_you_guys_stay_on_top_of_new_technology/,11,"I'm looking for ideas other than practice new stuff at home while maintaining a legacy system at work...

&#x200B;

Any way to inject the new tech into your current workspace?",1543583476.0,2018-11-30 08:11:16
960,How to attract senior devs to a small tech company?,17,9rlfzi,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/9rlfzi/how_to_attract_senior_devs_to_a_small_tech_company/,19,"I work for a small SaaS company in NYC, 15-20 employees. I started out doing tech support and implementation and have slowly moved up to heading up sales and marketing. The founders regularly turn to me for all the random issues that come up and I have found them developers before when they were hiring. I've also had a lot of success building out a sales and marketing team in a short time, so I guess that's why they've asked for my help here.

They have been trying to hire senior C#/.Net devs for almost a year now and have failed. They are looking for 1-2 senior devs to essentially take over the development team and hire a few mid-levels under them. They've asked me to start setting aside time to help find devs. They've been using a couple agencies that haven't produced anyone yet. 

I have a feeling the lack of success has to do with the fact that we are a small tech company in NYC and we are competing with all of the big companies for these top-tier candidates, and are job descriptions are pretty lackluster. I'm revamping the job descriptions, posts and the messaging we use for reaching out because I don't believe any of it reflects the position or the company at all. I'm really just looking for some input from actual developers because hiring a Senior Sales or Marketing position is very different from hiring a Senior Dev. 


TL;DR When you are looking at positions what do you look for in a small company versus a large company? ",1540594640.0,2018-10-26 18:57:20
961,Resigning as CTO and being ignored,14,9bgneh,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/9bgneh/resigning_as_cto_and_being_ignored/,10,"Extremely burned out and understaffed, I resigned giving three-months notice and a transition plan to promote continuity for our company. The CEO refused to acknowledge my resignation, or even give me a go-ahead for the plan.

He brought in a sketchy tech start-up to take over some of my responsibilities without getting me involved with the scope of work, contract or anything and I found out they are pushing for development for a ridiculously low price. That company's ""tech staff"" are mostly bootcampers and I'm afraid this might lead to some folks from my team losing their jobs or even the company being seriously hurt. I feel disappointed, disrespected and jaded, but this is not only about me. I feel there is a disaster unfolding before me but I cannot have a conversation with the CEO without feeling sick.

I'm here to ask your thoughts on how to deal with this. Have you ever seen anything like it, and how could it be prevented?",1535633303.0,2018-08-30 08:48:23
962,Have I painted myself into a corner?,16,7sa215,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/7sa215/have_i_painted_myself_into_a_corner/,6,"Hi guys,

I'm a full-stack dev, been working for about 4 years at the same company. I mostly work on Microsoft's stack - SQL Server, Web API, and WPF / MVC. 

Problem is, I work almost exclusively on legacy code. The company I work at has **a lot** of legacy code - they've been in business nearly 100 years. So I'm mostly working on ASP.NET stuff - SOAP, ASMX pages, stored procedures, that sort of stuff.

I have no knowledge of the latest JS frameworks (React, Angular) because, quite frankly, these old applications hardly ever need front-end rework. And the cost of re-writing these applications, even one, isn't worth it. Company sees it as too risky.

Many of the companies in my immediate area are looking for people with the latest skills, including Entity Framework, WebAPI, and Angular / React experience. I'm familiar with some, but not all of those skills, and I hardly ever use them in my day-to-day workflow.

That's not to say I'm not good at what I do! I'm always able to improve existing legacy code. I learned about and introduced automated testing to the legacy applications, and several other things. But companies look at my resume and say ""You're still using Bootstrap?"" Uh, yeah, it works, and ripping out an existing JS framework isn't a simple, low-cost, two-week thing.

Have I painted myself into a corner? I feel like I'm un-hireable because I don't work on projects that use the latest and greatest.

Other specific questions:

* What can I do to demonstrate my knowledge of new technologies to future employers?
* Any advice for approaching management with these concerns? Basically ""Hey, this is a great gig, but it's killing my technical compotency. Can we spin up something new?"" (in a nicer way, though).",1516692654.0,2018-01-23 02:30:54
963,Made it to Principal Architect... now what?,13,kchbgy,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/kchbgy/made_it_to_principal_architect_now_what/,28,"
6 years ago I was building Wordpress sites for $32k/year. Now I am a principal architect at a billion dollar company. I’m making $150k in Denver, which is okay for a Sr. Dev here, but not great for an architect title. I haven’t gotten a raise due to HR blowing off my promotion due to COVID. The job is relatively stress free and fully remote, so I have been enjoying the ride for now even though I could probably work harder and make a little more elsewhere. 
 
That said I’m a fairly ambitious and money motivated person, so I am looking forward to my next steps. I see a few options:

- I’ll probably hold out at my current company through the next review cycle, theoretically I should be able to get a real raise to go along with my promotion next year. Maybe 175-200k? That would make me feel like I’m not underpaid and I can continue building architect experience on my resume in a low stress environment. 

- I can go try to find another architect or tech lead role. I’m sure I can get a nice raise, but maybe not an impressive one if my current company bumps my salary up to market. Generally I find that I am starting to max out the salary possible at a lot of “normal” companies. 

- I could shift to management, though I don’t have any particular desire to leave the technical side it might open up more opportunities in that higher salary range (?)

- I could grind leetcode enough to get a job at Google in Boulder. Or potentially relocate for a FAANG (my wife is a tech superstar and she could also make big money in the Bay Area or similar). 

I’m motivated by money and quality of life. What do you guys think of these options? Anyone been in this kind of position before?",1607917833.0,2020-12-13 22:50:33
964,Career Crisis - Fear of Becoming Most Senior In The Team,15,jy76xg,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jy76xg/career_crisis_fear_of_becoming_most_senior_in_the/,6,"Recently, the company I work for (start up) has gone through some changes. It reorganised the teams (did not fire anyone) and hired even more people. We are reasonably stable during pandemic.

Recently, bad things happened: I am a mid-level developer who was working with a senior and principal + another mid-level. The other mid level decided to quit because he has health issues. The principal quit for more lucrative offer in a field he wants. That leaves me and senior in the team, 2/4.

The other issue is that senior will move to other team in January, as per career aspirations. Leaving only me in the team. The company is hiring new people to replace the two.

My big issue is the responsibility - I cannot do more work than I currently do, being already close to burn out. I also do not want a leadership role at the moment because I don't have personality for that. I have been looking around the market but it is quite slow in the UK atm.

What would you do? I got savings and fuck you money so not too worried about not paying bills. Just wondering how I can survive this huge change.",1605974661.0,2020-11-21 11:04:21
965,Switching/Picking teams at a company,15,jifrza,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jifrza/switchingpicking_teams_at_a_company/,16,"Hi everyone,

I want people's opinion on switching teams within a company?  (I've never posted here and I hope this isn't off-topic, doesn't seem to violate the side bar).

I have over ten years of experience in the industry, so I was particular about what job I wanted.  I asked for a full-stack role in web tech. I asked for a role where I could stay within a particular set of apps for a while.  I jumped onto too many projects at my last company and I felt I was rarely able to make meaningful change (my team would be equivalent to the now failed: Spotify Squad approach).

I took a role that paid out $10-20K less than other offers but I seemed to like the management and the people at this company.  They said they'd pay for training and let me work from home.  Although both things turned out not to be true when I joined the company.  I've been here 7 months

Management here is a bit of a mess.  The vertical and horizontal teams are not aligned.  I've been working with the front-end team for months, then swapped to the data team to build a production service in less than 2 weeks, then apparently I transitioned to the API team.  Apparently full-stack to them means they can throw me onto whatever team needs me at the current time.

I've voiced my displeasure at swapping teams so much to my team leads (I'm on my third team lead seven months into this company) and I told them that I want to be on one team for a while and receive work from one source so I can make change.  The UI Team told me that they really want me on their team and the API team lead doesn't really want to give me up.  However, my lead said it's my choice.

Here's what I gather from both teams so far:

UI Team

* very nice people to work with
* a bit junior in terms of experience
* freedom to make change
* good processes for change

API Team

* internal drama (fraternisation between colleagues)
* good strong senior developers
* senior developers are experts in Java but not JavaScript (this scares me a lot)
* process for change does not feel organic (top down approval)
* lots of meandering (work is inconsistent and all over at the moment)

Right now, it's hard for me to pick because I love working with strong developers, but the current process surrounding that team feels off. I don't mind working on a team with lots of junior developers.  I absolutely love mentoring.

What questions am I not asking?  What am I not considering when picking a team?",1603752165.0,2020-10-26 18:42:45
966,"Leads or principals: how to handle it where you're expected to know ""everything""?",13,jgrkzp,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/jgrkzp/leads_or_principals_how_to_handle_it_where_youre/,29,"Anyone here a lead or principal and know how to navigate what I’m calling the “lead trap”, where you are so senior that you’re expected to know nearly everything about all things, and asking questions is a sign of some arbitrary weakness and/or ""not showing leadership""?

I'd think it's a problem with my current company but I'm in my 2nd company in a row where I'm getting serious crap from my manager because I'm asking technical questions when I'm stuck. Is this a way of them getting me to nope out on my own?

**Edit**: Some examples of this:

\- I was having a problem with a bat-crap crazy error message. I posted about it after looking for a while. Turns out it was a typo in a Spring config file, got dinged because ""you should have done some more looking"".

\- Our system is  Java Spring framework. I'm expected to know what Spring can do and got dinged because I didn't know about conditionals. 

\- I see weird error messages so I ask (now ""asked"", past tense) on slack if someone has seen this before and what it could be. 

in short, manager says that I should be answering not asking questions and asking them is not setting a good example",1603502733.0,2020-10-23 21:25:33
967,[Question] How do you organize your technical documentations inside your team?,14,iifkph,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/iifkph/question_how_do_you_organize_your_technical/,12,"Hi,

we are a small team working on a new product. We would like to follow good practices to democratize access to knowledge inside the team, and document the process & product-specific technical details. ""Knowledge sharing"" is something we would like to focus on within the team. 

Since I didn't work in big companies, I -personally- am not aware of how  teams document such things there. However, what worked for us for now is confluence with clear sections (e.g. administrative things, infrastructure, services, etc). The difficulty is that it is hard for some people to navigate such bulky structure. 

1/ Do you have a template or examples on how teams that follow good engineering practices usually organize the knowledge. We'd like to learn and improve. 

2/ Which technologies do you really recommend?

3/ Which methodology worked for you?. Keeping in mind that we have different technical profiles in the team + management. 

I assume that this is the best place to hear colourful opinions. Please feel free to openly share.",1598677663.0,2020-08-29 01:07:43
968,"""Extending"" a project as the basis for other projects with extra features, while keeping bugfixes",14,igwxlq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/igwxlq/extending_a_project_as_the_basis_for_other/,20,"We have an extensive and fairly complex API with its own backoffice that we have built as the basis for a number of clients. Those clients have mostly the same demands, but some will need extra features built into that base backoffice.

I'm in charge of figuring out the best solution in how to keep this flowing in a maintainable way that allows us to:

* Sync bugfixes across all projects
* Add new features as extensions of the base project in specific projects
* [Even worse] Share new features that don't belong to the base project across N new projects

Picture this:

* Project A is just a direct copy of the base project
* Project B needs a new `route statistics` feature besides the base project
* Project C needs a new `map` feature and the `route statistics` besides the base project

How would you guys handle this? I'm torn between git submodules, building packages or separate branches for all projects and tag new features derived from `master`, but I can't find any perfect solution.

Thanks in advance.",1598469196.0,2020-08-26 15:13:16
969,Should I stay or Should I go?,14,i8n9l0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i8n9l0/should_i_stay_or_should_i_go/,19,"I (32m) am a senior software engineer and have been at my current company for 3 years.  Like most companies, we are not perfect, but there is a lot to be thankful for.  I am compensated very fairly, have earned the respect of my colleagues, have a good work/life balance, and have pretty good long-term stability.  That being said, it's fairly standard stuff.  A lot of Java / Spring Boot / gRPC / kafka / K8s.

The issue is that for the last 6 months to a year, I've felt as though my career growth has stagnated.  Specifically, I am talking about technical growth.  To that end, I started interviewing about 2 or 3 months ago, and was given an offer that I accepted from a small startup (9 people, I'd be the 10th).  The startup has some serious pros, and some things that I'm also a bit worried about.  I would get the opportunity to grow astronomically both technically and from a platform ownership perspective.  Additionally, the company itself is profitable without ever having raised a series A, although that is planned in the near future.  There are some very smart people that work there, and it would be very intriguing to have the opportunity to learn not just some new tech, but some new core competencies such as data science, machine learning, and analytics.  Tech stack would be Go / K8s / gRPC / Spark / Tensor flow / BTrDB.

The downside, is that I would need to take about a 10% paycut, given that this startup has limited resources, with the promise of a near-term adjustment to market once funding is procured.  Additionally, they have offered me a pretty significant chunk of equity as well (0.5%).

As previously mentioned, I accepted the offer.  After receiving news that my background check completed, I went to provide notice to my current company, who responded to the news by expressing a desire to work with me to put together a new role to keep me.  The role potentially consists of splitting my current team (8 people, 15 micro-services) into two parts, and I would be promoted into a management role.  I get to pick the services and the team members that I would keep.  They are also proposing a small compensation boost as well, but I don't know the specifics yet - still waiting on them to get back to me.  It's also worth noting that at my current company, managers are NOT just day-to-day people managers.  They are expected to code, and they spend the majority of their time contributing to the architectural and technical direction of not just their team, but of the collective company by participating in big-picture decision-making beyond that of a typical senior engineer.  TLDR; it's not just a promotion into people management, I would get the opportunity to grow technically from an architectural and design standpoint.

Im genuinely torn.  I've been at this company for 3 years, and built a lot of relationships.  I also have some RSUs that represent a pretty decent amount of money that I am walking away from by leaving.  That being said, I fear that if I stay I am losing out on an opportunity to real amplify my technical growth and expand into some different knowledge domains.

Accepted new offer:
185/yr, 0.5% equity

Current company’s response:
230/yr, keep existing equity (worth about $240k, assuming I stick around for ~18months), get promoted to a technical engineering management role.

Edit:

Thanks everyone for your feedback.  I decided to stay with my current employer and pursue the management route.  The money they were offering, combined with my doubts as to whether or not the startup was truly a blue chip prospect ultimately lead me to staying.",1597298460.0,2020-08-13 02:01:00
970,Feeling demotivated and out of touch,15,i4pfdm,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i4pfdm/feeling_demotivated_and_out_of_touch/,7,"Been a .Net web app developer for 12 years. In the beginning it was awesome, I learned a lot, grew very fast became team lead, etc. Then I quit, bounced around a couple of jobs, went back to uni. Been with the same company for 5 years stuck in a ""senior"" role. Recently got offered Amazon interview, but after 2 weeks of leetcode, flunked out right in the online assessment due to time limit.

Current company is not bad, but I can't grow here. Team is too small. I would like to switch, but am disheartened by the tech interviews these days. Seems like it's very tough because the time pressured questions aren't realistic and I would need at least 6 months of dedicated practice time to get good at tech interviews.

Any advice? Any companies that focus more on a take home type project that someone can recommend?",1596739054.0,2020-08-06 14:37:34
971,How do you make time for side projects?,14,i2z1e0,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/i2z1e0/how_do_you_make_time_for_side_projects/,22,"
I'm a senior backend engineer.     I'm usually very busy with my normal full time job.   I usually work for companies that are very product focused.   So that means narrow deadlines with a lot of work to do.   Either that or I am hired to clean up projects, which require a lot of personal time to get them right.   I'm always working on understaffed teams witu tons of work to do.  Honestly I just feel that after an 8 hour day of meetings and coding.   I'm mentally drained to the point I just want to toss in some Netflix or play some games and give my mind a rest.  

On the other hand there are so many project ideas that I'm interested in working on.  Some are are a but out of my skillset like building a storage engine from scratch.  And some play into my interest like working on more blockchain projects.   I do spend a lot of my personal time studying and researching.  Or even reading souece code of existing projects.  But i spend very little of my personal time building new projects or even coding.

I sometimes get asked by recruiters to give my github.   And my github is fairly inactive as I usually don't have many personal projects on there.   I would love to do more personal projects, especially during COVID where we're in need of innovators.   How do you balance your time, particularly senior developers?  I find it hard to really work without pressure, to the point I never get started.  Would love to hear some tips and tricks.",1596497258.0,2020-08-03 19:27:38
972,Never been promoted in 7 years. How to best explain this to companies that expect progress and growth?,16,hvha5c,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/hvha5c/never_been_promoted_in_7_years_how_to_best/,9,"I've been going around hopping companies for the last 6-7 years. These companies never gave me a more descriptive title other than ""software engineer"" so I went with it and considered it a mid-level move beyond junior level.

Since then all I've been doing so are are the same kinds of things in terms of responsibilities. Study and review specs and design mockups, resolve tickets assigned to me, attend usual meetings and standups. No assisting new workers, no say in hiring or top-level product design. Just an IC through and through. None of these companies have massive teams or crazy division of roles, and they're all under 100 workers. At most you probably get 4 or 5 people per design team and developer team.

My resume is starting to look a bit monotonous. Looking back at my 4 most recent jobs I just carry the same title. I know this could be a turn-off for some companies, but how should I explain the lack of promotion? Or can this actually be good that I didn't jump the gun to senior like so many title-inflating workers do? Is my 7 years a reasonable length of time to be mid-level?

* 3 of the last 4 jobs have been remote.

* Because I am paid as 1099 (no taxes are taken from me) I do not expect for the company to invest in my role long-term unless they convert me to W-2 (which is never). It's very improbable that I would be promoted unless I was a W-2 employee.

* I get paid below market rate so I still have a lot of room to climb up in salary without a change in title

* In my resume, I do not explicitly state I am a 1099 in my jobs. Should I start including that detail?",1595398866.0,2020-07-22 02:21:06
973,Suggestions for Wargames?,13,gs6zr1,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/gs6zr1/suggestions_for_wargames/,8,"I'm a director at a non-tech focused company who is working on revitalizing our technical staff and C-level perceptions of our hard-working sysadmins, security, and programmers.

I lead our developer community of practice and have held a couple of fun events, most recently a coding competition held informally through codewars.

I'm going to be brainstorming something similar with our security architects today and wonder if any of you have any experience with competitive wargame platforms analogous to CodeWars, especially security themed.

If you have any other suggestions I'd also like to hear those!",1590703950.0,2020-05-28 18:12:30
974,Reviewing big pull requests in startups,15,ga641n,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ga641n/reviewing_big_pull_requests_in_startups/,23,"For context, I studied engineering and I'm 2 years into my job as a software engineer at a 5 years old startup with around 30-40 people, where about two thirds are technical people, i.e. researchers, technicians, engineers etc on top of software engineers. This is my first job in industry as previous internships I had were all very academic so my only real impression of what is supposed to constitute good coding practice comes from this job.

As you might expect from a startup, we're kind of under-resourced and we get sucked into several projects at any one time. Quite often we find ourselves having to make compromises when it comes to good coding practices because we need to deliver stuff quickly.

In particular, one thing that seriously annoys me that I can't seem to find a way around is when huge Pull Requests (PRs) come in on codebases I'm maintaining/developing. I've read and been told that PRs should always be small and simple, and if the feature request is complex, break it down into manageable parts. But in practice, I've found that we almost never have the time to do that (I've been guilty of opening some of them myself).

And this frustrates me, especially as the reviewer. I find myself getting really lost when I need to review several thousand lines long PRs because when it becomes that long, I almost always begin missing things. Even worse, when the deadline approaches I sometimes have to bite the bullet and allow PRs to be merged even if I'm dissatisfied with some design decisions.

In case some of you are horrified that we do this and that things must be breaking in production all the time, one thing I think my company does do well is maintaining a fairly thorough CI/CD framework. All PRs must pass our CI pipelines before getting merged into production branches. So, while some features may be sub-optimally designed, they (usually) don't break in production. Which is great, but sometimes I think my colleagues take it for granted that passing CI is all that's needed for a feature PR to be merged.

First of all, is this okay? Second, is this normal? Finally, are there any good suggestions to help with this? 

I sometimes comfort myself in thinking, one day, after we've matured our tech stack, we will have the time to go back and patch things up. But another part of me also thinks that those days will never happen because if it works, it works.",1588180227.0,2020-04-29 13:10:27
975,"Managing working for office and personal life,self development",14,g2iwuz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/g2iwuz/managing_working_for_office_and_personal_lifeself/,28,"Hi Guys,

Soft Dev - Front End

1. How do you guys manage work if a task is given which does not get completed within the office hours irrespective of deadline ?Do you sit after and work in your personal hours just to get it done or care enough to continue following day (w deadline/wo deadline) ?
2. This leads to manager misusing you knowing that you are ready to sit late to get the task done, when you sat for few times,it happens and i don't know is it due to my incapability to solve the problem or the problem itself is going to take long time to solve 
3. If you do work for ofc in personal hours how do you manage time to learn & build something for yourself as working or learning related to office takes up time?
4. I feel anxiety knowing that i could have completed it within ofc hours if i sat a little late but sometimes become long so i don't do it and work for personal stuff?How to manage
5. Does giving your best means sitting late anyhow and do whatever it takes to complete the task done?Watching others sitting late feels i am not giving my best and not being honest to ofc work
6. We do say health is important even for me, but somehow mindlessly i end up giving more time to office work in personal hours doing it, i have seen people sitting late and not caring about  health for the sake of money,how to manage stress,burnout and imposter feelings?
7. How to really disconnect your mind from the bubble of office work after office hours?What works?

P.S:- I have seen posts related to stress,burnout but need some help on my questions :(. Thanks",1587085451.0,2020-04-16 21:04:11
976,Are seniors expected to do constant context switching?,14,fxtsod,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fxtsod/are_seniors_expected_to_do_constant_context/,13,"I am at a point in my career where I will be transitioning into senior positions within 1-2 years.

In my company, I noticed that seniors are constantly supporting multiple teams and doing the work for multiple teams under the sams technical leader.

Is that the expectation on the field?

I personally dislike the switch between teams as it stops me from understanding any of the problems in depth and in general it distracts me, but maybe it is the expectation of this kind of positions? 

I would like to focus on one project and lead it to completion, but maybe that's not the kind of work that Seniors are supposed to do.

Thanks for sharing your experience",1586472805.0,2020-04-09 18:53:25
977,Should I express to leadership that I'm open to a substantial pay cut in case the company decides to do layoffs?,14,fvot6s,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fvot6s/should_i_express_to_leadership_that_im_open_to_a/,30,"So COVID-19 economical impacts seem to unravel strongly week by week. As of now, my company has said that there are no plans to do layoffs, and if the revenue doesn't drop further we should be okay. They've blocked all expenses, and we are on a hiring freeze.

The thing is I'm relatively new to this company, most of the engineers are tenured at this company, meaning they're making less than I do (I have this confirmed) and they're more valuable to keep things afloat.

My financial situation is not too bad, I can get by for 6 months on savings and if I move back in with parents, maybe an entire year. But I really don't wanna be unemployed and searching for a job in this climate, I'd happily take a 40% cut and would start looking.

I've never been unemployed in my career, and I'm seeing on LinkedIn that things can be quick and dirty. In your experience, would volunteering for a pay cut be a viable option to avoid layoffs?",1586162097.0,2020-04-06 04:34:57
978,"As an experienced developer (especially web devs), how much are you expected to know about the deployment process of the software you work on?",14,fobidj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fobidj/as_an_experienced_developer_especially_web_devs/,47,"Perhaps it's because I didn't work in the right places but I know very little to nothing about website deployment. Been the official intro guide to Kubernetes and, looks like all the companies I worked for use the ""Traditional Deployment"" route with web apps/websites directly on the OS with server.

I'm not experienced with the post-Kubernetes world of deployment. Believe it or not the last time I was involved in any part of live deployment (for work) was back in 2013, so my approach to setting up websites and apps has largely remained the same with some exceptions. At work I'm not expected to plan ahead for scaling. I'm just expected to do feature work on a local version of my app, test it locally, then on a staging server via manual QA testing. Nothing is really automated from the local-to-staging phase and I have no clue about the live servers. It always feels like there's a big wall separating me from the deployment phase.

How is it like at your company? Are you expected to know a lot about deployment even if you mainly close tickets and do feature work as a developer? Is this how average developers work these days?",1585107353.0,2020-03-24 23:35:53
979,Avoiding Stock Dilution,14,fn8lzw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/fn8lzw/avoiding_stock_dilution/,28,"Hi,

I'm joining a startup as one of the first 10 Engineers.  I was wondering what I should ask for to avoid dilution of my stock?

EDIT: The startup's product will target critical government work that will not be affected by Corona.  Please consider this a given in your advice.",1584944875.0,2020-03-23 02:27:55
980,Tools for adjusting to remote work for Engineers who work better in close proximity,14,fg3isw,ExperiencedDevs,https://www.naveed.dev/posts/remote-work-engineer-tips,3,,1583822966.0,2020-03-10 02:49:26
981,Solution Architect Role,14,f1bcrl,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/f1bcrl/solution_architect_role/,5,"Hi, recently at work I was told that I would be a solution architect. I was told that I would need to be designing the solutions and talk with different stakeholders to come up with plans for projects. What’s a more clarification of the role and what can I do to do well on the job?",1581296284.0,2020-02-09 19:58:04
982,Trying to make the best of this career,14,eznql3,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/eznql3/trying_to_make_the_best_of_this_career/,7,"I studied extremely hard for months for a high caliber company that has modeled its interview style after the Google/FB interviews. I got to a point where I could finally solve ""hard"" level leet-code questions. I did half a dozen mock interviews and felt more confident than I have ever been while interviewing. I even had a referral at this company and they assured me I would do really well and everyone would like me.

Well, after all that preparation, two phone screens, a flight across the country, a six hour on site interview, and waiting almost two solid weeks, I didn't get an offer. The interview was absolutely nothing like the mock ones I used to practice. The technical questions were hard in ways that were very specific to the niche area that the company operates. The recruiter commented that people thought I was nervous. No kidding.

I could make excuses for myself, but the fact is that I just did not do well, despite trying hard and preparing as well as I could. I have actually never passed this style of interview and it makes me doubt if I am in the correct career. Software dev has changed from when I was growing up, and I don't know if  I am a fit for this career anymore. I like learning new databases and languages, but I don't like the culture and the older I get, the more out of step I feel with employers and my peers in this field.

I had another offer from a small local company which I accepted, because I don't want to be unemployed for another 3-4 months. I'm going to make the best of it. I hope that I will have a better experience with this company. They're a small place and seemed really excited that I accepted the offer, and I will have a more senior position there.

If I get laid off again I'm going to call it quits and move on to another line of work. I honestly feel like this experience of being laid off, interviewing, getting rejected, and  repeating it every year is just killing any real interest I have left in programming. The actual work is often very repetitive and janitorial, but we are expected to be on par with MIT graduate students for algorithm knowledge, to be experts on everything from SQL to the latest flavor of the day language.

I honestly feel that even if it this job does work out, my long term plan is going to have to include getting out of the tech field, or transitioning into something different, like technical writing, which I quite enjoy, but which I'm sure will not pay much. I can't imagine doing this in ten years if I am going to continually have this experience with interviewing.

Thanks for reading",1580996830.0,2020-02-06 08:47:10
983,How do people feel about Microsoft?,14,ekdt99,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/ekdt99/how_do_people_feel_about_microsoft/,37,"No doubt, Microsoft is one of the biggest, most sought after tech companies in the world. However, I grew up in a period when they were seen as the bad guys, from the Antitrust case, to the Halloween documents, and many things in between. Like many, I dived into the world of computers through Windows, but I’ve since switched to *nix systems with no intentions of ever going back (if Windows goes Unix maybe I’ll reconsider?).

However, I recognise that times have changed, and Microsoft is now seen more as a champion than the villain they used to be. They now seem to have a really good reputation in the open source community being one of the biggest contributors. Github remains open source friendly and it actually seems to be getting better. They’ve since embraced GNU/Linux on both cloud and desktop. All in all, I think they’ve really turned things around brilliantly.

Somehow though, I’m still optimistically cautious about them. I still prefer to use alternatives to their products (well maybe aside from Github) because I feel like they still aren’t fun to use (and since there’s usually an inexpensive or free offering that works just as well if not better). I started this discussion because I’m deliberating if I should even consider sending my application (not that I’m confident I’d get hired) if I feel this way about them/their products... Can anyone here share some lesser known Microsoft projects that might be of interest?",1578264141.0,2020-01-05 17:42:21
984,How to fill in the gaps?,13,e9b214,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e9b214/how_to_fill_in_the_gaps/,8,"I've (24) been a software engineer professionally for about 4 years now but have been coding for many years prior. In that time I've worked for government departments, startups, freelance and have worked on countless projects. I briefly studied CS in college but dropped out to work at a startup, so I'm primarily self taught and feel fairly confident in my ability to build products, learn new tech, communicate with co-workers/managers etc. 

Currently I work for a well-known SF based company. I also have a side-business building software for clients that is fairly successful (I could do it full-time if I wanted).

Nonetheless I still feel insecure sometimes about possible gaps in my knowledge while also being relatively young. Despite having successfully worked on big projects in many different kinds of settings I feel like there's fundamental concepts I may not have been exposed to because of my rather ""unorthodox"" career path. I'm constantly being reassured by friends and peers that I didn't miss out on anything but I still can't help feeling that I did.

Any advice for someone that's been in a similar position? Is this feeling something you eventually shake off? Were there books/courses you read that helped? Does it make sense to try to finish my degree part-time?",1576118228.0,2019-12-11 21:37:08
985,15 years experience with different programming languages but no speciality.,13,e5sxse,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/e5sxse/15_years_experience_with_different_programming/,9,"For the last 3 years I've worked in Java EE, and then 1 year I've been working on docker/kubernetes and  Go programming for kubernetes. I don't want to switch jobs now but maybe 1 year down the line and would like to work in a tech company like shopify. Most of the job calls I'm getting are for Java/ Spring Boot but they expect me to be an expert with java and api development which I'm not since I did not work on them for a long time.  I think I need to build my speciality. What do you guys suggest - should I focus on Spring boot API dev or work on Go and Kubernetes?",1575458343.0,2019-12-04 06:19:03
986,"Started my career by jumping on the wrong train (LAMP/PHP). What subset of companies can I work at that I can not only user more in demand tech, but also respect my shortcomings?",14,dsqylj,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dsqylj/started_my_career_by_jumping_on_the_wrong_train/,25,"Career decisions such as, I joined a web agency that does PHP/LAMP and kind of pigeonholed myself into that stack well into the mid 2010's. Then a ton of businesses in the local market sector wanted me to know Node, and front end JS frameworks. Then they decided my knowledge of MVC that I learned from CodeIgniter was not enough to make them consider me for MV* work in React or Angular (despite the fact that PHP is still widely used) And it seems like bootcamp grads with these skills are preferred over me. Big ouch.

I don't know of any company that I interviewed that hit them in the feels with my experience. No manager that said things like ""You started with LAMP work? I feel ya my dude, let's hire you and get you caught up with 2019 in web development."" It appears that everyone ignores those that are interested in learning the new weapons in favor of those that are already packing heat. 

And it figures, with all the bootcamp grads that are obviously not learning PHP but React and AWS and they will run Sonic-speed rings around you with those skills. It's discrimination towards developers who want to catch up but aren't caught up. At the risk of sounding like a boomer, a lot of new-school companies don't respect the old-school experience.

Feel free to suggest anything outside of the Big N. Nothing against those companies but seeing as we are experienced developers I hope we are above the Big N or bust tunnel vision. I want to diversify my portfolio of job options.",1573122708.0,2019-11-07 05:31:48
987,Are government jobs an easier route towards saving for retirement?,15,dohvta,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/dohvta/are_government_jobs_an_easier_route_towards/,16,"I'm age 37 and very single with no kids. Currently I have about $2k savings and would like to start actually planning for my retirement since I have not worked a day that contributed anything to 401k or other pension plan and I'm already in my late 30's. I recently opened a new checking account as one of my constant back and forths between having positive net worth and having debt. I haven't been able to save money in the long run. Been burned out by a lot of temp work at smaller companies that don't hire full-time and lay off people from restructuring.

Government work may not be very lucrative but is it a mostly reliable path towards a more secure retirement? The reason I am considering government work in software is because I am not good enough to get any good offers at companies despite having gone to dozens of interviews in the past couple of years. I interview and interview but my number of full-time offers remains at zero. I have stopped trying to get into private enterprise jobs. So getting into government work sounds like it would be a path of lower resistance in the career.

Edit: I don't mean contract government work because that is still too risky. Seeking W2 only.",1572336458.0,2019-10-29 04:07:38
988,"Is it better to focus on being purely technical, or mixed between technical and business focused?",14,d9sjzw,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d9sjzw/is_it_better_to_focus_on_being_purely_technical/,6,"I had a meeting with my manager several days ago and he said that ""it's not a bad thing, but..."" I spend a lot of time focusing on the business side of things rather than the technical side. 

Specifically, I demo a bunch of stuff to business partners, clarify requirements, deal with other teams whose applications interface with outs, and so on. All technical things but not straight development.  I spend probably 85-90% of my time coding and the other 10-15% doing the above stuff. My other coworkers are probably between 0-5% of their time spent on the above. 

My manager phrased it like it was a bad thing, but I see it as making sure we're building the right thing and on track. How good/bad is this really?",1569572390.0,2019-09-27 04:19:50
989,Suggestions for getting back into Dev,14,d5gm7b,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d5gm7b/suggestions_for_getting_back_into_dev/,4,"Hi... I'm not sure if this is the right sub to post this, so if I'm out of line, please let me know where would be a more appropriate sub to post this...

I'm old. 50 years to be precise. I left software development in 2008 to help my family start a non-tech business... TLDR, it was a mistake. My real passion has always been dev. I want back in!   

I have a BSc. in Computer Science. I worked full-time from 1991 until 2008. I was a contractor doing C, C++, VB, .NET, SQL, Ruby, real-time systems, embedded systems, Windows apps, Web apps, etc... I worked on contracts for IBM, Microsoft, Getty Images and a number of startups. All this in the Seattle and Vancouver, BC areas. Over the last 10 years, I gained a lot of business and management experience from running the family biz.  


Now I know times have changed with all the new languages and environments out there, so I'd like any suggestions / tips / ideas from the community for someone in my situation and with my skills (dev and business) to get back into dev / tech. I currently live outside the US (Moscow), but I would be able to work remotely from here. 

I look forward to any kind offers of advice.",1568753930.0,2019-09-17 16:58:50
990,Help in adapting to a newly acquired company,15,d3ojue,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/d3ojue/help_in_adapting_to_a_newly_acquired_company/,5,"The company I worked with was recently acquired and we're working with a new set of people (form PMs, developers, testers, etc.). It's basically like getting a new job. The people are friendly, but I've somewhat of a minor obstacle that may be become major:

I've been assigned to be trained by this lady tester who ""seemed"" to be stressed out with her current assignment; you won't see her being stressed out until you work closely with her. In general, she's actually nice but doesn't seem to be able to maintain her composure during uncertainties (she looked like she's going to faint when she's stressed out! lol), and she does come across as someone that micromanages. I wanted to make an ""impression"" by showing a work-list that I've done for the week but she dismissed it and mistakenly think they they are ""repeating test cases"".

Honestly, I don't mind her that match but I'm sensing she may be something that can blow into something bad. My new boss wanted to see me to plan out my career and he said I can raise any concerns during that time. This is the part that I'm worried about:

1. Should I raise my concerns to the new boss?
2. Or just ride it out?

I'm worried that the lady may be ""complaining"" about me due to her anal retentiveness or just full on under pressured for things that have nothing to do with me; so my justification is might as well inform the boss of this ""observation"" I saw towards the lady.

In general also, when do we normally raise something similar to this situation (i.e. problematic staff) to our bosses? Immediately? Need to collect evidence?

Thanks folks. I really need help on this one : /",1568406645.0,2019-09-13 16:30:45
991,Software jobs to apply to if you're experienced but your experience mostly sucks?,15,clanj5,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/clanj5/software_jobs_to_apply_to_if_youre_experienced/,5,"Since graduating with an unrelated degree and teaching myself software programming, I have gone through a string of jobs where it turns out I've mostly been doing the same thing day in and day out. 

The only jobs I could get any offers are small mom & pop biz not looking to scale up, and web agencies. All of these places have local developer teams of less than 5 and I'm usually the only person in a project, never having access to learn from more experienced developers.

I wanted to learn more from my co-workers about what it means to work as a developer, but getting tired of only talking with project managers, or developers that live in other continents (my dev co-workers). I had one interview with a small business that deals with product photography, and remember asking if I would be working with a senior developer that would mentor me, the company owner gave me a squeamish look.

 I thought I was doing fine for myself, but more and more I've just been phoning it in with these jobs. Doing the same kinds of web dev problems, not really learning much of anything in terms of businesses that scale, or new technology (I don't even know how to deploy a testing framework, or spin up cloud services).

To make matters worse, I've been unemployed since March which I'm sure is a rarity for an experienced dev of 7 YOE in the US. I still can't tell whether it's impostor syndrome or if I'm objectively just that bad. Most companies don't even consider interviewing with me.

My criteria for a job is simple: It needs to compensate reasonably well, and have a good engineering culture. Only such places would I be able to spread my wings and take off. 

I don't care where I work at as long as it offers more career growth than any of my last jobs by a wide margin. I'm underqualified for more senior jobs (people expect me to have experience undertaking larger challenges) and overqualified for entry level/new grad programs. Where do I aim for in terms of jobs that would a be a good fit for people that have become complacent too much and want to redeem themselves?",1564812273.0,2019-08-03 02:04:33
992,3 big corporations - equally great buy unsettled after the interview - help me out experienced devs : /,15,cgrp7e,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/cgrp7e/3_big_corporations_equally_great_buy_unsettled/,18,"So I went for 3 separate interviews where each place is probably bigger than the other; let's call them A, B and C with decreasing order of ""bigness"".

Upon first impression (for any folks they may have heard them) they are, to me, great (as in far better than my current place prestige wise) and hopefully stable but after the interview stage, I felt a bit unsettled, and I really need some advice from the experienced devs : (

&#x200B;

* **A** (think FAANG-like level here)
   * A has *nothing*! Literally. They want me to join and  develop, manage or be a champion of a new process/ department that they are setting up.
   * '*Nothing*' here means they don't have anything in place for this new department X but they do have other departments that are already working (and are actually rather old and ageing). Department X needs to interact with these other fossil departments ...
   * I sense the person I'm reporting to is ***over his head and drowning but still sane***. He's still new to the company as well (6 months in). I also sense (clues from the interview) that several people have left (hinting high turnover).
   * I don't think I've a problem with what they're asking me, but I sense the person I'm reporting to would have some unmanageable expectations or I need to manage his expectations which may be quite the tasks ...
   * Pros for A - if I survived this company, I will be ""forever immortalise"" for working with A and ""working with A"" would be opening up new doors in future (lol, yes a bit dramatic, but I think it's a legit think to consider).

&#x200B;

* **B** (also very large, but not as large as A, but still a known place)
   * In terms of leadership and teams, it has EVERYTHING - totally the opposite side of A.
   * They just need more people basically - work is super typical - they have a cool product that I like to know more.
   * **The place may be rigid** as procedures are already established (may have some rigid politics as well I think). Bosses may be rigid too.
   * Location is somewhat far (but less traffic than A - A is somewhat of a pain to get to as it's in the centre of the city - B is a campus based company somewhere outskirts).
   * Pros for B - also a good company but not as prestigious as A. May open new doors but I don't think it would be A level prestigious.

&#x200B;

* **C** (also large but at the bottom relative to A and B)
   * Though C is actually quite an established company, it's just opened its new branch in my area - 10 people.
   * Just like A, I need to establish ""new everything"" (though they actually have several existing process and shit they want me to maintain but they are open to R&D).
   * Similar to A as well, the person **I'm reporting may be clueless of my role/ tasks** and I've to ""manage their expectations"" as well ... but I think this may not be as bad as A (like not drowning or anything).
   * Startup feel ... not really over the moon but okay I guess.
   * Pros for C - location is okay and safe. Product is known and a new field for me.

&#x200B;

We'll assume the salary is relatively similar (however, A may have an edge with bonuses and other packages, followed by B and then C).

I know it's up to me to decide but I hope any of the experienced devs can give me some views, perspectives or whatever you can extract or derive from what I wrote e.g. what I should be mindful, taking care of so and so and others.

I so need to get this out of my chest as it's been bogging me for a few days already ; (

&#x200B;

Thank you so much devs!",1563912072.0,2019-07-23 16:01:12
993,Need help deciding what to do next with my career,14,c4118a,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c4118a/need_help_deciding_what_to_do_next_with_my_career/,10,"Hi, I am currently at a crossroads and I need help with making a decision about what to do next with my career.

I am currently a developer at AWS (been here for about 2 years) and this is my first job after college. I am deciding between one of the following:

- Stay at Amazon: I like the culture here and I enjoy the fast pace. I work in one of the teams responsible for the development of one of the more well known AWS products and we work at a very large scale.
- Switch to another big company like google or facebook: This will probably give me a salary bump - jumping between large companies always does. I am fairly confident with my interviewing skills. I expect the work to be similar to what I currently do in terms of complexity and scale.
- Switch to a startup: This will be very bad for my salary but my work will probably have a greater scope/influence.

The reason I am considering switching is because there is a very noticeable difference between engineers like me and some of the better senior engineers and principal engineers that I have had the opportunity to work with. Although I have developed new features and I work with something fairly complex, I have not built it from scratch and I have not gone through the struggles involved with building something ground up - we also have great internal tooling that make life a lot easier and this means there are various other things that I never had to struggle with when I was building new features. I feel like there is a lot of value in these struggles you go through as you learn a lot in the process. 

Additionally although the work I do is interesting, it is also limited in scope when you think about the company as a whole. The product I am working on alone has several teams spanning across multiple countries and aws as a whole works on a much larger scale. Most of the senior/principal/senior principal engineers I have worked with and look up to have developed products ground up, have had a lot of experience working with various different things both at amazon and outside it and they can forsee problems I would not have thought of or considered.

For this reason I have been strongly considering moving to a smaller company. I do not mind working long hours or on weekends, I am in my early/mid 20s and I am unmarried without kids so I do not mind working for slightly lesser pay for a short amount of time. I was thinking about moving to a smaller company for a couple of years, picking up some new skills then going back to a bigger company to work as a more experienced engineer.

The reason for my hesitation is that I am considering making this move only for the sake of learning new skills. It would be completely pointless if I took a huge hit to my salary and got stuck building some boring crud app (not that there is anything wrong with that). Additionally I know that if I make this move I am not going to be working on the same scale that I currently do even if the scope of my work may have more influence across the company.

**So my question is: Given my situation is moving to a startup worth it?  And more importantly have you personally done something like this? If so can you please share your experience?**",1561307130.0,2019-06-23 12:25:30
994,Burning out (again),15,c309tx,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c309tx/burning_out_again/,34,"1 month into a new job and I already feel all the symptoms of burnout. Seems pretty inevitable in this line of work. 

In addition to work, I also try to blog often about programming. Needless to say, it sucks. My next holiday will be in a month or so.

What do you experienced devs suggest? How do you deal with it?

Just as an addition: this is in the financial sector with fairly impatient millionaires on your neck.",1561087243.0,2019-06-20 23:20:43
995,New manager - things I should know?,16,c0xv9h,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/c0xv9h/new_manager_things_i_should_know/,15,"I am becoming a manger after 4.5 YOE as a dev. I had a similar opportunity a while back but got cold feet because I was primarily worried about my own capacity at the time and how to handle a couple of bad eggs.

Anyway, I've changed a lot since and have pretty high confidence that this is the right trajectory for my interests/skill set.

Couldn't find any posts on this topic in this sub, but wondering if anyone has books, tips, etc that you wish you knew as a manager (or that your manager knew). My biggest concern is balancing the ""peer/friend"" with ""performance tracker"" role.  I am a curious enough person that I'll prob stay up to speed with tech trends.",1560637763.0,2019-06-15 18:29:23
996,"Being more or less a temp worker most of my career, what's a good route to follow for more stability?",13,by3htz,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/by3htz/being_more_or_less_a_temp_worker_most_of_my/,3,"In most of my career I have been treated as a temp worker. I would be curious to know if anyone else here started out as a temp contractor. The first place I worked for after college in 2008, they practically treated every rank-and-file person as a temp, making them work in the office but skirting employment laws by hiring them all as 1099s. 

I eventually went back with them three years later, though, to work as a consultant. From then on it was one 1099 job after another, at a startup followed by a very long drought of no work dotted by a few contract jobs for the smallest of businesses. Whatever the case, I hit roadblocks to career progress. Layoffs, or company running out of project budget. 

Tech-wise it's just as bad. Places don't have great software dev practices. I have led a few projects before, but scale at which I've done things is a joke. If you ask me about unit testing, CI or systems development, my mind will draw a blank.

----

My last shot at a ""regular"" salaried job was in 2010 but I didn't stay longer than 3 months. And since I was a junior I didn't really do much at that point to have a strong staying presence. It's now just a minor footnote of my job history.

So as generally being a ""temp"" I don't really have a presence in growth that a person usually does when they get tenure at a company. My avg tenure is 1.5 years. Since I'm not really an employee I don't get stake in a company, I never participated in hiring decisions and don't move up the corporate ladder to lead people. Feels like I'm stuck on a weird holding pattern waiting for the next breakout job to happen. I have tenacity, but that doesn't pay the bills so I need to focus on a set strategy for myself.

----

The strategy right now is to first anchor job stability which means a salaried job, no more temp stuff. In the longer run I wish to reach more career growth to make up for lost time. 

**First option** I'm thinking of is play the Leetcode game and get in the running for a large tech company. I've actually been contacted by Amazon before but I failed the first tech round. Once I'm in, I'm part of a company that has a large in-house career path available.

**Second option** is to go work for a body shop like Accenture. Projects will vary but I will get more client facing experience. I know it's kind of crappy, but considering all that I've done (or not done) in the past, it may be a better more predictable road to take.

**Third option** I think is just to play the ""local market game"" which, for a larger city (but not tech hub) is a game with more randomness than the Leetcode game but possibly more easygoing at work.

If you have other ideas throw them my way but I want to see if any of the three options would make sense to you.",1559993103.0,2019-06-08 07:25:03
997,Anyone take a long break or a year off?,14,blgdbq,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/blgdbq/anyone_take_a_long_break_or_a_year_off/,2,Left my job 3 months ago with the intentions of taking a break from the grind. Spent the last 2 months working on some side projects and a month of travel. Really enjoying this break right now and also have been admitted to a masters to study systems. I am highly considering just taking a year off just to do a masters before going back into the industry. Has anyone ever consider this or have taken a long break? What did you do / your thoughts?,1557199075.0,2019-05-06 23:17:55
998,"Been freelancing for several years, and now having trouble getting back into ""regular"" SWE jobs",14,b71n1m,ExperiencedDevs,https://www.reddit.com/r/ExperiencedDevs/comments/b71n1m/been_freelancing_for_several_years_and_now_having/,17,"After losing my job at a startup a few years back due to budget cuts and a big squeeze from sales (the company was going in the red), I've headed out to look for work again. At the time I have worked for four different companies, albeit small ones. These companies tend to make their business by building websites for other small-ish businesses.

So with my experience dealing with small-medium business clients I tried to freelance and seek out my own contract work to help alleviate the job hunt. It did seem like a good call because surprisingly I have not gotten any offers for full time jobs for several years since then.

Only my freelance work has kept me afloat, barely, and I am not looking to keep doing that indefinitely.

Here's the rub. I now have four years of freelance time, which I list as a single ""job"" on my resume, and these are clients that are not all necessarily easy to verify due to being hard to contact. That makes me wonder if, despite getting a phone interview with many companies for a full-time job (including some big ones), they are turned off by my full-time jobs gap of four years.

I feel like that is a possible big problem in getting offers for full-time work. Not to mention that for the whole past year, I was the only developer working on a project. Doesn't bode well to getting re-adjusted to working in a team with a plethora of developers.

Skills I have:

* Languages: HTML, CSS/Sass, JavaScript, PHP, MySQL, Ruby, C#

* Frameworks/techs: LAMP stack, React, WebGL, Ruby on Rails, .NET

* Other tools: Visual Studio, Git, Docker, Node.js

I don't have knowledge of ""cloud"" tools or web services. That's not the kind of work I've been exposed to.

Incidentally some have said that as a freelancer I never really grew beyond my years as a developer because I haven't been exposed to large scale systems.

My personal counter point, I think large scale systems is a domain niche, just as much as front-end development or embedded development are niches.

But it seems a lot of these larger companies are looking for this kind of knowledge and see me too inexperienced. And I apply to some mundane companies too, not the sexy tech ones.

I was humbled when I took the TripleByte 2-hour test because I thought it sounded like a nice shortcut to interview multiple companies. I bombed that. Said I needed help with said large scale systems and need a mentor.

This just gets me more lost and disoriented in where I am on the skills growth side and how to adjust my job search. Do I target junior jobs now? Do I take a crash course on cloud tools? Do I target only small companies, work full-time there as a stepping stone to a larger company?",1553916903.0,2019-03-29 23:35:03
